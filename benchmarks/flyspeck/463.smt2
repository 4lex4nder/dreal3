(set-logic QF_NLR)
(declare-fun y1 () Real)
(declare-fun y2 () Real)
(declare-fun y3 () Real)
(declare-fun y4 () Real)
(declare-fun y5 () Real)
(declare-fun y6 () Real)
(assert
(and
(and (<= 2.46350884418 y1) (<= y1 2.6508))(and (<= 2.0 y2) (<= y2 2.46350884418))(and (<= 2.46350884418 y3) (<= y3 2.82842712475))(and (<= 2.0 y4) (<= y4 2.82842712475))(and (<= 2.0 y5) (<= y5 2.46350884418))(and (<= 2.46350884418 y6) (<= y6 2.82842712475))(not (or (< (+ (* (* y1 y1) (* (* (^ 2.0 0.5) (^ 2.0 0.5)) (+ (- (* y1 y1)) (+ (* y2 y2) (+ (- (* (^ 2.0 0.5) (^ 2.0 0.5)) (* (^ 2.0 0.5) (^ 2.0 0.5))) (+ (* (^ 2.0 0.5) (^ 2.0 0.5)) (* y6 y6))))))) (+ (* (* y2 y2) (* (* (^ 2.0 0.5) (^ 2.0 0.5)) (+ (- (* y1 y1) (* y2 y2)) (+ (* (^ 2.0 0.5) (^ 2.0 0.5)) (+ (- (* (^ 2.0 0.5) (^ 2.0 0.5)) (* (^ 2.0 0.5) (^ 2.0 0.5))) (* y6 y6)))))) (- (- (- (- (* (* (^ 2.0 0.5) (^ 2.0 0.5)) (* (* y6 y6) (+ (* y1 y1) (+ (- (* y2 y2) (* (^ 2.0 0.5) (^ 2.0 0.5))) (+ (* (^ 2.0 0.5) (^ 2.0 0.5)) (- (* (^ 2.0 0.5) (^ 2.0 0.5)) (* y6 y6))))))) (* (* y2 y2) (* (* (^ 2.0 0.5) (^ 2.0 0.5)) (* (^ 2.0 0.5) (^ 2.0 0.5))))) (* (* y1 y1) (* (* (^ 2.0 0.5) (^ 2.0 0.5)) (* (^ 2.0 0.5) (^ 2.0 0.5))))) (* (* y1 y1) (* (* y2 y2) (* y6 y6)))) (* (* (^ 2.0 0.5) (^ 2.0 0.5)) (* (* (^ 2.0 0.5) (^ 2.0 0.5)) (* y6 y6)))))) 0.14))))
)
(check-sat)
(exit)
