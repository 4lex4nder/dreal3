[
4.0
,
6.35040
]
ID:x1
;
[
1.0
,
1.0
]
ID:x2
;
[
1.0
,
1.0
]
ID:x3
;
[
1.0
,
1.0
]
ID:x4
;
[
1.0
,
1.0
]
ID:x5
;
[
1.0
,
1.0
]
ID:x6
;
(
(
ID:not
(
(
<
(
+
(
+
(
/
3.14159265
2.00
)
(
ID:atn2
(
^
(
+
(
-
(
-
(
*
(
-
(
*
(
^
ID:x1
0.5
)
(
^
ID:x1
0.5
)
)
)
(
*
(
^
ID:x1
0.5
)
(
^
ID:x1
0.5
)
)
)
(
*
(
*
2.0
2.0
)
(
*
2.0
2.0
)
)
)
(
*
(
*
(
*
2.0
1.260
)
(
*
2.0
1.260
)
)
(
*
(
*
2.0
1.260
)
(
*
2.0
1.260
)
)
)
)
(
+
(
*
2.00
(
*
(
*
(
^
ID:x1
0.5
)
(
^
ID:x1
0.5
)
)
(
*
(
*
2.0
1.260
)
(
*
2.0
1.260
)
)
)
)
(
+
(
*
2.00
(
*
(
*
(
^
ID:x1
0.5
)
(
^
ID:x1
0.5
)
)
(
*
2.0
2.0
)
)
)
(
*
2.00
(
*
(
*
2.0
2.0
)
(
*
(
*
2.0
1.260
)
(
*
2.0
1.260
)
)
)
)
)
)
)
0.5
)
(
-
(
-
(
*
(
*
2.0
1.260
)
(
*
2.0
1.260
)
)
(
*
(
^
ID:x1
0.5
)
(
^
ID:x1
0.5
)
)
)
(
*
2.0
2.0
)
)
)
)
(
+
(
+
(
/
3.14159265
2.00
)
(
ID:atn2
(
^
(
+
(
-
(
-
(
*
(
-
(
*
(
^
ID:x1
0.5
)
(
^
ID:x1
0.5
)
)
)
(
*
(
^
ID:x1
0.5
)
(
^
ID:x1
0.5
)
)
)
(
*
(
*
2.0
2.0
)
(
*
2.0
2.0
)
)
)
(
*
(
*
(
*
2.0
1.260
)
(
*
2.0
1.260
)
)
(
*
(
*
2.0
1.260
)
(
*
2.0
1.260
)
)
)
)
(
+
(
*
2.00
(
*
(
*
(
^
ID:x1
0.5
)
(
^
ID:x1
0.5
)
)
(
*
(
*
2.0
1.260
)
(
*
2.0
1.260
)
)
)
)
(
+
(
*
2.00
(
*
(
*
(
^
ID:x1
0.5
)
(
^
ID:x1
0.5
)
)
(
*
2.0
2.0
)
)
)
(
*
2.00
(
*
(
*
2.0
2.0
)
(
*
(
*
2.0
1.260
)
(
*
2.0
1.260
)
)
)
)
)
)
)
0.5
)
(
-
(
-
(
*
(
*
2.0
1.260
)
(
*
2.0
1.260
)
)
(
*
(
^
ID:x1
0.5
)
(
^
ID:x1
0.5
)
)
)
(
*
2.0
2.0
)
)
)
)
(
+
(
*
(
+
(
/
3.14159265
2.00
)
(
ID:atn2
(
^
(
+
(
-
(
-
(
*
(
-
(
*
(
^
ID:x1
0.5
)
(
^
ID:x1
0.5
)
)
)
(
*
(
^
ID:x1
0.5
)
(
^
ID:x1
0.5
)
)
)
(
*
(
*
(
*
2.0
1.260
)
(
*
2.0
1.260
)
)
(
*
(
*
2.0
1.260
)
(
*
2.0
1.260
)
)
)
)
(
*
(
*
(
*
2.0
1.260
)
(
*
2.0
1.260
)
)
(
*
(
*
2.0
1.260
)
(
*
2.0
1.260
)
)
)
)
(
+
(
*
2.00
(
*
(
*
(
^
ID:x1
0.5
)
(
^
ID:x1
0.5
)
)
(
*
(
*
2.0
1.260
)
(
*
2.0
1.260
)
)
)
)
(
+
(
*
2.00
(
*
(
*
(
^
ID:x1
0.5
)
(
^
ID:x1
0.5
)
)
(
*
(
*
2.0
1.260
)
(
*
2.0
1.260
)
)
)
)
(
*
2.00
(
*
(
*
(
*
2.0
1.260
)
(
*
2.0
1.260
)
)
(
*
(
*
2.0
1.260
)
(
*
2.0
1.260
)
)
)
)
)
)
)
0.5
)
(
-
(
-
(
*
(
*
2.0
1.260
)
(
*
2.0
1.260
)
)
(
*
(
^
ID:x1
0.5
)
(
^
ID:x1
0.5
)
)
)
(
*
(
*
2.0
1.260
)
(
*
2.0
1.260
)
)
)
)
)
(
-
1.00
)
)
(
*
1.00
(
*
2.0
(
-
(
+
(
/
3.14159265
2.00
)
(
ID:atn2
(
^
(
+
(
-
(
-
(
*
(
-
(
*
(
*
2.00
1.260
)
(
*
2.00
1.260
)
)
)
(
*
(
*
2.00
1.260
)
(
*
2.00
1.260
)
)
)
(
*
(
*
(
*
2.00
1.260
)
(
*
2.00
1.260
)
)
(
*
(
*
2.00
1.260
)
(
*
2.00
1.260
)
)
)
)
(
*
(
*
2.00
2.00
)
(
*
2.00
2.00
)
)
)
(
+
(
*
2.00
(
*
(
*
(
*
2.00
1.260
)
(
*
2.00
1.260
)
)
(
*
2.00
2.00
)
)
)
(
+
(
*
2.00
(
*
(
*
(
*
2.00
1.260
)
(
*
2.00
1.260
)
)
(
*
(
*
2.00
1.260
)
(
*
2.00
1.260
)
)
)
)
(
*
2.00
(
*
(
*
(
*
2.00
1.260
)
(
*
2.00
1.260
)
)
(
*
2.00
2.00
)
)
)
)
)
)
0.5
)
(
-
(
-
(
*
2.00
2.00
)
(
*
(
*
2.00
1.260
)
(
*
2.00
1.260
)
)
)
(
*
(
*
2.00
1.260
)
(
*
2.00
1.260
)
)
)
)
)
)
)
)
)
)
)
0.00
)
)
)
)
(set-logic QF_NRA)
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun x3 () Real)
(declare-fun x4 () Real)
(declare-fun x5 () Real)
(declare-fun x6 () Real)
(assert (<= 4.0 x1))
(assert (<= x1 6.3504))
(assert (<= 1.0 x2))
(assert (<= x2 1.0))
(assert (<= 1.0 x3))
(assert (<= x3 1.0))
(assert (<= 1.0 x4))
(assert (<= x4 1.0))
(assert (<= 1.0 x5))
(assert (<= x5 1.0))
(assert (<= 1.0 x6))
(assert (<= x6 1.0))
(assert (not (< (+ (+ (/ 3.14159265 2.0) (arctan2 (^ (+ (- (- (* (- (* (^ x1 0.5) (^ x1 0.5))) (* (^ x1 0.5) (^ x1 0.5))) (* (* 2.0 2.0) (* 2.0 2.0))) (* (* (* 2.0 1.26) (* 2.0 1.26)) (* (* 2.0 1.26) (* 2.0 1.26)))) (+ (* 2.0 (* (* (^ x1 0.5) (^ x1 0.5)) (* (* 2.0 1.26) (* 2.0 1.26)))) (+ (* 2.0 (* (* (^ x1 0.5) (^ x1 0.5)) (* 2.0 2.0))) (* 2.0 (* (* 2.0 2.0) (* (* 2.0 1.26) (* 2.0 1.26))))))) 0.5) (- (- (* (* 2.0 1.26) (* 2.0 1.26)) (* (^ x1 0.5) (^ x1 0.5))) (* 2.0 2.0)))) (+ (+ (/ 3.14159265 2.0) (arctan2 (^ (+ (- (- (* (- (* (^ x1 0.5) (^ x1 0.5))) (* (^ x1 0.5) (^ x1 0.5))) (* (* 2.0 2.0) (* 2.0 2.0))) (* (* (* 2.0 1.26) (* 2.0 1.26)) (* (* 2.0 1.26) (* 2.0 1.26)))) (+ (* 2.0 (* (* (^ x1 0.5) (^ x1 0.5)) (* (* 2.0 1.26) (* 2.0 1.26)))) (+ (* 2.0 (* (* (^ x1 0.5) (^ x1 0.5)) (* 2.0 2.0))) (* 2.0 (* (* 2.0 2.0) (* (* 2.0 1.26) (* 2.0 1.26))))))) 0.5) (- (- (* (* 2.0 1.26) (* 2.0 1.26)) (* (^ x1 0.5) (^ x1 0.5))) (* 2.0 2.0)))) (+ (* (+ (/ 3.14159265 2.0) (arctan2 (^ (+ (- (- (* (- (* (^ x1 0.5) (^ x1 0.5))) (* (^ x1 0.5) (^ x1 0.5))) (* (* (* 2.0 1.26) (* 2.0 1.26)) (* (* 2.0 1.26) (* 2.0 1.26)))) (* (* (* 2.0 1.26) (* 2.0 1.26)) (* (* 2.0 1.26) (* 2.0 1.26)))) (+ (* 2.0 (* (* (^ x1 0.5) (^ x1 0.5)) (* (* 2.0 1.26) (* 2.0 1.26)))) (+ (* 2.0 (* (* (^ x1 0.5) (^ x1 0.5)) (* (* 2.0 1.26) (* 2.0 1.26)))) (* 2.0 (* (* (* 2.0 1.26) (* 2.0 1.26)) (* (* 2.0 1.26) (* 2.0 1.26))))))) 0.5) (- (- (* (* 2.0 1.26) (* 2.0 1.26)) (* (^ x1 0.5) (^ x1 0.5))) (* (* 2.0 1.26) (* 2.0 1.26))))) (- 1.0)) (* 1.0 (* 2.0 (- (+ (/ 3.14159265 2.0) (arctan2 (^ (+ (- (- (* (- (* (* 2.0 1.26) (* 2.0 1.26))) (* (* 2.0 1.26) (* 2.0 1.26))) (* (* (* 2.0 1.26) (* 2.0 1.26)) (* (* 2.0 1.26) (* 2.0 1.26)))) (* (* 2.0 2.0) (* 2.0 2.0))) (+ (* 2.0 (* (* (* 2.0 1.26) (* 2.0 1.26)) (* 2.0 2.0))) (+ (* 2.0 (* (* (* 2.0 1.26) (* 2.0 1.26)) (* (* 2.0 1.26) (* 2.0 1.26)))) (* 2.0 (* (* (* 2.0 1.26) (* 2.0 1.26)) (* 2.0 2.0)))))) 0.5) (- (- (* 2.0 2.0) (* (* 2.0 1.26) (* 2.0 1.26))) (* (* 2.0 1.26) (* 2.0 1.26))))))))))) 0.0)))
(check-sat)
(exit)
