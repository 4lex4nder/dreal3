[
1.00
,
1.175479655730
]
ID:x1
;
[
1.00
,
1.175479655730
]
ID:x2
;
[
1.00
,
1.175479655730
]
ID:x3
;
[
2.519526329050
,
15.530
]
ID:x4
;
[
2.519526329050
,
16.0
]
ID:x5
;
[
2.519526329050
,
16.0
]
ID:x6
;
(
(
ID:not
(
(
<
(
*
(
*
(
/
2.00
25.00
)
(
+
(
*
(
-
2.00
)
(
*
(
^
ID:x4
5.0
)
ID:x1
)
)
(
+
(
*
256.00
(
*
(
^
(
+
ID:x5
(
*
(
-
1.00
)
ID:x6
)
)
3.0
)
(
+
ID:x2
(
*
(
-
1.00
)
ID:x3
)
)
)
)
(
+
(
*
(
^
ID:x4
3.0
)
(
+
(
*
2.00
(
*
(
+
(
-
256.00
)
(
+
(
^
ID:x5
2.0
)
(
+
(
*
(
-
2.00
)
(
*
ID:x5
ID:x6
)
)
(
^
ID:x6
2.0
)
)
)
)
ID:x1
)
)
(
+
(
*
(
+
(
*
(
^
ID:x5
2.0
)
(
+
(
-
8.00
)
ID:x6
)
)
(
+
(
*
(
-
16.00
)
(
*
ID:x5
(
+
3.00
ID:x6
)
)
)
(
*
16.00
(
+
16.00
(
*
9.00
ID:x6
)
)
)
)
)
ID:x2
)
(
*
(
+
(
*
ID:x5
(
+
144.00
(
+
(
*
(
-
16.00
)
ID:x6
)
(
^
ID:x6
2.0
)
)
)
)
(
*
(
-
8.00
)
(
+
(
-
32.00
)
(
+
(
*
6.00
ID:x6
)
(
^
ID:x6
2.0
)
)
)
)
)
ID:x3
)
)
)
)
(
+
(
*
2.00
(
*
(
^
ID:x4
4.0
)
(
+
(
*
32.00
ID:x1
)
(
*
3.00
(
+
(
*
(
+
(
-
8.00
)
ID:x5
)
ID:x2
)
(
*
(
+
(
-
8.00
)
ID:x6
)
ID:x3
)
)
)
)
)
)
(
+
(
*
200.00
(
^
(
+
(
*
(
^
ID:x4
2.0
)
ID:x1
)
(
+
(
*
8.00
(
*
(
+
ID:x5
(
*
(
-
1.00
)
ID:x6
)
)
(
+
ID:x2
(
*
(
-
1.00
)
ID:x3
)
)
)
)
(
*
(
-
1.00
)
(
*
ID:x4
(
+
(
*
16.00
ID:x1
)
(
+
(
*
(
+
(
-
8.00
)
ID:x5
)
ID:x2
)
(
*
(
+
(
-
8.00
)
ID:x6
)
ID:x3
)
)
)
)
)
)
)
2.0
)
)
(
+
(
*
2.00
(
*
(
^
ID:x4
2.0
)
(
*
(
+
ID:x5
(
*
(
-
1.00
)
ID:x6
)
)
(
+
(
*
(
^
ID:x5
2.0
)
ID:x2
)
(
+
(
*
8.00
(
*
ID:x6
(
+
(
*
4.00
ID:x1
)
(
+
(
*
9.00
ID:x2
)
(
*
(
-
7.00
)
ID:x3
)
)
)
)
)
(
+
(
*
384.00
(
+
ID:x2
(
*
(
-
1.00
)
ID:x3
)
)
)
(
+
(
*
(
-
1.00
)
(
*
(
^
ID:x6
2.0
)
ID:x3
)
)
(
*
ID:x5
(
+
(
*
(
-
32.00
)
ID:x1
)
(
+
(
*
(
+
56.00
(
*
(
-
9.00
)
ID:x6
)
)
ID:x2
)
(
*
9.00
(
*
(
+
(
-
8.00
)
ID:x6
)
ID:x3
)
)
)
)
)
)
)
)
)
)
)
)
(
*
(
-
16.00
)
(
*
ID:x4
(
*
(
+
ID:x5
(
*
(
-
1.00
)
ID:x6
)
)
(
+
(
*
(
^
ID:x5
2.0
)
(
+
ID:x2
(
*
(
-
3.00
)
ID:x3
)
)
)
(
+
(
*
(
-
4.00
)
(
*
ID:x5
(
+
(
*
8.00
ID:x1
)
(
+
(
*
(
+
(
-
20.00
)
(
*
3.00
ID:x6
)
)
ID:x2
)
(
*
(
-
3.00
)
(
*
(
+
(
-
4.00
)
ID:x6
)
ID:x3
)
)
)
)
)
)
(
*
ID:x6
(
+
(
*
32.00
ID:x1
)
(
+
(
*
3.00
(
*
(
+
16.00
ID:x6
)
ID:x2
)
)
(
*
(
-
1.00
)
(
*
(
+
80.00
ID:x6
)
ID:x3
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
(
-
1.00
)
)
0.00
)
)
)
)
(set-logic QF_NRA)
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun x3 () Real)
(declare-fun x4 () Real)
(declare-fun x5 () Real)
(declare-fun x6 () Real)
(assert (<= 1.0 x1))
(assert (<= x1 1.17547965573))
(assert (<= 1.0 x2))
(assert (<= x2 1.17547965573))
(assert (<= 1.0 x3))
(assert (<= x3 1.17547965573))
(assert (<= 2.51952632905 x4))
(assert (<= x4 15.53))
(assert (<= 2.51952632905 x5))
(assert (<= x5 16.0))
(assert (<= 2.51952632905 x6))
(assert (<= x6 16.0))
(assert (not (< (* (* (/ 2.0 25.0) (+ (* (- 2.0) (* (^ x4 5.0) x1)) (+ (* 256.0 (* (^ (+ x5 (* (- 1.0) x6)) 3.0) (+ x2 (* (- 1.0) x3)))) (+ (* (^ x4 3.0) (+ (* 2.0 (* (+ (- 256.0) (+ (^ x5 2.0) (+ (* (- 2.0) (* x5 x6)) (^ x6 2.0)))) x1)) (+ (* (+ (* (^ x5 2.0) (+ (- 8.0) x6)) (+ (* (- 16.0) (* x5 (+ 3.0 x6))) (* 16.0 (+ 16.0 (* 9.0 x6))))) x2) (* (+ (* x5 (+ 144.0 (+ (* (- 16.0) x6) (^ x6 2.0)))) (* (- 8.0) (+ (- 32.0) (+ (* 6.0 x6) (^ x6 2.0))))) x3)))) (+ (* 2.0 (* (^ x4 4.0) (+ (* 32.0 x1) (* 3.0 (+ (* (+ (- 8.0) x5) x2) (* (+ (- 8.0) x6) x3)))))) (+ (* 200.0 (^ (+ (* (^ x4 2.0) x1) (+ (* 8.0 (* (+ x5 (* (- 1.0) x6)) (+ x2 (* (- 1.0) x3)))) (* (- 1.0) (* x4 (+ (* 16.0 x1) (+ (* (+ (- 8.0) x5) x2) (* (+ (- 8.0) x6) x3))))))) 2.0)) (+ (* 2.0 (* (^ x4 2.0) (* (+ x5 (* (- 1.0) x6)) (+ (* (^ x5 2.0) x2) (+ (* 8.0 (* x6 (+ (* 4.0 x1) (+ (* 9.0 x2) (* (- 7.0) x3))))) (+ (* 384.0 (+ x2 (* (- 1.0) x3))) (+ (* (- 1.0) (* (^ x6 2.0) x3)) (* x5 (+ (* (- 32.0) x1) (+ (* (+ 56.0 (* (- 9.0) x6)) x2) (* 9.0 (* (+ (- 8.0) x6) x3)))))))))))) (* (- 16.0) (* x4 (* (+ x5 (* (- 1.0) x6)) (+ (* (^ x5 2.0) (+ x2 (* (- 3.0) x3))) (+ (* (- 4.0) (* x5 (+ (* 8.0 x1) (+ (* (+ (- 20.0) (* 3.0 x6)) x2) (* (- 3.0) (* (+ (- 4.0) x6) x3)))))) (* x6 (+ (* 32.0 x1) (+ (* 3.0 (* (+ 16.0 x6) x2)) (* (- 1.0) (* (+ 80.0 x6) x3))))))))))))))))) (- 1.0)) 0.0)))
(check-sat)
(exit)
