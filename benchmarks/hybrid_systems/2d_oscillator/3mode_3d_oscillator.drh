#define omega 3.14

#define ax 1
#define ay 1.2
#define az 0.8

[-10, 10] x;
[-10, 10] y;
[-10, 10] z;

[-3.14, 3.14] omega1;
[-3.14, 3.14] omega2;

[0, 20] tau;
[0, 20] time;

{mode 1;

invt:   
(x <= 0);
(y >= -10);
(z >= -10);
(omega1 >= -3.14);
(omega2 >= -3.14);

flow:
	d/dt[x] = - ax * sin(omega * tau); 
	d/dt[y] = - ay * sin(omega1 * tau) * omega2; 
	d/dt[z] = - az * sin(omega2 * tau) * omega1; 
	d/dt[omega1] = ( 0 - 0.5 * omega1);
	d/dt[omega2] = ( 0 - omega2);
	d/dt[tau] = 1;

jump: (and (x >= 0) (tau >= 5)) ==> @2 ( and (tau' = 0) (x' = x) (y' = y * 0.2) (z' = z) (omega1' = 0) (omega2' = 1));

}

{mode 2;

invt:   
(x >= -10);
(y >= -10);
(z >= -10);
(omega1 >= -3.14);
(omega2 >= -3.14);

flow:
	d/dt[x] = - ax * sin(omega * tau); 
	d/dt[y] = - ay * sin(omega1 * tau) * omega2; 
	d/dt[z] = - az * sin(omega2 * tau) * omega1; 
	d/dt[omega1] = omega1;
	d/dt[omega2] = ( 0 - omega2);
	d/dt[tau] = 1;

jump: (and (x > 1) (x < 2) (tau >10)) ==> @3 (and (tau' = 0) (x' = 2 * x) (y' = y * 1.5 ) (z' = z) (omega1' = 0) (omega2' = 1));

}


{mode 3;

invt:   
(x >= -10);
(y >= -10);
(z >= -10);
(omega1 >= -3.14);
(omega2 >= -3.14);

flow:
	d/dt[x] = - ax * sin(omega * tau); 
	d/dt[y] = - ay * sin(omega1 * tau) * omega2; 
	d/dt[z] = - az * sin(omega2 * tau) * omega1; 
	d/dt[omega1] = ( 0 - 0.5 * omega1);
	d/dt[omega2] = ( 0 - omega2);
	d/dt[tau] = 1;

jump: (and (x<  0) (tau > 5)) ==> @1 ( and (tau' = 0) (x' = x) (y' = y) (z' = z) (omega1' = 0) (omega2' = 1));

}


init:

@1 (and (x <= 0.1) (x >= - 0.2) (y = 0) (z >= -10) (tau = 0) (omega1 = 2)
(omega2 = 2.5));

goal:

@1 (tau = 10.0);

