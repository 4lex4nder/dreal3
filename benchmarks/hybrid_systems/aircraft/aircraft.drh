[0.28] alpha0;
[0.23] alpha25;
[0.19] alpha50;
[0.2] h0;
[0.8] h25;
[1.2] h50;
[9.8] g;
[10000.0] m;

[150] T;

[0.01, 0.175] alpha;

[20.0, 100.0]	V;
[-3.14, 3.14]	gamma;
[-100.0, 100.0]	x;
[0.1, 2.0]	z;

[0, 100] time;

%%

{
	mode 1;

    	invt:
		(>= V 0);
		(>= gamma 0);
		(>= x 0);
		(>= z 0);
		(>= alpha 0);

	flow:
		d/dt[V] = ( * (/ 1 m) 
			      (- 
				(* T (cos alpha)) 
				(+
				   (* (^ V 2)
				      (+ 2.81
				        (* 3.09
	            			   (^ (+ h0 (* 4.2 alpha)) 2)
				        )
				      )
				   )
				   (* (* m g) (sin gamma))
				) 
			       )
			   );

		d/dt[gamma] = ( * (/ 1 (* m V))
				  (+ 
					(+
				           (* T (sin alpha))
				     	   (* 
					     (* 68.6
					        (^ V 2)
					     ) 
					     (+ h0 (* 4.2 alpha))
				           )
					)
				        (- 0 (* (* m g) (cos gamma)))
				  )
			      );
		d/dt[x] = (* V (cos gamma));
		d/dt[z] = (* V (sin gamma));
		d/dt[alpha] = 0;
	
	jump:
		( and 
			(>= V 0)
			(>= gamma 0)
			(>= x 0)
			(>= z 0)
			(>= alpha 0)
		)
		==> @2
		( and 
			(= V' V)
			(= gamma' gamma)
			(= x' x)
			(= z' z)
			(= alpha' alpha)
		);
}

{
	mode 2;

    	invt:
		(>= V 0);
		(>= gamma 0);
		(>= x 0);
		(>= z 0);
		(>= alpha 0);

	flow:
		d/dt[V] = ( * (/ 1 m) 
			      (- 
				(* T (cos alpha)) 
				(+
				   (* (^ V 2)
				      (+ 2.81
				        (* 3.09
	            			   (^ (+ h0 (* 4.2 alpha)) 2)
				        )
				      )
				   )
				   (* (* m g) (sin gamma))
				) 
			       )
			   );

		d/dt[gamma] = ( * (/ 1 (* m V))
				  (+ 
					(+
				           (* T (sin alpha))
				     	   (* 
					     (* 68.6
					        (^ V 2)
					     ) 
					     (+ h0 (* 4.2 alpha))
				           )
					)
				        (- 0 (* (* m g) (cos gamma)))
				  )
			      );
		d/dt[x] = (* V (cos gamma));
		d/dt[z] = (* V (sin gamma));
		d/dt[alpha] = 0;
	
	jump:
		( and 
			(>= V 0)
			(>= gamma 0)
			(>= x 0)
			(>= z 0)
			(>= alpha 0)
		)
		==> @1
		( and 
			(= V' V)
			(= gamma' gamma)
			(= x' x)
			(= z' z)
			(= alpha' alpha)
		);
}


%%

init:

@1		( and 
			(= V 80)
			(= gamma 0.5)
			(>= x 1)
			(>= z 1)
			(>= alpha 0.01)
		);
goal:

@2		( and 
			(= V 50)
			(< gamma 0.4)
			(>= x 1)
			(< z 2)
			(<= alpha 0.015)
		);

