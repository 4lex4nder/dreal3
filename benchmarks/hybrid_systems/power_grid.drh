[0 , 1] delta_1;
[0 , 1] delta_2;
[0 , 1] omega_1;
[0 , 1] omega_2;
[0 , 1] z;		
[1] P_m1;
[1] D;
[1] G_111;
[1] V_i2;
[1] V_1;
[1] V_2;
[1] B_121;
[1] G_1infty1;
[1] V_infty;
[1] delta_infty;
[1] B_1infty1;
[1] omega_s;
[1] H_1;
[1] a;
[1] B_1infty1;

%%
{
	mode 1;

	flow:
		d/dt[delta_1] = omega_1;
		d/dt[delta_2] = omega_2;
		d/dt[omega_1] = (omega_s / (H_1 * a) ) ; 
		d/dt[omega_2] = 1;
		d/dt[z] = 1;		

	jump: 
		( = z tc * l ) ==> @2 (and (= delta_1' delta_1) (= delta_2' delta_2) (= omega_1' omega_1)
					   (= omega_2' omega_2) (= z' z));
)


{
	mode 2;


	flow:
		d/dt[delta_1] = omega_1;
		d/dt[delta_2] = omega_2;
		d/dt[omega_1] = (omega_s / (H_1 * a) )  ;
		d/dt[omega_2] = 1;
		d/dt[z] = 1;		
	jump: 
		( = z tc * l ) ==> @1 (and (= delta_1' delta_1) (= delta_2' delta_2) (= omega_1' omega_1)
					   (= omega_2' omega_2) (= z' z));
)

%%

init:



