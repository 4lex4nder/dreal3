#define ws 377

#define Tm1 1
#define Tm2 1
#define Efd1 1
#define Efd2 1
#define M1 0.02
#define Xqp1 0.19
#define Xdp1 0.12
#define Xq1 0.86
#define Xd1 0.9
#define D1 0.01
#define Td0p1 6
#define Tq0p1 0.53

#define M2 0.022
#define Xqp2 0.25
#define Xdp2 0.18
#define Xq2 1.25
#define Xd2 1.3
#define D2 0.011
#define Td0p2 5.9
#define Tq0p2 0.6
#define B12 0.1
#define B13 0.1
#define B23 0.1
#define Zs1 30.48
#define Zs2 18.18
#define Rs1 0.1
#define Rs2 0.1
#define K02 1
#define K03 1
#define L02 1
#define L03 1
#define epsilon 0.0001

[0, 1.57] d1;

[350, 400] w1;

[0, 2] Eqp1;
[0, 2] Edp1;
[0, 1.57] d2;

[350, 400] w2;

[0, 2] Eqp2;
[0, 2] Edp2;
[0, 3.14] t2;
[0, 3.14] t3;
[0.8, 1.2] V3;

[0.8, 1.2] V1;
[0.8, 1.2] V2;

[0,10] tau;

[0, 10] time;



{ mode 1;

  
invt:
        
(d1 >= 0);
        
(w1 >= 0);
  
(d2 >= 0);
        
(w2 >= 0);
flow:

d/dt[tau] = 1;        
d/dt[d1] =  w1 - ws;
        
d/dt[w1] = -(D1*(w1 - ws) - Tm1 + Eqp1*(Rs1*Zs1*(Eqp1 - V1*cos(d1 - t1)) - Xd1*Zs1*(Edp1 - V1*sin(d1 - t1))) + Edp1*(Xqp1*Zs1*(Eqp1 - V1*cos(d1 - t1)) + Rs1*Zs1*(Edp1 - V1*sin(d1 - t1))) + (Rs1*Zs1*(Eqp1 - V1*cos(d1 - t1)) - Xd1*Zs1*(Edp1 - V1*sin(d1 - t1)))*(Xqp1*Zs1*(Eqp1 - V1*cos(d1 - t1)) + Rs1*Zs1*(Edp1 - V1*sin(d1 - t1)))*(Xq1 - Xqp1))/M1;
d/dt[Eqp1] = -(Eqp1 - Efd1 + (Xqp1*Zs1*(Eqp1 - V1*cos(d1 - t1)) + Rs1*Zs1*(Edp1 - V1*sin(d1 - t1)))*(Xd1 - Xdp1))/Td0p1;
d/dt[Edp1] = -(Edp1 - (Rs1*Zs1*(Eqp1 - V1*cos(d1 - t1)) - Xd1*Zs1*(Edp1 - V1*sin(d1 - t1)))*(Xq1 - Xqp1))/Tq0p1;
d/dt[d2] = w2 - ws;
d/dt[w2] = -(D2*(w2 - ws) - Tm2 + Eqp2*(Rs2*Zs2*(Eqp2 - V2*cos(d2 - t2)) - Xd2*Zs2*(Edp2 - V2*sin(d2 - t2))) + Edp2*(Xqp2*Zs2*(Eqp2 - V2*cos(d2 - t2)) + Rs2*Zs2*(Edp2 - V2*sin(d2 - t2))) + (Rs2*Zs2*(Eqp2 - V2*cos(d2 - t2)) - Xd2*Zs2*(Edp2 - V2*sin(d2 - t2)))*(Xqp2*Zs2*(Eqp2 - V2*cos(d2 - t2)) + Rs2*Zs2*(Edp2 - V2*sin(d2 - t2)))*(Xq2 - Xqp2))/M2;
d/dt[Eqp2] = -(Eqp2 - Efd2 + (Xqp2*Zs2*(Eqp2 - V2*cos(d2 - t2)) + Rs2*Zs2*(Edp2 - V2*sin(d2 - t2)))*(Xd2 - Xdp2))/Td0p2;
d/dt[Edp2] = -(Edp2 - (Rs2*Zs2*(Eqp2 - V2*cos(d2 - t2)) - Xd2*Zs2*(Edp2 - V2*sin(d2 - t2)))*(Xq2 - Xqp2))/Tq0p2;   
d/dt[t2] = (-((B13^2 + B23^2 + B23*K03*sin(t2 - t3) + 2*B13*B23*cos(t2) + B13*K03*cos(t3) - B13*K03*sin(t3) + B23*K03*cos(t2 - t3))*(L02 + B12*cos(t2) + V2*Xd2*Zs2 + Edp2*Rs2*Zs2*cos(d2 - t2) + Eqp2*Xqp2*Zs2*cos(d2 - t2) + Eqp2*Rs2*Zs2*sin(d2 - t2) - Edp2*Xd2*Zs2*sin(d2 - t2) - V2*Xd2*Zs2*cos(d2 - t2)^2 - V2*Xqp2*Zs2*cos(d2 - t2)^2 - Rs2*V2*Zs2*sin(2*d2 - 2*t2)))/(B12*B13^2*sin(t2) + B12*B23^2*sin(t2) + 2*B13^2*Rs2*V2*Zs2 + 2*B23^2*Rs2*V2*Zs2 - B13*B23^2*V3*sin(t3) + B13^2*B23*V3*sin(t2 - t3) - B13^2*Eqp2*Xqp2*Zs2*sin(d2 - t2) - B23^2*Eqp2*Xqp2*Zs2*sin(d2 - t2) + B12*B23*K03*cos(t2 - t3)*sin(t2) + B12*B23*K03*sin(t2 - t3)*sin(t2) - 4*B13^2*Rs2*V2*Zs2*cos(d2 - t2)^2 - 4*B23^2*Rs2*V2*Zs2*cos(d2 - t2)^2 + B13^2*V2*Xd2*Zs2*sin(2*d2 - 2*t2) + B23^2*V2*Xd2*Zs2*sin(2*d2 - 2*t2) + B13^2*V2*Xqp2*Zs2*sin(2*d2 - 2*t2) + B23^2*V2*Xqp2*Zs2*sin(2*d2 - 2*t2) + B13^2*Eqp2*Rs2*Zs2*cos(d2 - t2) + B23^2*Eqp2*Rs2*Zs2*cos(d2 - t2) + B12*B13*K03*cos(t3)*sin(t2) - B13^2*Edp2*Xd2*Zs2*cos(d2 - t2) - B23^2*Edp2*Xd2*Zs2*cos(d2 - t2) - B13^2*Edp2*Rs2*Zs2*sin(d2 - t2) - B23^2*Edp2*Rs2*Zs2*sin(d2 - t2) - B12*B13*K03*sin(t2)*sin(t3) + 2*B23*K03*Rs2*V2*Zs2*sin(t2 - t3) - 2*B12*B13*B23*sin(t2 - t3)*sin(t2)*sin(t3) + B13*B23*K03*V3*sin(t2 - t3)*cos(t3) - B13*B23*K03*V3*sin(t2 - t3)*sin(t3) + 2*B13*K03*Rs2*V2*Zs2*cos(t3) - 2*B13*K03*Rs2*V2*Zs2*sin(t3) + 2*B12*B13*B23*cos(t2 - t3)*cos(t3)*sin(t2) + 2*B23*K03*Rs2*V2*Zs2*cos(t2 - t3) - B23*Edp2*K03*Rs2*Zs2*sin(d2 - t2)*sin(t2 - t3) - B23*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3) - 4*B13*K03*Rs2*V2*Zs2*cos(t3)*cos(d2 - t2)^2 + 4*B13*K03*Rs2*V2*Zs2*sin(t3)*cos(d2 - t2)^2 - 4*B23*K03*Rs2*V2*Zs2*cos(t2 - t3)*cos(d2 - t2)^2 - 4*B23*K03*Rs2*V2*Zs2*sin(t2 - t3)*cos(d2 - t2)^2 + B13*Eqp2*K03*Rs2*Zs2*cos(t3)*cos(d2 - t2) - B13*Edp2*K03*Xd2*Zs2*cos(t3)*cos(d2 - t2) - B13*Edp2*K03*Rs2*Zs2*sin(d2 - t2)*cos(t3) - B13*Eqp2*K03*Rs2*Zs2*sin(t3)*cos(d2 - t2) + B13*Edp2*K03*Xd2*Zs2*sin(t3)*cos(d2 - t2) - B13*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2)*cos(t3) + 4*B13*B23*Rs2*V2*Zs2*cos(t2 - t3)*cos(t3) + B13*Edp2*K03*Rs2*Zs2*sin(d2 - t2)*sin(t3) + B13*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2)*sin(t3) + B23*Eqp2*K03*Rs2*Zs2*cos(t2 - t3)*cos(d2 - t2) - 4*B13*B23*Rs2*V2*Zs2*sin(t2 - t3)*sin(t3) - B23*Edp2*K03*Xd2*Zs2*cos(t2 - t3)*cos(d2 - t2) - B23*Edp2*K03*Rs2*Zs2*sin(d2 - t2)*cos(t2 - t3) + B23*Eqp2*K03*Rs2*Zs2*sin(t2 - t3)*cos(d2 - t2) - B23*Edp2*K03*Xd2*Zs2*sin(t2 - t3)*cos(d2 - t2) - B23*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3) + 2*B23*K03*V2*Xd2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(d2 - t2) + 2*B23*K03*V2*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(d2 - t2) + 2*B23*K03*V2*Xd2*Zs2*sin(d2 - t2)*sin(t2 - t3)*cos(d2 - t2) + 2*B23*K03*V2*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3)*cos(d2 - t2) - 8*B13*B23*Rs2*V2*Zs2*cos(t2 - t3)*cos(t3)*cos(d2 - t2)^2 + 8*B13*B23*Rs2*V2*Zs2*sin(t2 - t3)*sin(t3)*cos(d2 - t2)^2 + 2*B13*B23*Eqp2*Rs2*Zs2*cos(t2 - t3)*cos(t3)*cos(d2 - t2) - 2*B13*B23*Edp2*Xd2*Zs2*cos(t2 - t3)*cos(t3)*cos(d2 - t2) - 2*B13*B23*Edp2*Rs2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3) - 2*B13*B23*Eqp2*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3) + 2*B13*K03*V2*Xd2*Zs2*sin(d2 - t2)*cos(t3)*cos(d2 - t2) + 2*B13*K03*V2*Xqp2*Zs2*sin(d2 - t2)*cos(t3)*cos(d2 - t2) - 2*B13*B23*Eqp2*Rs2*Zs2*sin(t2 - t3)*sin(t3)*cos(d2 - t2) + 2*B13*B23*Edp2*Xd2*Zs2*sin(t2 - t3)*sin(t3)*cos(d2 - t2) - 2*B13*K03*V2*Xd2*Zs2*sin(d2 - t2)*sin(t3)*cos(d2 - t2) - 2*B13*K03*V2*Xqp2*Zs2*sin(d2 - t2)*sin(t3)*cos(d2 - t2) + 2*B13*B23*Edp2*Rs2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3) + 2*B13*B23*Eqp2*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3) + 4*B13*B23*V2*Xd2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3)*cos(d2 - t2) + 4*B13*B23*V2*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3)*cos(d2 - t2) - 4*B13*B23*V2*Xd2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3)*cos(d2 - t2) - 4*B13*B23*V2*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3)*cos(d2 - t2)))*(-1/epsilon);
 d/dt[V3] = ((B13^2*B23*V3^2*sin(t2 - t3) + B12*B13^2*V3*sin(t2) + B12*B23^2*V3*sin(t2) - B13*B23^2*V3^2*sin(t3) + 2*B13^2*Rs2*V2*V3*Zs2 + 2*B23^2*Rs2*V2*V3*Zs2 + B13^2*Eqp2*Rs2*V3*Zs2*cos(d2 - t2) + B23^2*Eqp2*Rs2*V3*Zs2*cos(d2 - t2) + B12*B13*K03*V3*cos(t3)*sin(t2) - B13^2*Edp2*V3*Xd2*Zs2*cos(d2 - t2) - B23^2*Edp2*V3*Xd2*Zs2*cos(d2 - t2) - B13^2*Edp2*Rs2*V3*Zs2*sin(d2 - t2) - B23^2*Edp2*Rs2*V3*Zs2*sin(d2 - t2) - B12*B13*K03*V3*sin(t2)*sin(t3) - B13^2*Eqp2*V3*Xqp2*Zs2*sin(d2 - t2) - B23^2*Eqp2*V3*Xqp2*Zs2*sin(d2 - t2) + B12*B23*K03*V3*cos(t2 - t3)*sin(t2) - B13*B23*L02*V3*cos(t2 - t3)*sin(t3) - B13*B23*L02*V3*sin(t2 - t3)*cos(t3) + B12*B23*K03*V3*sin(t2 - t3)*sin(t2) - 4*B13^2*Rs2*V2*V3*Zs2*cos(d2 - t2)^2 - 4*B23^2*Rs2*V2*V3*Zs2*cos(d2 - t2)^2 + B13^2*V2*V3*Xd2*Zs2*sin(2*d2 - 2*t2) + B23^2*V2*V3*Xd2*Zs2*sin(2*d2 - 2*t2) + B13^2*V2*V3*Xqp2*Zs2*sin(2*d2 - 2*t2) + B23^2*V2*V3*Xqp2*Zs2*sin(2*d2 - 2*t2) + B13*B23*K03*V3^2*sin(t2 - t3)*cos(t3) - B13*B23*K03*V3^2*sin(t2 - t3)*sin(t3) + 2*B13*K03*Rs2*V2*V3*Zs2*cos(t3) - 2*B13*K03*Rs2*V2*V3*Zs2*sin(t3) - B12*B13*B23*V3*cos(t2 - t3)*cos(t2)*sin(t3) + 2*B12*B13*B23*V3*cos(t2 - t3)*cos(t3)*sin(t2) - B12*B13*B23*V3*sin(t2 - t3)*cos(t2)*cos(t3) + 2*B23*K03*Rs2*V2*V3*Zs2*cos(t2 - t3) + 2*B23*K03*Rs2*V2*V3*Zs2*sin(t2 - t3) - 2*B12*B13*B23*V3*sin(t2 - t3)*sin(t2)*sin(t3) + B13*Eqp2*K03*Rs2*V3*Zs2*cos(t3)*cos(d2 - t2) - B13*Edp2*K03*V3*Xd2*Zs2*cos(t3)*cos(d2 - t2) - B13*Edp2*K03*Rs2*V3*Zs2*sin(d2 - t2)*cos(t3) - B13*Eqp2*K03*Rs2*V3*Zs2*sin(t3)*cos(d2 - t2) + B13*Edp2*K03*V3*Xd2*Zs2*sin(t3)*cos(d2 - t2) - B13*Eqp2*K03*V3*Xqp2*Zs2*sin(d2 - t2)*cos(t3) + 4*B13*B23*Rs2*V2*V3*Zs2*cos(t2 - t3)*cos(t3) + B13*Edp2*K03*Rs2*V3*Zs2*sin(d2 - t2)*sin(t3) + B13*Eqp2*K03*V3*Xqp2*Zs2*sin(d2 - t2)*sin(t3) - B13*B23*V2*V3*Xd2*Zs2*cos(t2 - t3)*sin(t3) - B13*B23*V2*V3*Xd2*Zs2*sin(t2 - t3)*cos(t3) + B23*Eqp2*K03*Rs2*V3*Zs2*cos(t2 - t3)*cos(d2 - t2) - 4*B13*B23*Rs2*V2*V3*Zs2*sin(t2 - t3)*sin(t3) - B23*Edp2*K03*V3*Xd2*Zs2*cos(t2 - t3)*cos(d2 - t2) - B23*Edp2*K03*Rs2*V3*Zs2*sin(d2 - t2)*cos(t2 - t3) + B23*Eqp2*K03*Rs2*V3*Zs2*sin(t2 - t3)*cos(d2 - t2) - B23*Edp2*K03*V3*Xd2*Zs2*sin(t2 - t3)*cos(d2 - t2) - B23*Eqp2*K03*V3*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3) - B23*Edp2*K03*Rs2*V3*Zs2*sin(d2 - t2)*sin(t2 - t3) - B23*Eqp2*K03*V3*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3) - 4*B13*K03*Rs2*V2*V3*Zs2*cos(t3)*cos(d2 - t2)^2 + 4*B13*K03*Rs2*V2*V3*Zs2*sin(t3)*cos(d2 - t2)^2 - 4*B23*K03*Rs2*V2*V3*Zs2*cos(t2 - t3)*cos(d2 - t2)^2 - 4*B23*K03*Rs2*V2*V3*Zs2*sin(t2 - t3)*cos(d2 - t2)^2 + 2*B13*B23*Eqp2*Rs2*V3*Zs2*cos(t2 - t3)*cos(t3)*cos(d2 - t2) - 2*B13*B23*Edp2*V3*Xd2*Zs2*cos(t2 - t3)*cos(t3)*cos(d2 - t2) - 2*B13*B23*Edp2*Rs2*V3*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3) - B13*B23*Edp2*Rs2*V3*Zs2*cos(t2 - t3)*sin(t3)*cos(d2 - t2) - B13*B23*Edp2*Rs2*V3*Zs2*sin(t2 - t3)*cos(t3)*cos(d2 - t2) - 2*B13*B23*Eqp2*V3*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3) - B13*B23*Eqp2*V3*Xqp2*Zs2*cos(t2 - t3)*sin(t3)*cos(d2 - t2) - B13*B23*Eqp2*V3*Xqp2*Zs2*sin(t2 - t3)*cos(t3)*cos(d2 - t2) + 2*B13*K03*V2*V3*Xd2*Zs2*sin(d2 - t2)*cos(t3)*cos(d2 - t2) + 2*B13*K03*V2*V3*Xqp2*Zs2*sin(d2 - t2)*cos(t3)*cos(d2 - t2) - B13*B23*Eqp2*Rs2*V3*Zs2*sin(d2 - t2)*cos(t2 - t3)*sin(t3) - B13*B23*Eqp2*Rs2*V3*Zs2*sin(d2 - t2)*sin(t2 - t3)*cos(t3) - 2*B13*B23*Eqp2*Rs2*V3*Zs2*sin(t2 - t3)*sin(t3)*cos(d2 - t2) + B13*B23*Edp2*V3*Xd2*Zs2*sin(d2 - t2)*cos(t2 - t3)*sin(t3) + B13*B23*Edp2*V3*Xd2*Zs2*sin(d2 - t2)*sin(t2 - t3)*cos(t3) + 2*B13*B23*Edp2*V3*Xd2*Zs2*sin(t2 - t3)*sin(t3)*cos(d2 - t2) - 2*B13*K03*V2*V3*Xd2*Zs2*sin(d2 - t2)*sin(t3)*cos(d2 - t2) - 2*B13*K03*V2*V3*Xqp2*Zs2*sin(d2 - t2)*sin(t3)*cos(d2 - t2) + 2*B13*B23*Edp2*Rs2*V3*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3) + 2*B13*B23*Eqp2*V3*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3) + 2*B23*K03*V2*V3*Xd2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(d2 - t2) + 2*B23*K03*V2*V3*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(d2 - t2) + 2*B23*K03*V2*V3*Xd2*Zs2*sin(d2 - t2)*sin(t2 - t3)*cos(d2 - t2) + 2*B23*K03*V2*V3*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3)*cos(d2 - t2) - 8*B13*B23*Rs2*V2*V3*Zs2*cos(t2 - t3)*cos(t3)*cos(d2 - t2)^2 + B13*B23*V2*V3*Xd2*Zs2*cos(t2 - t3)*sin(t3)*cos(d2 - t2)^2 + B13*B23*V2*V3*Xd2*Zs2*sin(t2 - t3)*cos(t3)*cos(d2 - t2)^2 + B13*B23*V2*V3*Xqp2*Zs2*cos(t2 - t3)*sin(t3)*cos(d2 - t2)^2 + B13*B23*V2*V3*Xqp2*Zs2*sin(t2 - t3)*cos(t3)*cos(d2 - t2)^2 + 8*B13*B23*Rs2*V2*V3*Zs2*sin(t2 - t3)*sin(t3)*cos(d2 - t2)^2 + 4*B13*B23*V2*V3*Xd2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3)*cos(d2 - t2) + 4*B13*B23*V2*V3*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3)*cos(d2 - t2) + 2*B13*B23*Rs2*V2*V3*Zs2*sin(d2 - t2)*cos(t2 - t3)*sin(t3)*cos(d2 - t2) + 2*B13*B23*Rs2*V2*V3*Zs2*sin(d2 - t2)*sin(t2 - t3)*cos(t3)*cos(d2 - t2) - 4*B13*B23*V2*V3*Xd2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3)*cos(d2 - t2) - 4*B13*B23*V2*V3*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3)*cos(d2 - t2))/(B12*B13^2*sin(t2) + B12*B23^2*sin(t2) + 2*B13^2*Rs2*V2*Zs2 + 2*B23^2*Rs2*V2*Zs2 - B13*B23^2*V3*sin(t3) + B13^2*B23*V3*sin(t2 - t3) - B13^2*Eqp2*Xqp2*Zs2*sin(d2 - t2) - B23^2*Eqp2*Xqp2*Zs2*sin(d2 - t2) + B12*B23*K03*cos(t2 - t3)*sin(t2) + B12*B23*K03*sin(t2 - t3)*sin(t2) - 4*B13^2*Rs2*V2*Zs2*cos(d2 - t2)^2 - 4*B23^2*Rs2*V2*Zs2*cos(d2 - t2)^2 + B13^2*V2*Xd2*Zs2*sin(2*d2 - 2*t2) + B23^2*V2*Xd2*Zs2*sin(2*d2 - 2*t2) + B13^2*V2*Xqp2*Zs2*sin(2*d2 - 2*t2) + B23^2*V2*Xqp2*Zs2*sin(2*d2 - 2*t2) + B13^2*Eqp2*Rs2*Zs2*cos(d2 - t2) + B23^2*Eqp2*Rs2*Zs2*cos(d2 - t2) + B12*B13*K03*cos(t3)*sin(t2) - B13^2*Edp2*Xd2*Zs2*cos(d2 - t2) - B23^2*Edp2*Xd2*Zs2*cos(d2 - t2) - B13^2*Edp2*Rs2*Zs2*sin(d2 - t2) - B23^2*Edp2*Rs2*Zs2*sin(d2 - t2) - B12*B13*K03*sin(t2)*sin(t3) + 2*B23*K03*Rs2*V2*Zs2*sin(t2 - t3) - 2*B12*B13*B23*sin(t2 - t3)*sin(t2)*sin(t3) + B13*B23*K03*V3*sin(t2 - t3)*cos(t3) - B13*B23*K03*V3*sin(t2 - t3)*sin(t3) + 2*B13*K03*Rs2*V2*Zs2*cos(t3) - 2*B13*K03*Rs2*V2*Zs2*sin(t3) + 2*B12*B13*B23*cos(t2 - t3)*cos(t3)*sin(t2) + 2*B23*K03*Rs2*V2*Zs2*cos(t2 - t3) - B23*Edp2*K03*Rs2*Zs2*sin(d2 - t2)*sin(t2 - t3) - B23*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3) - 4*B13*K03*Rs2*V2*Zs2*cos(t3)*cos(d2 - t2)^2 + 4*B13*K03*Rs2*V2*Zs2*sin(t3)*cos(d2 - t2)^2 - 4*B23*K03*Rs2*V2*Zs2*cos(t2 - t3)*cos(d2 - t2)^2 - 4*B23*K03*Rs2*V2*Zs2*sin(t2 - t3)*cos(d2 - t2)^2 + B13*Eqp2*K03*Rs2*Zs2*cos(t3)*cos(d2 - t2) - B13*Edp2*K03*Xd2*Zs2*cos(t3)*cos(d2 - t2) - B13*Edp2*K03*Rs2*Zs2*sin(d2 - t2)*cos(t3) - B13*Eqp2*K03*Rs2*Zs2*sin(t3)*cos(d2 - t2) + B13*Edp2*K03*Xd2*Zs2*sin(t3)*cos(d2 - t2) - B13*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2)*cos(t3) + 4*B13*B23*Rs2*V2*Zs2*cos(t2 - t3)*cos(t3) + B13*Edp2*K03*Rs2*Zs2*sin(d2 - t2)*sin(t3) + B13*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2)*sin(t3) + B23*Eqp2*K03*Rs2*Zs2*cos(t2 - t3)*cos(d2 - t2) - 4*B13*B23*Rs2*V2*Zs2*sin(t2 - t3)*sin(t3) - B23*Edp2*K03*Xd2*Zs2*cos(t2 - t3)*cos(d2 - t2) - B23*Edp2*K03*Rs2*Zs2*sin(d2 - t2)*cos(t2 - t3) + B23*Eqp2*K03*Rs2*Zs2*sin(t2 - t3)*cos(d2 - t2) - B23*Edp2*K03*Xd2*Zs2*sin(t2 - t3)*cos(d2 - t2) - B23*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3) + 2*B23*K03*V2*Xd2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(d2 - t2) + 2*B23*K03*V2*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(d2 - t2) + 2*B23*K03*V2*Xd2*Zs2*sin(d2 - t2)*sin(t2 - t3)*cos(d2 - t2) + 2*B23*K03*V2*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3)*cos(d2 - t2) - 8*B13*B23*Rs2*V2*Zs2*cos(t2 - t3)*cos(t3)*cos(d2 - t2)^2 + 8*B13*B23*Rs2*V2*Zs2*sin(t2 - t3)*sin(t3)*cos(d2 - t2)^2 + 2*B13*B23*Eqp2*Rs2*Zs2*cos(t2 - t3)*cos(t3)*cos(d2 - t2) - 2*B13*B23*Edp2*Xd2*Zs2*cos(t2 - t3)*cos(t3)*cos(d2 - t2) - 2*B13*B23*Edp2*Rs2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3) - 2*B13*B23*Eqp2*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3) + 2*B13*K03*V2*Xd2*Zs2*sin(d2 - t2)*cos(t3)*cos(d2 - t2) + 2*B13*K03*V2*Xqp2*Zs2*sin(d2 - t2)*cos(t3)*cos(d2 - t2) - 2*B13*B23*Eqp2*Rs2*Zs2*sin(t2 - t3)*sin(t3)*cos(d2 - t2) + 2*B13*B23*Edp2*Xd2*Zs2*sin(t2 - t3)*sin(t3)*cos(d2 - t2) - 2*B13*K03*V2*Xd2*Zs2*sin(d2 - t2)*sin(t3)*cos(d2 - t2) - 2*B13*K03*V2*Xqp2*Zs2*sin(d2 - t2)*sin(t3)*cos(d2 - t2) + 2*B13*B23*Edp2*Rs2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3) + 2*B13*B23*Eqp2*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3) + 4*B13*B23*V2*Xd2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3)*cos(d2 - t2) + 4*B13*B23*V2*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3)*cos(d2 - t2) - 4*B13*B23*V2*Xd2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3)*cos(d2 - t2) - 4*B13*B23*V2*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3)*cos(d2 - t2)))*(-1/epsilon);
 d/dt[t3] = (-(B23*(B23 + B13*cos(t2) + K03*cos(t2 - t3) + K03*sin(t2 - t3))*(L02 + B12*cos(t2) + V2*Xd2*Zs2 + Edp2*Rs2*Zs2*cos(d2 - t2) + Eqp2*Xqp2*Zs2*cos(d2 - t2) + Eqp2*Rs2*Zs2*sin(d2 - t2) - Edp2*Xd2*Zs2*sin(d2 - t2) - V2*Xd2*Zs2*cos(d2 - t2)^2 - V2*Xqp2*Zs2*cos(d2 - t2)^2 - Rs2*V2*Zs2*sin(2*d2 - 2*t2)))/(B12*B13^2*sin(t2) + B12*B23^2*sin(t2) + 2*B13^2*Rs2*V2*Zs2 + 2*B23^2*Rs2*V2*Zs2 - B13*B23^2*V3*sin(t3) + B13^2*B23*V3*sin(t2 - t3) - B13^2*Eqp2*Xqp2*Zs2*sin(d2 - t2) - B23^2*Eqp2*Xqp2*Zs2*sin(d2 - t2) + B12*B23*K03*cos(t2 - t3)*sin(t2) + B12*B23*K03*sin(t2 - t3)*sin(t2) - 4*B13^2*Rs2*V2*Zs2*cos(d2 - t2)^2 - 4*B23^2*Rs2*V2*Zs2*cos(d2 - t2)^2 + B13^2*V2*Xd2*Zs2*sin(2*d2 - 2*t2) + B23^2*V2*Xd2*Zs2*sin(2*d2 - 2*t2) + B13^2*V2*Xqp2*Zs2*sin(2*d2 - 2*t2) + B23^2*V2*Xqp2*Zs2*sin(2*d2 - 2*t2) + B13^2*Eqp2*Rs2*Zs2*cos(d2 - t2) + B23^2*Eqp2*Rs2*Zs2*cos(d2 - t2) + B12*B13*K03*cos(t3)*sin(t2) - B13^2*Edp2*Xd2*Zs2*cos(d2 - t2) - B23^2*Edp2*Xd2*Zs2*cos(d2 - t2) - B13^2*Edp2*Rs2*Zs2*sin(d2 - t2) - B23^2*Edp2*Rs2*Zs2*sin(d2 - t2) - B12*B13*K03*sin(t2)*sin(t3) + 2*B23*K03*Rs2*V2*Zs2*sin(t2 - t3) - 2*B12*B13*B23*sin(t2 - t3)*sin(t2)*sin(t3) + B13*B23*K03*V3*sin(t2 - t3)*cos(t3) - B13*B23*K03*V3*sin(t2 - t3)*sin(t3) + 2*B13*K03*Rs2*V2*Zs2*cos(t3) - 2*B13*K03*Rs2*V2*Zs2*sin(t3) + 2*B12*B13*B23*cos(t2 - t3)*cos(t3)*sin(t2) + 2*B23*K03*Rs2*V2*Zs2*cos(t2 - t3) - B23*Edp2*K03*Rs2*Zs2*sin(d2 - t2)*sin(t2 - t3) - B23*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3) - 4*B13*K03*Rs2*V2*Zs2*cos(t3)*cos(d2 - t2)^2 + 4*B13*K03*Rs2*V2*Zs2*sin(t3)*cos(d2 - t2)^2 - 4*B23*K03*Rs2*V2*Zs2*cos(t2 - t3)*cos(d2 - t2)^2 - 4*B23*K03*Rs2*V2*Zs2*sin(t2 - t3)*cos(d2 - t2)^2 + B13*Eqp2*K03*Rs2*Zs2*cos(t3)*cos(d2 - t2) - B13*Edp2*K03*Xd2*Zs2*cos(t3)*cos(d2 - t2) - B13*Edp2*K03*Rs2*Zs2*sin(d2 - t2)*cos(t3) - B13*Eqp2*K03*Rs2*Zs2*sin(t3)*cos(d2 - t2) + B13*Edp2*K03*Xd2*Zs2*sin(t3)*cos(d2 - t2) - B13*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2)*cos(t3) + 4*B13*B23*Rs2*V2*Zs2*cos(t2 - t3)*cos(t3) + B13*Edp2*K03*Rs2*Zs2*sin(d2 - t2)*sin(t3) + B13*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2)*sin(t3) + B23*Eqp2*K03*Rs2*Zs2*cos(t2 - t3)*cos(d2 - t2) - 4*B13*B23*Rs2*V2*Zs2*sin(t2 - t3)*sin(t3) - B23*Edp2*K03*Xd2*Zs2*cos(t2 - t3)*cos(d2 - t2) - B23*Edp2*K03*Rs2*Zs2*sin(d2 - t2)*cos(t2 - t3) + B23*Eqp2*K03*Rs2*Zs2*sin(t2 - t3)*cos(d2 - t2) - B23*Edp2*K03*Xd2*Zs2*sin(t2 - t3)*cos(d2 - t2) - B23*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3) + 2*B23*K03*V2*Xd2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(d2 - t2) + 2*B23*K03*V2*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(d2 - t2) + 2*B23*K03*V2*Xd2*Zs2*sin(d2 - t2)*sin(t2 - t3)*cos(d2 - t2) + 2*B23*K03*V2*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3)*cos(d2 - t2) - 8*B13*B23*Rs2*V2*Zs2*cos(t2 - t3)*cos(t3)*cos(d2 - t2)^2 + 8*B13*B23*Rs2*V2*Zs2*sin(t2 - t3)*sin(t3)*cos(d2 - t2)^2 + 2*B13*B23*Eqp2*Rs2*Zs2*cos(t2 - t3)*cos(t3)*cos(d2 - t2) - 2*B13*B23*Edp2*Xd2*Zs2*cos(t2 - t3)*cos(t3)*cos(d2 - t2) - 2*B13*B23*Edp2*Rs2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3) - 2*B13*B23*Eqp2*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3) + 2*B13*K03*V2*Xd2*Zs2*sin(d2 - t2)*cos(t3)*cos(d2 - t2) + 2*B13*K03*V2*Xqp2*Zs2*sin(d2 - t2)*cos(t3)*cos(d2 - t2) - 2*B13*B23*Eqp2*Rs2*Zs2*sin(t2 - t3)*sin(t3)*cos(d2 - t2) + 2*B13*B23*Edp2*Xd2*Zs2*sin(t2 - t3)*sin(t3)*cos(d2 - t2) - 2*B13*K03*V2*Xd2*Zs2*sin(d2 - t2)*sin(t3)*cos(d2 - t2) - 2*B13*K03*V2*Xqp2*Zs2*sin(d2 - t2)*sin(t3)*cos(d2 - t2) + 2*B13*B23*Edp2*Rs2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3) + 2*B13*B23*Eqp2*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3) + 4*B13*B23*V2*Xd2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3)*cos(d2 - t2) + 4*B13*B23*V2*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3)*cos(d2 - t2) - 4*B13*B23*V2*Xd2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3)*cos(d2 - t2) - 4*B13*B23*V2*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3)*cos(d2 - t2)))*(-1/epsilon);
 
jump:
        (tau >= 1) ==> @2 (tau' = 0);

}



{
  mode 2;
  
invt:
        
(d1 >= 0);
        
(w1 >= 0);
  
(d2 >= 0);
        
(w2 >= 0); 
flow:
        
d/dt[d1] =  w1 - ws;
        
d/dt[w1] = -(D1*(w1 - ws) - Tm1 + Eqp1*(Rs1*Zs1*(Eqp1 - V1*cos(d1 - t1)) - Xd1*Zs1*(Edp1 - V1*sin(d1 - t1))) + Edp1*(Xqp1*Zs1*(Eqp1 - V1*cos(d1 - t1)) + Rs1*Zs1*(Edp1 - V1*sin(d1 - t1))) + (Rs1*Zs1*(Eqp1 - V1*cos(d1 - t1)) - Xd1*Zs1*(Edp1 - V1*sin(d1 - t1)))*(Xqp1*Zs1*(Eqp1 - V1*cos(d1 - t1)) + Rs1*Zs1*(Edp1 - V1*sin(d1 - t1)))*(Xq1 - Xqp1))/M1;
d/dt[Eqp1] = -(Eqp1 - Efd1 + (Xqp1*Zs1*(Eqp1 - V1*cos(d1 - t1)) + Rs1*Zs1*(Edp1 - V1*sin(d1 - t1)))*(Xd1 - Xdp1))/Td0p1;
d/dt[Edp1] = -(Edp1 - (Rs1*Zs1*(Eqp1 - V1*cos(d1 - t1)) - Xd1*Zs1*(Edp1 - V1*sin(d1 - t1)))*(Xq1 - Xqp1))/Tq0p1;
d/dt[d2] = w2 - ws;
d/dt[w2] = -(D2*(w2 - ws) - Tm2 + Eqp2*(Rs2*Zs2*(Eqp2 - V2*cos(d2 - t2)) - Xd2*Zs2*(Edp2 - V2*sin(d2 - t2))) + Edp2*(Xqp2*Zs2*(Eqp2 - V2*cos(d2 - t2)) + Rs2*Zs2*(Edp2 - V2*sin(d2 - t2))) + (Rs2*Zs2*(Eqp2 - V2*cos(d2 - t2)) - Xd2*Zs2*(Edp2 - V2*sin(d2 - t2)))*(Xqp2*Zs2*(Eqp2 - V2*cos(d2 - t2)) + Rs2*Zs2*(Edp2 - V2*sin(d2 - t2)))*(Xq2 - Xqp2))/M2;
d/dt[Eqp2] = -(Eqp2 - Efd2 + (Xqp2*Zs2*(Eqp2 - V2*cos(d2 - t2)) + Rs2*Zs2*(Edp2 - V2*sin(d2 - t2)))*(Xd2 - Xdp2))/Td0p2;
d/dt[Edp2] = -(Edp2 - (Rs2*Zs2*(Eqp2 - V2*cos(d2 - t2)) - Xd2*Zs2*(Edp2 - V2*sin(d2 - t2)))*(Xq2 - Xqp2))/Tq0p2;   
d/dt[t2] = (-((B13^2 + B23^2 + B23*K03*sin(t2 - t3) + 2*B13*B23*cos(t2) + B13*K03*cos(t3) - B13*K03*sin(t3) + B23*K03*cos(t2 - t3))*(L02 + V2*Xd2*Zs2 + Edp2*Rs2*Zs2*cos(d2 - t2) + Eqp2*Xqp2*Zs2*cos(d2 - t2) + Eqp2*Rs2*Zs2*sin(d2 - t2) - Edp2*Xd2*Zs2*sin(d2 - t2) - V2*Xd2*Zs2*cos(d2 - t2)^2 - V2*Xqp2*Zs2*cos(d2 - t2)^2 - Rs2*V2*Zs2*sin(2*d2 - 2*t2)))/(2*B13^2*Rs2*V2*Zs2 + 2*B23^2*Rs2*V2*Zs2 - B13*B23^2*V3*sin(t3) + B13^2*B23*V3*sin(t2 - t3) - B13^2*Eqp2*Xqp2*Zs2*sin(d2 - t2) - B23^2*Eqp2*Xqp2*Zs2*sin(d2 - t2) - 4*B13^2*Rs2*V2*Zs2*cos(d2 - t2)^2 - 4*B23^2*Rs2*V2*Zs2*cos(d2 - t2)^2 + B13^2*V2*Xd2*Zs2*sin(2*d2 - 2*t2) + B23^2*V2*Xd2*Zs2*sin(2*d2 - 2*t2) + B13^2*V2*Xqp2*Zs2*sin(2*d2 - 2*t2) + B23^2*V2*Xqp2*Zs2*sin(2*d2 - 2*t2) + B13^2*Eqp2*Rs2*Zs2*cos(d2 - t2) + B23^2*Eqp2*Rs2*Zs2*cos(d2 - t2) - B13^2*Edp2*Xd2*Zs2*cos(d2 - t2) - B23^2*Edp2*Xd2*Zs2*cos(d2 - t2) - B13^2*Edp2*Rs2*Zs2*sin(d2 - t2) - B23^2*Edp2*Rs2*Zs2*sin(d2 - t2) + 2*B23*K03*Rs2*V2*Zs2*sin(t2 - t3) + B13*B23*K03*V3*sin(t2 - t3)*cos(t3) - B13*B23*K03*V3*sin(t2 - t3)*sin(t3) + 2*B13*K03*Rs2*V2*Zs2*cos(t3) - 2*B13*K03*Rs2*V2*Zs2*sin(t3) + 2*B23*K03*Rs2*V2*Zs2*cos(t2 - t3) - B23*Edp2*K03*Rs2*Zs2*sin(d2 - t2)*sin(t2 - t3) - B23*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3) - 4*B13*K03*Rs2*V2*Zs2*cos(t3)*cos(d2 - t2)^2 + 4*B13*K03*Rs2*V2*Zs2*sin(t3)*cos(d2 - t2)^2 - 4*B23*K03*Rs2*V2*Zs2*cos(t2 - t3)*cos(d2 - t2)^2 - 4*B23*K03*Rs2*V2*Zs2*sin(t2 - t3)*cos(d2 - t2)^2 + B13*Eqp2*K03*Rs2*Zs2*cos(t3)*cos(d2 - t2) - B13*Edp2*K03*Xd2*Zs2*cos(t3)*cos(d2 - t2) - B13*Edp2*K03*Rs2*Zs2*sin(d2 - t2)*cos(t3) - B13*Eqp2*K03*Rs2*Zs2*sin(t3)*cos(d2 - t2) + B13*Edp2*K03*Xd2*Zs2*sin(t3)*cos(d2 - t2) - B13*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2)*cos(t3) + 4*B13*B23*Rs2*V2*Zs2*cos(t2 - t3)*cos(t3) + B13*Edp2*K03*Rs2*Zs2*sin(d2 - t2)*sin(t3) + B13*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2)*sin(t3) + B23*Eqp2*K03*Rs2*Zs2*cos(t2 - t3)*cos(d2 - t2) - 4*B13*B23*Rs2*V2*Zs2*sin(t2 - t3)*sin(t3) - B23*Edp2*K03*Xd2*Zs2*cos(t2 - t3)*cos(d2 - t2) - B23*Edp2*K03*Rs2*Zs2*sin(d2 - t2)*cos(t2 - t3) + B23*Eqp2*K03*Rs2*Zs2*sin(t2 - t3)*cos(d2 - t2) - B23*Edp2*K03*Xd2*Zs2*sin(t2 - t3)*cos(d2 - t2) - B23*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3) + 2*B23*K03*V2*Xd2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(d2 - t2) + 2*B23*K03*V2*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(d2 - t2) + 2*B23*K03*V2*Xd2*Zs2*sin(d2 - t2)*sin(t2 - t3)*cos(d2 - t2) + 2*B23*K03*V2*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3)*cos(d2 - t2) - 8*B13*B23*Rs2*V2*Zs2*cos(t2 - t3)*cos(t3)*cos(d2 - t2)^2 + 8*B13*B23*Rs2*V2*Zs2*sin(t2 - t3)*sin(t3)*cos(d2 - t2)^2 + 2*B13*B23*Eqp2*Rs2*Zs2*cos(t2 - t3)*cos(t3)*cos(d2 - t2) - 2*B13*B23*Edp2*Xd2*Zs2*cos(t2 - t3)*cos(t3)*cos(d2 - t2) - 2*B13*B23*Edp2*Rs2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3) - 2*B13*B23*Eqp2*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3) + 2*B13*K03*V2*Xd2*Zs2*sin(d2 - t2)*cos(t3)*cos(d2 - t2) + 2*B13*K03*V2*Xqp2*Zs2*sin(d2 - t2)*cos(t3)*cos(d2 - t2) - 2*B13*B23*Eqp2*Rs2*Zs2*sin(t2 - t3)*sin(t3)*cos(d2 - t2) + 2*B13*B23*Edp2*Xd2*Zs2*sin(t2 - t3)*sin(t3)*cos(d2 - t2) - 2*B13*K03*V2*Xd2*Zs2*sin(d2 - t2)*sin(t3)*cos(d2 - t2) - 2*B13*K03*V2*Xqp2*Zs2*sin(d2 - t2)*sin(t3)*cos(d2 - t2) + 2*B13*B23*Edp2*Rs2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3) + 2*B13*B23*Eqp2*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3) + 4*B13*B23*V2*Xd2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3)*cos(d2 - t2) + 4*B13*B23*V2*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3)*cos(d2 - t2) - 4*B13*B23*V2*Xd2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3)*cos(d2 - t2) - 4*B13*B23*V2*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3)*cos(d2 - t2)))*(-1/epsilon);
d/dt[V3] = ((V3*(4*B13^2*B23*V3*sin(t2 - t3) - 4*B13*B23^2*V3*sin(t3) - 4*B13*B23*L02*sin(t2) - 4*B13^2*Eqp2*Xqp2*Zs2*sin(d2 - t2) - 4*B23^2*Eqp2*Xqp2*Zs2*sin(d2 - t2) + 2*B13*B23*K03*V3*cos(t2) - 8*B13^2*Rs2*V2*Zs2*cos(2*d2 - 2*t2) - 8*B23^2*Rs2*V2*Zs2*cos(2*d2 - 2*t2) + 2*B13*B23*K03*V3*sin(t2) + 4*B13^2*V2*Xd2*Zs2*sin(2*d2 - 2*t2) + 4*B23^2*V2*Xd2*Zs2*sin(2*d2 - 2*t2) + 4*B13^2*V2*Xqp2*Zs2*sin(2*d2 - 2*t2) + 4*B23^2*V2*Xqp2*Zs2*sin(2*d2 - 2*t2) - 2*B13*B23*K03*V3*cos(t2 - 2*t3) + 2*B13*B23*K03*V3*sin(t2 - 2*t3) + 4*B13^2*Eqp2*Rs2*Zs2*cos(d2 - t2) + 4*B23^2*Eqp2*Rs2*Zs2*cos(d2 - t2) - 4*B13^2*Edp2*Xd2*Zs2*cos(d2 - t2) - 4*B23^2*Edp2*Xd2*Zs2*cos(d2 - t2) - 4*B13^2*Edp2*Rs2*Zs2*sin(d2 - t2) - 4*B23^2*Edp2*Rs2*Zs2*sin(d2 - t2) - 4*B13*K03*Rs2*V2*Zs2*cos(2*d2 - 2*t2 - t3) - 4*B23*K03*Rs2*V2*Zs2*cos(2*d2 - t2 - t3) - 2*B13*K03*V2*Xd2*Zs2*cos(2*d2 - 2*t2 - t3) - 2*B23*K03*V2*Xd2*Zs2*cos(2*d2 - t2 - t3) - 2*B13*K03*V2*Xqp2*Zs2*cos(2*d2 - 2*t2 - t3) - 2*B23*K03*V2*Xqp2*Zs2*cos(2*d2 - t2 - t3) - 4*B13*K03*Rs2*V2*Zs2*sin(2*d2 - 2*t2 - t3) - 4*B23*K03*Rs2*V2*Zs2*sin(2*d2 - t2 - t3) + 2*B13*K03*V2*Xd2*Zs2*sin(2*d2 - 2*t2 - t3) + 2*B23*K03*V2*Xd2*Zs2*sin(2*d2 - t2 - t3) + 2*B13*K03*V2*Xqp2*Zs2*sin(2*d2 - 2*t2 - t3) + 2*B23*K03*V2*Xqp2*Zs2*sin(2*d2 - t2 - t3) - 10*B13*B23*Rs2*V2*Zs2*cos(2*d2 - t2) - 6*B13*B23*Rs2*V2*Zs2*cos(2*d2 - 3*t2) - 2*B13*Edp2*K03*Rs2*Zs2*cos(d2 - t2 + t3) - 2*B23*Edp2*K03*Rs2*Zs2*cos(d2 - 2*t2 + t3) + 2*B13*Eqp2*K03*Rs2*Zs2*cos(d2 - t2 + t3) + 2*B23*Eqp2*K03*Rs2*Zs2*cos(d2 - 2*t2 + t3) - 2*B13*Edp2*K03*Xd2*Zs2*cos(d2 - t2 + t3) - 2*B23*Edp2*K03*Xd2*Zs2*cos(d2 - 2*t2 + t3) - 2*B13*Eqp2*K03*Xqp2*Zs2*cos(d2 - t2 + t3) - 2*B23*Eqp2*K03*Xqp2*Zs2*cos(d2 - 2*t2 + t3) + 5*B13*B23*V2*Xd2*Zs2*sin(2*d2 - t2) + 3*B13*B23*V2*Xd2*Zs2*sin(2*d2 - 3*t2) + 5*B13*B23*V2*Xqp2*Zs2*sin(2*d2 - t2) + 3*B13*B23*V2*Xqp2*Zs2*sin(2*d2 - 3*t2) - 2*B13*Edp2*K03*Rs2*Zs2*sin(d2 - t2 + t3) - 2*B23*Edp2*K03*Rs2*Zs2*sin(d2 - 2*t2 + t3) - 2*B13*Eqp2*K03*Rs2*Zs2*sin(d2 - t2 + t3) - 2*B23*Eqp2*K03*Rs2*Zs2*sin(d2 - 2*t2 + t3) + 2*B13*Edp2*K03*Xd2*Zs2*sin(d2 - t2 + t3) + 2*B23*Edp2*K03*Xd2*Zs2*sin(d2 - 2*t2 + t3) - 2*B13*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2 + t3) - 2*B23*Eqp2*K03*Xqp2*Zs2*sin(d2 - 2*t2 + t3) + 6*B13*B23*Eqp2*Rs2*Zs2*cos(d2) - 6*B13*B23*Edp2*Xd2*Zs2*cos(d2) + 2*B13*Edp2*K03*Rs2*Zs2*cos(d2 - t2 - t3) + 2*B13*Eqp2*K03*Rs2*Zs2*cos(d2 - t2 - t3) - 6*B13*B23*Edp2*Rs2*Zs2*sin(d2) - 2*B13*Edp2*K03*Xd2*Zs2*cos(d2 - t2 - t3) + 2*B13*Eqp2*K03*Xqp2*Zs2*cos(d2 - t2 - t3) - 6*B13*B23*Eqp2*Xqp2*Zs2*sin(d2) - 2*B13*Edp2*K03*Rs2*Zs2*sin(d2 - t2 - t3) + 2*B13*Eqp2*K03*Rs2*Zs2*sin(d2 - t2 - t3) - 4*B13*K03*Rs2*V2*Zs2*cos(2*d2 - 2*t2 + t3) - 4*B23*K03*Rs2*V2*Zs2*cos(2*d2 - 3*t2 + t3) - 2*B13*Edp2*K03*Xd2*Zs2*sin(d2 - t2 - t3) - 2*B13*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2 - t3) + 2*B13*K03*V2*Xd2*Zs2*cos(2*d2 - 2*t2 + t3) + 2*B23*K03*V2*Xd2*Zs2*cos(2*d2 - 3*t2 + t3) + 2*B13*K03*V2*Xqp2*Zs2*cos(2*d2 - 2*t2 + t3) + 2*B23*K03*V2*Xqp2*Zs2*cos(2*d2 - 3*t2 + t3) + 4*B13*K03*Rs2*V2*Zs2*sin(2*d2 - 2*t2 + t3) + 4*B23*K03*Rs2*V2*Zs2*sin(2*d2 - 3*t2 + t3) + 2*B13*B23*Eqp2*Rs2*Zs2*cos(d2 - 2*t2) + 2*B13*K03*V2*Xd2*Zs2*sin(2*d2 - 2*t2 + t3) + 2*B23*K03*V2*Xd2*Zs2*sin(2*d2 - 3*t2 + t3) + 2*B13*K03*V2*Xqp2*Zs2*sin(2*d2 - 2*t2 + t3) + 2*B23*K03*V2*Xqp2*Zs2*sin(2*d2 - 3*t2 + t3) - 2*B13*B23*V2*Xd2*Zs2*sin(t2) + 2*B13*B23*V2*Xqp2*Zs2*sin(t2) - 2*B13*B23*Edp2*Xd2*Zs2*cos(d2 - 2*t2) + 2*B23*Edp2*K03*Rs2*Zs2*cos(d2 - t3) + 2*B23*Eqp2*K03*Rs2*Zs2*cos(d2 - t3) - 2*B23*Edp2*K03*Xd2*Zs2*cos(d2 - t3) + 2*B23*Eqp2*K03*Xqp2*Zs2*cos(d2 - t3) - 2*B13*B23*Edp2*Rs2*Zs2*sin(d2 - 2*t2) - 2*B13*B23*Eqp2*Xqp2*Zs2*sin(d2 - 2*t2) - 2*B23*Edp2*K03*Rs2*Zs2*sin(d2 - t3) + 2*B23*Eqp2*K03*Rs2*Zs2*sin(d2 - t3) - 2*B23*Edp2*K03*Xd2*Zs2*sin(d2 - t3) - 2*B23*Eqp2*K03*Xqp2*Zs2*sin(d2 - t3)))/(4*(2*B13^2*Rs2*V2*Zs2 + 2*B23^2*Rs2*V2*Zs2 - B13*B23^2*V3*sin(t3) + B13^2*B23*V3*sin(t2 - t3) - B13^2*Eqp2*Xqp2*Zs2*sin(d2 - t2) - B23^2*Eqp2*Xqp2*Zs2*sin(d2 - t2) - 4*B13^2*Rs2*V2*Zs2*cos(d2 - t2)^2 - 4*B23^2*Rs2*V2*Zs2*cos(d2 - t2)^2 + B13^2*V2*Xd2*Zs2*sin(2*d2 - 2*t2) + B23^2*V2*Xd2*Zs2*sin(2*d2 - 2*t2) + B13^2*V2*Xqp2*Zs2*sin(2*d2 - 2*t2) + B23^2*V2*Xqp2*Zs2*sin(2*d2 - 2*t2) + B13^2*Eqp2*Rs2*Zs2*cos(d2 - t2) + B23^2*Eqp2*Rs2*Zs2*cos(d2 - t2) - B13^2*Edp2*Xd2*Zs2*cos(d2 - t2) - B23^2*Edp2*Xd2*Zs2*cos(d2 - t2) - B13^2*Edp2*Rs2*Zs2*sin(d2 - t2) - B23^2*Edp2*Rs2*Zs2*sin(d2 - t2) + 2*B23*K03*Rs2*V2*Zs2*sin(t2 - t3) + B13*B23*K03*V3*sin(t2 - t3)*cos(t3) - B13*B23*K03*V3*sin(t2 - t3)*sin(t3) + 2*B13*K03*Rs2*V2*Zs2*cos(t3) - 2*B13*K03*Rs2*V2*Zs2*sin(t3) + 2*B23*K03*Rs2*V2*Zs2*cos(t2 - t3) - B23*Edp2*K03*Rs2*Zs2*sin(d2 - t2)*sin(t2 - t3) - B23*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3) - 4*B13*K03*Rs2*V2*Zs2*cos(t3)*cos(d2 - t2)^2 + 4*B13*K03*Rs2*V2*Zs2*sin(t3)*cos(d2 - t2)^2 - 4*B23*K03*Rs2*V2*Zs2*cos(t2 - t3)*cos(d2 - t2)^2 - 4*B23*K03*Rs2*V2*Zs2*sin(t2 - t3)*cos(d2 - t2)^2 + B13*Eqp2*K03*Rs2*Zs2*cos(t3)*cos(d2 - t2) - B13*Edp2*K03*Xd2*Zs2*cos(t3)*cos(d2 - t2) - B13*Edp2*K03*Rs2*Zs2*sin(d2 - t2)*cos(t3) - B13*Eqp2*K03*Rs2*Zs2*sin(t3)*cos(d2 - t2) + B13*Edp2*K03*Xd2*Zs2*sin(t3)*cos(d2 - t2) - B13*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2)*cos(t3) + 4*B13*B23*Rs2*V2*Zs2*cos(t2 - t3)*cos(t3) + B13*Edp2*K03*Rs2*Zs2*sin(d2 - t2)*sin(t3) + B13*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2)*sin(t3) + B23*Eqp2*K03*Rs2*Zs2*cos(t2 - t3)*cos(d2 - t2) - 4*B13*B23*Rs2*V2*Zs2*sin(t2 - t3)*sin(t3) - B23*Edp2*K03*Xd2*Zs2*cos(t2 - t3)*cos(d2 - t2) - B23*Edp2*K03*Rs2*Zs2*sin(d2 - t2)*cos(t2 - t3) + B23*Eqp2*K03*Rs2*Zs2*sin(t2 - t3)*cos(d2 - t2) - B23*Edp2*K03*Xd2*Zs2*sin(t2 - t3)*cos(d2 - t2) - B23*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3) + 2*B23*K03*V2*Xd2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(d2 - t2) + 2*B23*K03*V2*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(d2 - t2) + 2*B23*K03*V2*Xd2*Zs2*sin(d2 - t2)*sin(t2 - t3)*cos(d2 - t2) + 2*B23*K03*V2*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3)*cos(d2 - t2) - 8*B13*B23*Rs2*V2*Zs2*cos(t2 - t3)*cos(t3)*cos(d2 - t2)^2 + 8*B13*B23*Rs2*V2*Zs2*sin(t2 - t3)*sin(t3)*cos(d2 - t2)^2 + 2*B13*B23*Eqp2*Rs2*Zs2*cos(t2 - t3)*cos(t3)*cos(d2 - t2) - 2*B13*B23*Edp2*Xd2*Zs2*cos(t2 - t3)*cos(t3)*cos(d2 - t2) - 2*B13*B23*Edp2*Rs2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3) - 2*B13*B23*Eqp2*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3) + 2*B13*K03*V2*Xd2*Zs2*sin(d2 - t2)*cos(t3)*cos(d2 - t2) + 2*B13*K03*V2*Xqp2*Zs2*sin(d2 - t2)*cos(t3)*cos(d2 - t2) - 2*B13*B23*Eqp2*Rs2*Zs2*sin(t2 - t3)*sin(t3)*cos(d2 - t2) + 2*B13*B23*Edp2*Xd2*Zs2*sin(t2 - t3)*sin(t3)*cos(d2 - t2) - 2*B13*K03*V2*Xd2*Zs2*sin(d2 - t2)*sin(t3)*cos(d2 - t2) - 2*B13*K03*V2*Xqp2*Zs2*sin(d2 - t2)*sin(t3)*cos(d2 - t2) + 2*B13*B23*Edp2*Rs2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3) + 2*B13*B23*Eqp2*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3) + 4*B13*B23*V2*Xd2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3)*cos(d2 - t2) + 4*B13*B23*V2*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3)*cos(d2 - t2) - 4*B13*B23*V2*Xd2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3)*cos(d2 - t2) - 4*B13*B23*V2*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3)*cos(d2 - t2))))*(-1/epsilon);
 d/dt[t3] = (-(B23*(B23 + B13*cos(t2) + K03*cos(t2 - t3) + K03*sin(t2 - t3))*(L02 + V2*Xd2*Zs2 + Edp2*Rs2*Zs2*cos(d2 - t2) + Eqp2*Xqp2*Zs2*cos(d2 - t2) + Eqp2*Rs2*Zs2*sin(d2 - t2) - Edp2*Xd2*Zs2*sin(d2 - t2) - V2*Xd2*Zs2*cos(d2 - t2)^2 - V2*Xqp2*Zs2*cos(d2 - t2)^2 - Rs2*V2*Zs2*sin(2*d2 - 2*t2)))/(2*B13^2*Rs2*V2*Zs2 + 2*B23^2*Rs2*V2*Zs2 - B13*B23^2*V3*sin(t3) + B13^2*B23*V3*sin(t2 - t3) - B13^2*Eqp2*Xqp2*Zs2*sin(d2 - t2) - B23^2*Eqp2*Xqp2*Zs2*sin(d2 - t2) - 4*B13^2*Rs2*V2*Zs2*cos(d2 - t2)^2 - 4*B23^2*Rs2*V2*Zs2*cos(d2 - t2)^2 + B13^2*V2*Xd2*Zs2*sin(2*d2 - 2*t2) + B23^2*V2*Xd2*Zs2*sin(2*d2 - 2*t2) + B13^2*V2*Xqp2*Zs2*sin(2*d2 - 2*t2) + B23^2*V2*Xqp2*Zs2*sin(2*d2 - 2*t2) + B13^2*Eqp2*Rs2*Zs2*cos(d2 - t2) + B23^2*Eqp2*Rs2*Zs2*cos(d2 - t2) - B13^2*Edp2*Xd2*Zs2*cos(d2 - t2) - B23^2*Edp2*Xd2*Zs2*cos(d2 - t2) - B13^2*Edp2*Rs2*Zs2*sin(d2 - t2) - B23^2*Edp2*Rs2*Zs2*sin(d2 - t2) + 2*B23*K03*Rs2*V2*Zs2*sin(t2 - t3) + B13*B23*K03*V3*sin(t2 - t3)*cos(t3) - B13*B23*K03*V3*sin(t2 - t3)*sin(t3) + 2*B13*K03*Rs2*V2*Zs2*cos(t3) - 2*B13*K03*Rs2*V2*Zs2*sin(t3) + 2*B23*K03*Rs2*V2*Zs2*cos(t2 - t3) - B23*Edp2*K03*Rs2*Zs2*sin(d2 - t2)*sin(t2 - t3) - B23*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3) - 4*B13*K03*Rs2*V2*Zs2*cos(t3)*cos(d2 - t2)^2 + 4*B13*K03*Rs2*V2*Zs2*sin(t3)*cos(d2 - t2)^2 - 4*B23*K03*Rs2*V2*Zs2*cos(t2 - t3)*cos(d2 - t2)^2 - 4*B23*K03*Rs2*V2*Zs2*sin(t2 - t3)*cos(d2 - t2)^2 + B13*Eqp2*K03*Rs2*Zs2*cos(t3)*cos(d2 - t2) - B13*Edp2*K03*Xd2*Zs2*cos(t3)*cos(d2 - t2) - B13*Edp2*K03*Rs2*Zs2*sin(d2 - t2)*cos(t3) - B13*Eqp2*K03*Rs2*Zs2*sin(t3)*cos(d2 - t2) + B13*Edp2*K03*Xd2*Zs2*sin(t3)*cos(d2 - t2) - B13*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2)*cos(t3) + 4*B13*B23*Rs2*V2*Zs2*cos(t2 - t3)*cos(t3) + B13*Edp2*K03*Rs2*Zs2*sin(d2 - t2)*sin(t3) + B13*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2)*sin(t3) + B23*Eqp2*K03*Rs2*Zs2*cos(t2 - t3)*cos(d2 - t2) - 4*B13*B23*Rs2*V2*Zs2*sin(t2 - t3)*sin(t3) - B23*Edp2*K03*Xd2*Zs2*cos(t2 - t3)*cos(d2 - t2) - B23*Edp2*K03*Rs2*Zs2*sin(d2 - t2)*cos(t2 - t3) + B23*Eqp2*K03*Rs2*Zs2*sin(t2 - t3)*cos(d2 - t2) - B23*Edp2*K03*Xd2*Zs2*sin(t2 - t3)*cos(d2 - t2) - B23*Eqp2*K03*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3) + 2*B23*K03*V2*Xd2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(d2 - t2) + 2*B23*K03*V2*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(d2 - t2) + 2*B23*K03*V2*Xd2*Zs2*sin(d2 - t2)*sin(t2 - t3)*cos(d2 - t2) + 2*B23*K03*V2*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3)*cos(d2 - t2) - 8*B13*B23*Rs2*V2*Zs2*cos(t2 - t3)*cos(t3)*cos(d2 - t2)^2 + 8*B13*B23*Rs2*V2*Zs2*sin(t2 - t3)*sin(t3)*cos(d2 - t2)^2 + 2*B13*B23*Eqp2*Rs2*Zs2*cos(t2 - t3)*cos(t3)*cos(d2 - t2) - 2*B13*B23*Edp2*Xd2*Zs2*cos(t2 - t3)*cos(t3)*cos(d2 - t2) - 2*B13*B23*Edp2*Rs2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3) - 2*B13*B23*Eqp2*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3) + 2*B13*K03*V2*Xd2*Zs2*sin(d2 - t2)*cos(t3)*cos(d2 - t2) + 2*B13*K03*V2*Xqp2*Zs2*sin(d2 - t2)*cos(t3)*cos(d2 - t2) - 2*B13*B23*Eqp2*Rs2*Zs2*sin(t2 - t3)*sin(t3)*cos(d2 - t2) + 2*B13*B23*Edp2*Xd2*Zs2*sin(t2 - t3)*sin(t3)*cos(d2 - t2) - 2*B13*K03*V2*Xd2*Zs2*sin(d2 - t2)*sin(t3)*cos(d2 - t2) - 2*B13*K03*V2*Xqp2*Zs2*sin(d2 - t2)*sin(t3)*cos(d2 - t2) + 2*B13*B23*Edp2*Rs2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3) + 2*B13*B23*Eqp2*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3) + 4*B13*B23*V2*Xd2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3)*cos(d2 - t2) + 4*B13*B23*V2*Xqp2*Zs2*sin(d2 - t2)*cos(t2 - t3)*cos(t3)*cos(d2 - t2) - 4*B13*B23*V2*Xd2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3)*cos(d2 - t2) - 4*B13*B23*V2*Xqp2*Zs2*sin(d2 - t2)*sin(t2 - t3)*sin(t3)*cos(d2 - t2)))*(-1/epsilon);
jump:
        (tau >= 9) ==> @1 (tau' = 0) ;

}




init:
@1	(and (d1 = 0) (d2 = 0) (w1 = 377) (w2 = 377));


%%
goal:
@1	(and (x >= 0.48));
