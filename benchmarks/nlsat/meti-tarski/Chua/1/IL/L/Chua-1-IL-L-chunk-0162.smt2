(set-logic QF_NRA)

(declare-fun skoX () Real)
(declare-fun skoS () Real)
(declare-fun skoC () Real)
(assert (and (<= (* skoX (+ (+ (+ (/ 3335549054091264. 390625.) (* skoC (/ (- 3640639094784.) 625.))) (* skoS (/ (- 3253337063424.) 3125.))) (* skoX (+ (+ (+ (/ 30877708256280576. 1220703125.) (* skoC (/ (- 1441086308352.) 78125.))) (* skoS (/ (- 1287779254272.) 390625.))) (* skoX (+ (/ (- 24104400876601344.) 3814697265625.) (* skoX (+ (/ 9157891644048384. 11920928955078125.) (* skoX (+ (/ (- 2305052460338112.) 37252902984619140625.) (* skoX (+ (/ 427281051458808. 116415321826934814453125.) (* skoX (+ (/ (- 244905887660571.) 1455191522836685180664062500.) (* skoX (+ (/ 3559463150366781. 582076609134674072265625000000000.) (* skoX (+ (/ (- 5164912679546799.) 29103830456733703613281250000000000000.) (* skoX (+ (/ 5958523898693217. 1455191522836685180664062500000000000000000.) (* skoX (+ (/ (- 2682926482990077.) 36379788070917129516601562500000000000000000000.) (* skoX (+ (/ 3612953956373451. 3637978807091712951660156250000000000000000000000000.) (* skoX (+ (/ (- 66791142968679.) 7275957614183425903320312500000000000000000000000000000.) (* skoX (/ 668981650887. 14551915228366851806640625000000000000000000000000000000000.)))))))))))))))))))))))))))) (+ (+ (/ (- 113728183861248.) 125.) (* skoC (/ 3065801342976. 5.))) (* skoS (/ 2739652263936. 25.)))) (and (not (<= (* skoX (+ (/ 57. 500.) (* skoX (/ 361. 1000000.)))) (- 12.))) (and (not (<= skoX 0.)) (and (not (<= skoS (* skoC (/ (- 235.) 42.)))) (and (<= (* skoC (/ (- 235.) 42.)) skoS) (and (or (not (<= skoS (* skoC (/ (- 235.) 42.)))) (<= skoX 0.)) (and (or (<= (* skoC (/ (- 235.) 42.)) skoS) (<= skoX 0.)) (and (= (* skoS skoS) (+ 1. (* skoC (* skoC (- 1.))))) (and (<= skoX 289.) (<= 0. skoX)))))))))))
(set-info :status unsat)
(check-sat)

