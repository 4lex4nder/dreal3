(set-logic QF_NRA)

(declare-fun skoX () Real)
(declare-fun skoS () Real)
(declare-fun skoC () Real)
(assert (and (<= (* skoX (+ (/ (- 150768.) 78125.) (* skoX (+ (/ 56538. 244140625.) (* skoX (+ (/ (- 28269.) 1525878906250.) (* skoX (+ (/ 593649. 610351562500000000.) (* skoX (+ (/ (- 254421.) 7629394531250000000000.) (* skoX (/ 254421. 381469726562500000000000000.)))))))))))) (+ (+ (/ (- 201024.) 25.) (* skoC (/ (- 27072.) 5.))) (* skoS (/ (- 24192.) 25.)))) (and (<= (* skoX (+ (/ (- 4968.) 390625.) (* skoX (+ (/ 1863. 1220703125.) (* skoX (+ (/ (- 1863.) 15258789062500.) (* skoX (+ (/ 39123. 6103515625000000000.) (* skoX (+ (/ (- 16767.) 76293945312500000000000.) (* skoX (/ 16767. 3814697265625000000000000000.)))))))))))) (/ (- 6624.) 125.)) (and (<= (* skoX (+ (/ 4968. 390625.) (* skoX (+ (/ (- 1863.) 1220703125.) (* skoX (+ (/ 1863. 15258789062500.) (* skoX (+ (/ (- 39123.) 6103515625000000000.) (* skoX (+ (/ 16767. 76293945312500000000000.) (* skoX (/ (- 16767.) 3814697265625000000000000000.)))))))))))) (/ 6624. 125.)) (and (<= skoX 0.) (and (<= skoS (* skoC (/ (- 235.) 42.))) (and (or (not (<= (* skoC (/ (- 235.) 42.)) skoS)) (not (<= skoS (* skoC (/ (- 235.) 42.))))) (and (= (* skoS skoS) (+ 1. (* skoC (* skoC (- 1.))))) (and (<= skoX 289.) (<= 0. skoX))))))))))
(set-info :status unsat)
(check-sat)
