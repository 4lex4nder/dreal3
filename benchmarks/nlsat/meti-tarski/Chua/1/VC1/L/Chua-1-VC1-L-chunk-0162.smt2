(set-logic QF_NRA)

(declare-fun skoX () Real)
(declare-fun skoS () Real)
(declare-fun skoC () Real)
(assert (and (<= (* skoX (+ (+ (+ (/ 2742915793158144. 390625.) (* skoC (/ (- 13710491910144.) 3125.))) (* skoS (/ 26685109960704. 15625.))) (* skoX (+ (+ (+ (/ 24525695466602496. 1220703125.) (* skoC (/ (- 5427069714432.) 390625.))) (* skoS (/ 10562856026112. 1953125.))) (* skoX (+ (/ (- 19172084982349824.) 3814697265625.) (* skoX (+ (/ 7287137903729664. 11920928955078125.) (* skoX (+ (/ (- 1834589900089152.) 37252902984619140625.) (* skoX (+ (/ 340120474356168. 116415321826934814453125.) (* skoX (+ (/ (- 194967071503641.) 1455191522836685180664062500.) (* skoX (+ (/ 2833866473475051. 582076609134674072265625000000000.) (* skoX (+ (/ (- 4112297096347629.) 29103830456733703613281250000000000000.) (* skoX (+ (/ 4744416176159607. 1455191522836685180664062500000000000000000.) (* skoX (+ (/ (- 2136353374264167.) 36379788070917129516601562500000000000000000000.) (* skoX (+ (/ 2877037331022621. 3637978807091712951660156250000000000000000000000000.) (* skoX (+ (/ (- 53188862743989.) 7275957614183425903320312500000000000000000000000000000.) (* skoX (/ 532768008177. 14551915228366851806640625000000000000000000000000000000000.)))))))))))))))))))))))))))) (+ (+ (/ (- 90571599249408.) 125.) (* skoC (/ 11545677398016. 25.))) (* skoS (/ (- 22471671545856.) 125.)))) (and (not (<= (* skoX (+ (/ 57. 500.) (* skoX (/ 361. 1000000.)))) (- 12.))) (and (not (<= skoX 0.)) (and (not (<= (* skoC (/ 1770. 689.)) skoS)) (and (<= skoS (* skoC (/ 1770. 689.))) (and (or (not (<= (* skoC (/ 1770. 689.)) skoS)) (<= skoX 0.)) (and (or (<= skoS (* skoC (/ 1770. 689.))) (<= skoX 0.)) (and (= (* skoS skoS) (+ 1. (* skoC (* skoC (- 1.))))) (and (<= skoX 289.) (<= 0. skoX)))))))))))
(set-info :status unsat)
(check-sat)

