(set-logic QF_NRA)
(declare-fun skoX () Real)
(declare-fun skoS () Real)
(declare-fun skoC () Real)
(assert (and (<= (+ (* 2430156872400000000 skoS) (* (- 103680000000000000) skoC) (* (- 33657672682740000) (* skoX skoS)) (* 1435968000000000 (* skoX skoC)) (* 155386255551983 (* skoX skoX skoS)) (* (- 6629385600000) (* skoX skoX skoC))) 0) (and (not (<= (+ (* (- 32591820000) skoX) (* 156450431 (* skoX skoX))) (- 2446800000000))) (and (not (<= (+ (* (- 2430156872400000000) skoS) (* 103680000000000000 skoC) (* 33657672682740000 (* skoX skoS)) (* (- 1435968000000000) (* skoX skoC)) (* (- 155386255551983) (* skoX skoX skoS)) (* 6629385600000 (* skoX skoX skoC))) 0)) (and (<= skoX 0) (and (or (not (<= (+ (* (- 1104000000000000) skoX) (* 388825099584000000 skoS) (* (- 16588800000000000) skoC) (* (- 1117872161304000) (* skoX skoS)) (* 47692800000000 (* skoX skoC)) (* (- 1058000000000) (* skoX skoX)) (* 1071294154583 (* skoX skoX skoS)) (* (- 45705600000) (* skoX skoX skoC))) 384000000000000000)) (<= skoX 0)) (and (<= (+ (* (- 2025130727) skoS) (* 86400000 skoC)) 0) (and (or (not (<= (+ (* (- 2025130727) skoS) (* 86400000 skoC)) 0)) (not (<= (+ (* 2025130727 skoS) (* (- 86400000) skoC)) 0))) (and (= (+ (* skoS skoS) (* skoC skoC)) 1) (and (<= skoX 75) (<= (* (- 1) skoX) 0)))))))))))
(set-info :status unsat)
(check-sat)
