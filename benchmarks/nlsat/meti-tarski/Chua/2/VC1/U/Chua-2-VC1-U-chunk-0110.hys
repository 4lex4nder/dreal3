-- translated from ./meti-tarski/Chua/2/VC1/U/Chua-2-VC1-U-chunk-0110.smt2
DECL
    -- the variables
    float [-1000, 1000] x0, x1, x2;
EXPR
    -- the constraints to be solved
    (!(((-571536000000000000000000000000000000000000 * x1) + (518400000000000000000000000000000000000000 * x2) + (16003008000000000000000000000000000000000 * (x0 * x1)) + (-14515200000000000000000000000000000000000 * (x0 * x2)) + (-224042112000000000000000000000000000000 * (x0 * x0 * x1)) + (203212800000000000000000000000000000000 * (x0 * x0 * x2)) + (2091059712000000000000000000000000000 * (x0 * x0 * x0 * x1)) + (-1896652800000000000000000000000000000 * (x0 * x0 * x0 * x2)) + (-14408708328000000000000000000000000 * (x0 * x0 * x0 * x0 * x1)) + (13069123200000000000000000000000000 * (x0 * x0 * x0 * x0 * x2)) + (76846444416000000000000000000000 * (x0 * x0 * x0 * x0 * x0 * x1)) + (-69701990400000000000000000000000 * (x0 * x0 * x0 * x0 * x0 * x2)) + (-324996421176000000000000000000 * (x0 * x0 * x0 * x0 * x0 * x0 * x1)) + (294781334400000000000000000000 * (x0 * x0 * x0 * x0 * x0 * x0 * x2)) + (1098263768112000000000000000 * (x0 * x0 * x0 * x0 * x0 * x0 * x0 * x1)) + (-996157612800000000000000000 * (x0 * x0 * x0 * x0 * x0 * x0 * x0 * x2)) + (-2951583876801000000000000 * (x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x1)) + (2677173584400000000000000 * (x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x2)) + (6192987359076000000000 * (x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x1)) + (-5617222094400000000000 * (x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x2)) + (-9716583615102000000 * (x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x1)) + (8813227768800000000 * (x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x2)) + (10464013123956000 * (x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x1)) + (-9491168366400000 * (x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x2)) + (-6104007655641 * (x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x1)) + (5536514880400 * (x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x0 * x2))) <= 0) and (!(x0 <= 0) and ((((x1 * x1) + (x2 * x2)) = 1) and ((x0 <= 75) and ((-1 * x0) <= 0)))));
