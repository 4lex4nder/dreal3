(set-logic QF_NRA)
(declare-fun skoY () Real)
(declare-fun skoX () Real)
(declare-fun skoZ () Real)
(assert (and (<= (+ (* (- 9) (* skoX skoX)) (* (- 12) (* skoY skoX)) (* (- 10) (* skoY skoY)) (* (- 18) (* skoY skoZ)) (* (- 18) (* skoX skoZ)) (* (- 9) (* skoZ skoZ)) (* (- 6) (* skoY skoY skoX skoX)) (* (- 4) (* skoY skoY skoY skoX)) (* 18 (* skoY skoX skoX skoZ)) (* 12 (* skoY skoY skoX skoZ)) (* (- 6) (* skoY skoY skoY skoZ)) (* 18 (* skoY skoX skoZ skoZ)) (* (- 3) (* skoY skoY skoZ skoZ)) (* (- 3) (* skoY skoY skoY skoY)) (* (- 1) (* skoY skoY skoY skoY skoX skoX)) (* 6 (* skoY skoY skoY skoX skoX skoZ)) (* 6 (* skoY skoY skoY skoY skoX skoZ)) (* (- 9) (* skoY skoY skoX skoX skoZ skoZ)) (* 6 (* skoY skoY skoY skoX skoZ skoZ)) (* (- 3) (* skoY skoY skoY skoY skoX skoX skoZ skoZ))) 3) (and (<= (+ (* 9 (* skoX skoX)) (* 12 (* skoY skoX)) (* 10 (* skoY skoY)) (* 18 (* skoY skoZ)) (* 18 (* skoX skoZ)) (* 9 (* skoZ skoZ)) (* 6 (* skoY skoY skoX skoX)) (* 4 (* skoY skoY skoY skoX)) (* (- 18) (* skoY skoX skoX skoZ)) (* (- 12) (* skoY skoY skoX skoZ)) (* 6 (* skoY skoY skoY skoZ)) (* (- 18) (* skoY skoX skoZ skoZ)) (* 3 (* skoY skoY skoZ skoZ)) (* 3 (* skoY skoY skoY skoY)) (* skoY skoY skoY skoY skoX skoX) (* (- 6) (* skoY skoY skoY skoX skoX skoZ)) (* (- 6) (* skoY skoY skoY skoY skoX skoZ)) (* 9 (* skoY skoY skoX skoX skoZ skoZ)) (* (- 6) (* skoY skoY skoY skoX skoZ skoZ)) (* 3 (* skoY skoY skoY skoY skoX skoX skoZ skoZ))) (- 3)) (and (<= (+ (* (- 600) skoY) (* (- 450) skoX) (* (- 450) skoZ) (* (- 711) (* skoX skoX)) (* (- 948) (* skoY skoX)) (* (- 790) (* skoY skoY)) (* (- 1422) (* skoY skoZ)) (* (- 1422) (* skoX skoZ)) (* (- 711) (* skoZ skoZ)) (* (- 300) (* skoY skoY skoX)) (* (- 600) (* skoY skoY skoY)) (* (- 1050) (* skoY skoY skoZ)) (* (- 450) (* skoY skoZ skoZ)) (* (- 474) (* skoY skoY skoX skoX)) (* (- 316) (* skoY skoY skoY skoX)) (* 1422 (* skoY skoX skoX skoZ)) (* 948 (* skoY skoY skoX skoZ)) (* (- 474) (* skoY skoY skoY skoZ)) (* 1422 (* skoY skoX skoZ skoZ)) (* (- 237) (* skoY skoY skoZ skoZ)) (* (- 237) (* skoY skoY skoY skoY)) (* 150 (* skoY skoY skoY skoY skoX)) (* 450 (* skoY skoY skoX skoX skoZ)) (* 1200 (* skoY skoY skoY skoX skoZ)) (* 900 (* skoY skoY skoX skoZ skoZ)) (* (- 79) (* skoY skoY skoY skoY skoX skoX)) (* 474 (* skoY skoY skoY skoX skoX skoZ)) (* 474 (* skoY skoY skoY skoY skoX skoZ)) (* (- 711) (* skoY skoY skoX skoX skoZ skoZ)) (* 474 (* skoY skoY skoY skoX skoZ skoZ)) (* (- 150) (* skoY skoY skoY skoY skoX skoX skoZ)) (* (- 450) (* skoY skoY skoY skoX skoX skoZ skoZ)) (* (- 237) (* skoY skoY skoY skoY skoX skoX skoZ skoZ))) 237) (and (not (<= (* (- 1) skoY) 0)) (and (or (not (<= (+ (* (- 1) skoY) (* (- 1) skoX) (* (- 1) skoZ) (* skoY skoX skoZ)) 0)) (<= (* (- 1) skoY) 0)) (and (or (<= (* (- 1) skoY) 0) (<= (+ skoY skoX skoZ (* skoY skoX) (* (- 1) (* skoY skoX skoZ))) 1)) (and (or (not (<= (* (- 1) skoY) 0)) (or (<= (+ (* (- 1) skoY) (* (- 1) skoX) (* (- 1) skoZ) (* skoY skoX skoZ)) 0) (<= (+ (* 3 skoZ) (* 3 (* skoY skoX skoX)) (* 3 (* skoY skoY skoX)) (* (- 3) (* skoY skoX skoZ)) (* skoX skoX skoX) (* skoX skoX skoZ) (* (- 1) (* skoY skoX skoX skoX skoZ)) (* skoY skoY skoX skoX skoX)) 0))) (and (not (<= skoZ 0)) (and (not (<= skoX (- 1))) (and (not (<= (* (- 1) skoY) (- 1))) (not (<= (+ skoY (* (- 1) skoX)) 0)))))))))))))
(set-info :status unsat)
(check-sat)
