(set-logic QF_NRA)
(declare-fun skoY () Real)
(declare-fun skoX () Real)
(declare-fun skoZ () Real)
(assert (and (<= (+ (* (- 63) skoY) (* (- 63) skoX) (* (- 63) skoZ) (* (- 70) (* skoY skoY skoX)) (* (- 70) (* skoY skoY skoY)) (* 63 (* skoY skoX skoZ)) (* (- 70) (* skoY skoY skoZ)) (* (- 15) (* skoY skoY skoY skoY skoX)) (* 70 (* skoY skoY skoY skoX skoZ)) (* (- 15) (* skoY skoY skoY skoY skoZ)) (* (- 15) (* skoY skoY skoY skoY skoY)) (* 15 (* skoY skoY skoY skoY skoY skoX skoZ))) 0) (and (<= (+ (* 63 skoY) (* 63 skoX) (* 63 skoZ) (* 70 (* skoY skoY skoX)) (* 70 (* skoY skoY skoY)) (* (- 63) (* skoY skoX skoZ)) (* 70 (* skoY skoY skoZ)) (* 15 (* skoY skoY skoY skoY skoX)) (* (- 70) (* skoY skoY skoY skoX skoZ)) (* 15 (* skoY skoY skoY skoY skoZ)) (* 15 (* skoY skoY skoY skoY skoY)) (* (- 15) (* skoY skoY skoY skoY skoY skoX skoZ))) 0) (and (<= (+ (* 29673 skoY) (* 29673 skoX) (* 29673 skoZ) (* (- 39900) (* skoY skoY)) (* (- 18900) (* skoY skoZ)) (* 32970 (* skoY skoY skoX)) (* 32970 (* skoY skoY skoY)) (* (- 29673) (* skoY skoX skoZ)) (* 32970 (* skoY skoY skoZ)) (* 6300 (* skoY skoY skoY skoX)) (* (- 19200) (* skoY skoY skoY skoY)) (* 18900 (* skoY skoY skoX skoZ)) (* (- 14700) (* skoY skoY skoY skoZ)) (* 7065 (* skoY skoY skoY skoY skoX)) (* (- 32970) (* skoY skoY skoY skoX skoZ)) (* 7065 (* skoY skoY skoY skoY skoZ)) (* 7065 (* skoY skoY skoY skoY skoY)) (* 3220 (* skoY skoY skoY skoY skoY skoX)) (* 14700 (* skoY skoY skoY skoY skoX skoZ)) (* (- 1280) (* skoY skoY skoY skoY skoY skoZ)) (* (- 1280) (* skoY skoY skoY skoY skoY skoY)) (* (- 7065) (* skoY skoY skoY skoY skoY skoX skoZ)) (* 1280 (* skoY skoY skoY skoY skoY skoY skoX skoZ))) 18900) (and (not (<= (+ skoY skoX skoZ (* (- 1) (* skoY skoX skoZ))) 0)) (and (or (not (<= (+ (* (- 1) skoY) (* (- 1) skoX) (* (- 1) skoZ) (* skoY skoX skoZ)) 0)) (<= (* (- 1) skoY) 0)) (and (or (<= (* (- 1) skoY) 0) (<= (+ skoY skoX skoZ (* skoY skoX) (* (- 1) (* skoY skoX skoZ))) 1)) (and (or (not (<= (* (- 1) skoY) 0)) (or (<= (+ (* (- 1) skoY) (* (- 1) skoX) (* (- 1) skoZ) (* skoY skoX skoZ)) 0) (<= (+ (* 3 skoZ) (* 3 (* skoY skoY skoX)) (* (- 3) (* skoY skoX skoZ)) (* skoX skoX skoX) (* skoX skoX skoZ) (* 3 (* skoY skoX skoX)) (* (- 1) (* skoY skoX skoX skoX skoZ)) (* skoY skoY skoX skoX skoX)) 0))) (and (not (<= skoZ 0)) (and (not (<= skoX (- 1))) (and (not (<= (* (- 1) skoY) (- 1))) (not (<= (+ skoY (* (- 1) skoX)) 0)))))))))))))
(set-info :status unsat)
(check-sat)
