(set-logic QF_NRA)
(declare-fun skoY () Real)
(declare-fun skoX () Real)
(declare-fun skoZ () Real)
(assert (and (not (<= (* (- 1) skoY) 0)) (and (not (<= (+ (* (- 63) (* skoX skoX)) (* 252 (* skoY skoX)) (* (- 273) (* skoY skoY)) (* (- 126) (* skoY skoZ)) (* (- 126) (* skoX skoZ)) (* (- 63) (* skoZ skoZ)) (* (- 259) (* skoY skoY skoX skoX)) (* 280 (* skoY skoY skoY skoX)) (* (- 115) (* skoY skoY skoY skoY)) (* 126 (* skoY skoX skoX skoZ)) (* (- 14) (* skoY skoY skoX skoZ)) (* (- 140) (* skoY skoY skoY skoZ)) (* 126 (* skoY skoX skoZ skoZ)) (* (- 70) (* skoY skoY skoZ skoZ)) (* (- 225) (* skoY skoY skoY skoY skoX skoX)) (* 60 (* skoY skoY skoY skoY skoY skoX)) (* 140 (* skoY skoY skoY skoX skoX skoZ)) (* 110 (* skoY skoY skoY skoY skoX skoZ)) (* (- 30) (* skoY skoY skoY skoY skoY skoZ)) (* (- 63) (* skoY skoY skoX skoX skoZ skoZ)) (* 140 (* skoY skoY skoY skoX skoZ skoZ)) (* (- 15) (* skoY skoY skoY skoY skoZ skoZ)) (* (- 15) (* skoY skoY skoY skoY skoY skoY)) (* (- 45) (* skoY skoY skoY skoY skoY skoY skoX skoX)) (* 30 (* skoY skoY skoY skoY skoY skoX skoX skoZ)) (* 30 (* skoY skoY skoY skoY skoY skoY skoX skoZ)) (* (- 70) (* skoY skoY skoY skoY skoX skoX skoZ skoZ)) (* 30 (* skoY skoY skoY skoY skoY skoX skoZ skoZ)) (* (- 15) (* skoY skoY skoY skoY skoY skoY skoX skoX skoZ skoZ))) 189)) (and (not (<= skoZ 0)) (and (not (<= skoX (- 1))) (and (not (<= (* (- 1) skoY) (- 1))) (not (<= (+ skoY (* (- 1) skoX)) 0))))))))
(set-info :status unsat)
(check-sat)
