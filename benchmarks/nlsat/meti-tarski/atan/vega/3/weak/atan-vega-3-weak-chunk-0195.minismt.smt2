(set-logic QF_NRA)
(declare-fun skoY () Real)
(declare-fun skoX () Real)
(declare-fun skoZ () Real)
(assert (and (not (<= (+ (* (- 1) skoY) (* (- 1) skoX) (* (- 1) skoZ) (* skoY skoX skoZ)) 0)) (and (not (<= (+ (* 273 skoY) (* 273 skoX) (* 273 skoZ) (* (- 200) (* skoY skoY)) (* (- 150) (* skoY skoZ)) (* (- 273) (* skoY skoX skoZ)) (* 91 (* skoY skoY skoX)) (* 91 (* skoY skoY skoZ)) (* 91 (* skoY skoY skoY)) (* 50 (* skoY skoY skoY skoX)) (* 150 (* skoY skoY skoX skoZ)) (* (- 91) (* skoY skoY skoY skoX skoZ))) 150)) (and (not (<= skoZ 0)) (and (not (<= skoX (- 1))) (and (not (<= (* (- 1) skoY) (- 1))) (not (<= (+ skoY (* (- 1) skoX)) 0))))))))
(set-info :status unsat)
(check-sat)
