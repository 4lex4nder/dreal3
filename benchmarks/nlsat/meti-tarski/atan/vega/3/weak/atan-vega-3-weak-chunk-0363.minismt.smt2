(set-logic QF_NRA)
(declare-fun skoY () Real)
(declare-fun skoX () Real)
(declare-fun skoZ () Real)
(assert (and (not (<= (+ (* 400 skoY) (* 300 skoX) (* 300 skoZ) (* 399 (* skoX skoX)) (* 532 (* skoY skoX)) (* 399 (* skoY skoY)) (* 798 (* skoY skoZ)) (* 798 (* skoX skoZ)) (* 399 (* skoZ skoZ)) (* 100 (* skoY skoY skoX)) (* 600 (* skoY skoY skoZ)) (* 300 (* skoY skoZ skoZ)) (* 300 (* skoY skoY skoY)) (* 133 (* skoY skoY skoX skoX)) (* (- 798) (* skoY skoY skoX skoZ)) (* (- 798) (* skoY skoX skoX skoZ)) (* (- 798) (* skoY skoX skoZ skoZ)) (* 100 (* skoY skoY skoY skoX skoX)) (* (- 300) (* skoY skoY skoX skoX skoZ)) (* (- 600) (* skoY skoY skoY skoX skoZ)) (* (- 600) (* skoY skoY skoX skoZ skoZ)) (* 399 (* skoY skoY skoX skoX skoZ skoZ)) (* 300 (* skoY skoY skoY skoX skoX skoZ skoZ))) (- 133))) (and (not (<= skoZ 0)) (and (not (<= skoX (- 1))) (and (not (<= (* (- 1) skoY) (- 1))) (not (<= (+ skoY (* (- 1) skoX)) 0)))))))
(set-info :status sat)
(check-sat)
