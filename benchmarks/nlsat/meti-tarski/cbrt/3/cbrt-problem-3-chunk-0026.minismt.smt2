(set-logic QF_NRA)
(declare-fun skoX () Real)
(declare-fun skoY () Real)
(declare-fun skoZ () Real)
(assert (and (<= (+ (* 4 skoX) (* 4 skoY) (* 4 skoZ) (* (- 2) (* skoX skoX)) (* 24 (* skoX skoY)) (* (- 2) (* skoY skoY)) (* 24 (* skoX skoZ)) (* 24 (* skoY skoZ)) (* (- 2) (* skoZ skoZ)) (* (- 4) (* skoX skoX skoY)) (* (- 4) (* skoX skoY skoY)) (* 80 (* skoX skoY skoZ)) (* (- 4) (* skoX skoX skoZ)) (* (- 4) (* skoY skoY skoZ)) (* (- 4) (* skoX skoZ skoZ)) (* (- 4) (* skoY skoZ skoZ)) (* (- 8) (* skoX skoX skoY skoZ)) (* (- 8) (* skoX skoY skoY skoZ)) (* (- 8) (* skoX skoY skoZ skoZ))) 2) (and (not (<= (* 2 skoX) (- 1))) (and (not (<= skoZ 0)) (and (not (<= skoY 0)) (not (<= skoX 0)))))))
(set-info :status sat)
(check-sat)
