(set-logic QF_NRA)
(declare-fun skoY () Real)
(declare-fun skoZ () Real)
(declare-fun skoX () Real)
(assert (and (not (<= (+ (* (- 69) skoY) (* (- 69) skoZ) (* (- 5) skoX) (* (- 10) (* skoY skoY)) (* (- 10) (* skoY skoX)) (* (- 148) (* skoY skoZ)) (* (- 10) (* skoZ skoZ)) (* (- 10) (* skoZ skoX)) (* (- 20) (* skoY skoY skoZ)) (* (- 20) (* skoY skoZ skoX)) (* (- 20) (* skoY skoZ skoZ))) 32)) (and (not (<= (+ (* 176 skoY) (* 176 skoZ) (* 176 skoX) (* (- 71) (* skoY skoY)) (* 1522 (* skoY skoX)) (* 1522 (* skoY skoZ)) (* (- 71) (* skoZ skoZ)) (* 1522 (* skoZ skoX)) (* (- 71) (* skoX skoX)) (* 34 (* skoY skoY skoZ)) (* 5740 (* skoY skoZ skoX)) (* 34 (* skoY skoZ skoZ)) (* (- 2) (* skoX skoX skoX)) (* 34 (* skoY skoY skoX)) (* 34 (* skoY skoX skoX)) (* (- 2) (* skoY skoY skoY)) (* 34 (* skoZ skoZ skoX)) (* 34 (* skoZ skoX skoX)) (* (- 2) (* skoZ skoZ skoZ)) (* (- 4) (* skoY skoX skoX skoX)) (* (- 4) (* skoY skoY skoY skoX)) (* (- 8) (* skoY skoY skoX skoX)) (* 420 (* skoY skoZ skoZ skoX)) (* 420 (* skoY skoY skoZ skoX)) (* 420 (* skoY skoZ skoX skoX)) (* (- 8) (* skoY skoY skoZ skoZ)) (* (- 4) (* skoY skoZ skoZ skoZ)) (* (- 4) (* skoZ skoX skoX skoX)) (* (- 4) (* skoY skoY skoY skoZ)) (* (- 4) (* skoZ skoZ skoZ skoX)) (* (- 8) (* skoZ skoZ skoX skoX)) (* (- 8) (* skoY skoZ skoX skoX skoX)) (* (- 8) (* skoY skoY skoY skoZ skoX)) (* (- 16) (* skoY skoY skoZ skoX skoX)) (* (- 8) (* skoY skoZ skoZ skoZ skoX)) (* (- 16) (* skoY skoY skoZ skoZ skoX)) (* (- 16) (* skoY skoZ skoZ skoX skoX))) 160)) (and (not (<= (* 20 skoZ) 1)) (and (not (<= (* 20 skoY) 1)) (and (not (<= (* 20 skoX) 1)) (and (not (<= (* (- 1) skoZ) (- 15))) (and (not (<= (* (- 1) skoY) (- 15))) (not (<= (* (- 1) skoX) (- 15)))))))))))
(set-info :status unsat)
(check-sat)
