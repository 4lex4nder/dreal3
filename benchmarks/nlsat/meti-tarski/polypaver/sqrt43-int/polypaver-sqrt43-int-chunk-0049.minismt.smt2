(set-logic QF_NRA)
(declare-fun skoX () Real)
(declare-fun skoR () Real)
(declare-fun skoE1 () Real)
(declare-fun skoE2 () Real)
(declare-fun skoE3 () Real)
(declare-fun skoEA1 () Real)
(declare-fun skoEA2 () Real)
(declare-fun skoEA3 () Real)
(assert (and (not (<= (+ (* 4 skoX) (* (- 4) skoR) (* (- 1) (* skoX skoX))) 0)) (and (<= (* 85070591730234615865843651857942052864 skoEA3) 1) (and (<= (* 85070591730234615865843651857942052864 skoEA2) 1) (and (<= (* 85070591730234615865843651857942052864 skoEA1) 1) (and (<= (* 32 skoE3) 1) (and (<= (* 32 skoE2) 1) (and (<= (* 32 skoE1) 1) (and (<= (* (- 32) skoE3) 1) (and (<= (* (- 32) skoE2) 1) (and (<= (* (- 32) skoE1) 1) (and (<= (* (- 85070591730234615865843651857942052864) skoEA3) 1) (and (<= (* (- 85070591730234615865843651857942052864) skoEA2) 1) (and (<= (* (- 85070591730234615865843651857942052864) skoEA1) 1) (and (<= skoX 2) (and (<= skoR 3) (and (<= (* (- 2) skoX) (- 1)) (<= (* (- 1) skoR) 0))))))))))))))))))
(set-info :status sat)
(check-sat)
