(set-logic QF_NRA)
(declare-fun skoY () Real)
(declare-fun skoX () Real)
(declare-fun skoZ () Real)
(assert (and (not (<= (+ (* (- 60) skoY) (* (- 60) skoX) (* (- 60) skoZ) (* 15 (* skoX skoX skoZ)) (* 15 (* skoY skoY skoZ)) (* 30 (* skoY skoX skoZ)) (* 15 (* skoY skoZ skoZ)) (* 15 (* skoX skoZ skoZ)) (* 10 (* skoZ skoZ skoZ)) (* 5 (* skoX skoX skoX)) (* 15 (* skoY skoX skoX)) (* 10 (* skoY skoY skoY)) (* 15 (* skoY skoY skoX))) 3)) (and (not (<= (* (- 10) skoX) (- 11))) (and (not (<= (* (- 10) skoY) (- 11))) (and (not (<= (* (- 10) skoZ) (- 11))) (and (not (<= (* 10 skoX) 1)) (and (not (<= (* 10 skoY) 1)) (not (<= (* 10 skoZ) 1)))))))))
(set-info :status unsat)
(check-sat)
