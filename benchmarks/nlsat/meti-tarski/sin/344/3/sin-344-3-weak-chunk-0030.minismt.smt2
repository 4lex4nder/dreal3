(set-logic QF_NRA)
(declare-fun skoY () Real)
(declare-fun skoX () Real)
(declare-fun skoZ () Real)
(assert (and (<= (+ (* (- 6) skoY) (* (- 6) skoX) (* (- 6) skoZ) (* 3 (* skoX skoX skoZ)) (* 3 (* skoY skoY skoZ)) (* 6 (* skoY skoX skoZ)) (* 3 (* skoY skoZ skoZ)) (* 3 (* skoX skoZ skoZ)) (* skoZ skoZ skoZ) (* skoX skoX skoX) (* 3 (* skoY skoX skoX)) (* skoY skoY skoY) (* 3 (* skoY skoY skoX))) 0) (and (<= (+ skoY skoX skoZ) 0) (and (not (<= (* 10 skoZ) 1)) (and (not (<= (* 10 skoY) 1)) (and (not (<= (* 10 skoX) 1)) (and (not (<= (* (- 10) skoZ) (- 11))) (and (not (<= (* (- 10) skoY) (- 11))) (not (<= (* (- 10) skoX) (- 11)))))))))))
(set-info :status unsat)
(check-sat)
