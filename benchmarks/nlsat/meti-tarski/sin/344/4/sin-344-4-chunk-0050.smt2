(set-logic QF_NRA)

(declare-fun skoZ () Real)
(declare-fun skoY () Real)
(declare-fun skoX () Real)
(declare-fun skoW () Real)
(assert (and (<= (+ (+ (* skoW (- 1.)) (* skoX (- 1.))) (* skoY (- 1.))) skoZ) (and (not (<= (* skoZ (+ (+ (+ (+ (- 1.) (* skoW (* skoW (+ (/ 1. 2.) (* skoW (* skoW (+ (/ (- 1.) 24.) (* skoW (* skoW (/ 1. 720.)))))))))) (* skoX (+ (* skoW (+ 1. (* skoW (* skoW (+ (/ (- 1.) 6.) (* skoW (* skoW (/ 1. 120.)))))))) (* skoX (+ (+ (/ 1. 2.) (* skoW (* skoW (+ (/ (- 1.) 4.) (* skoW (* skoW (/ 1. 48.))))))) (* skoX (+ (* skoW (+ (/ (- 1.) 6.) (* skoW (* skoW (/ 1. 36.))))) (* skoX (+ (+ (/ (- 1.) 24.) (* skoW (* skoW (/ 1. 48.)))) (* skoX (+ (* skoW (/ 1. 120.)) (* skoX (/ 1. 720.))))))))))))) (* skoY (+ (+ (* skoW (+ 1. (* skoW (* skoW (+ (/ (- 1.) 6.) (* skoW (* skoW (/ 1. 120.)))))))) (* skoX (+ (+ 1. (* skoW (* skoW (+ (/ (- 1.) 2.) (* skoW (* skoW (/ 1. 24.))))))) (* skoX (+ (* skoW (+ (/ (- 1.) 2.) (* skoW (* skoW (/ 1. 12.))))) (* skoX (+ (+ (/ (- 1.) 6.) (* skoW (* skoW (/ 1. 12.)))) (* skoX (+ (* skoW (/ 1. 24.)) (* skoX (/ 1. 120.))))))))))) (* skoY (+ (+ (+ (/ 1. 2.) (* skoW (* skoW (+ (/ (- 1.) 4.) (* skoW (* skoW (/ 1. 48.))))))) (* skoX (+ (* skoW (+ (/ (- 1.) 2.) (* skoW (* skoW (/ 1. 12.))))) (* skoX (+ (+ (/ (- 1.) 4.) (* skoW (* skoW (/ 1. 8.)))) (* skoX (+ (* skoW (/ 1. 12.)) (* skoX (/ 1. 48.))))))))) (* skoY (+ (+ (* skoW (+ (/ (- 1.) 6.) (* skoW (* skoW (/ 1. 36.))))) (* skoX (+ (+ (/ (- 1.) 6.) (* skoW (* skoW (/ 1. 12.)))) (* skoX (+ (* skoW (/ 1. 12.)) (* skoX (/ 1. 36.))))))) (* skoY (+ (+ (+ (/ (- 1.) 24.) (* skoW (* skoW (/ 1. 48.)))) (* skoX (+ (* skoW (/ 1. 24.)) (* skoX (/ 1. 48.))))) (* skoY (+ (+ (* skoW (/ 1. 120.)) (* skoX (/ 1. 120.))) (* skoY (/ 1. 720.))))))))))))) (* skoZ (+ (+ (+ (* skoW (+ (/ 1. 2.) (* skoW (* skoW (+ (/ (- 1.) 12.) (* skoW (* skoW (/ 1. 240.)))))))) (* skoX (+ (+ (/ 1. 2.) (* skoW (* skoW (+ (/ (- 1.) 4.) (* skoW (* skoW (/ 1. 48.))))))) (* skoX (+ (* skoW (+ (/ (- 1.) 4.) (* skoW (* skoW (/ 1. 24.))))) (* skoX (+ (+ (/ (- 1.) 12.) (* skoW (* skoW (/ 1. 24.)))) (* skoX (+ (* skoW (/ 1. 48.)) (* skoX (/ 1. 240.))))))))))) (* skoY (+ (+ (+ (/ 1. 2.) (* skoW (* skoW (+ (/ (- 1.) 4.) (* skoW (* skoW (/ 1. 48.))))))) (* skoX (+ (* skoW (+ (/ (- 1.) 2.) (* skoW (* skoW (/ 1. 12.))))) (* skoX (+ (+ (/ (- 1.) 4.) (* skoW (* skoW (/ 1. 8.)))) (* skoX (+ (* skoW (/ 1. 12.)) (* skoX (/ 1. 48.))))))))) (* skoY (+ (+ (* skoW (+ (/ (- 1.) 4.) (* skoW (* skoW (/ 1. 24.))))) (* skoX (+ (+ (/ (- 1.) 4.) (* skoW (* skoW (/ 1. 8.)))) (* skoX (+ (* skoW (/ 1. 8.)) (* skoX (/ 1. 24.))))))) (* skoY (+ (+ (+ (/ (- 1.) 12.) (* skoW (* skoW (/ 1. 24.)))) (* skoX (+ (* skoW (/ 1. 12.)) (* skoX (/ 1. 24.))))) (* skoY (+ (+ (* skoW (/ 1. 48.)) (* skoX (/ 1. 48.))) (* skoY (/ 1. 240.))))))))))) (* skoZ (+ (+ (+ (+ (/ 1. 6.) (* skoW (* skoW (+ (/ (- 1.) 12.) (* skoW (* skoW (/ 1. 144.))))))) (* skoX (+ (* skoW (+ (/ (- 1.) 6.) (* skoW (* skoW (/ 1. 36.))))) (* skoX (+ (+ (/ (- 1.) 12.) (* skoW (* skoW (/ 1. 24.)))) (* skoX (+ (* skoW (/ 1. 36.)) (* skoX (/ 1. 144.))))))))) (* skoY (+ (+ (* skoW (+ (/ (- 1.) 6.) (* skoW (* skoW (/ 1. 36.))))) (* skoX (+ (+ (/ (- 1.) 6.) (* skoW (* skoW (/ 1. 12.)))) (* skoX (+ (* skoW (/ 1. 12.)) (* skoX (/ 1. 36.))))))) (* skoY (+ (+ (+ (/ (- 1.) 12.) (* skoW (* skoW (/ 1. 24.)))) (* skoX (+ (* skoW (/ 1. 12.)) (* skoX (/ 1. 24.))))) (* skoY (+ (+ (* skoW (/ 1. 36.)) (* skoX (/ 1. 36.))) (* skoY (/ 1. 144.))))))))) (* skoZ (+ (+ (+ (* skoW (+ (/ (- 1.) 24.) (* skoW (* skoW (/ 1. 144.))))) (* skoX (+ (+ (/ (- 1.) 24.) (* skoW (* skoW (/ 1. 48.)))) (* skoX (+ (* skoW (/ 1. 48.)) (* skoX (/ 1. 144.))))))) (* skoY (+ (+ (+ (/ (- 1.) 24.) (* skoW (* skoW (/ 1. 48.)))) (* skoX (+ (* skoW (/ 1. 24.)) (* skoX (/ 1. 48.))))) (* skoY (+ (+ (* skoW (/ 1. 48.)) (* skoX (/ 1. 48.))) (* skoY (/ 1. 144.))))))) (* skoZ (+ (+ (+ (+ (/ (- 1.) 120.) (* skoW (* skoW (/ 1. 240.)))) (* skoX (+ (* skoW (/ 1. 120.)) (* skoX (/ 1. 240.))))) (* skoY (+ (+ (* skoW (/ 1. 120.)) (* skoX (/ 1. 120.))) (* skoY (/ 1. 240.))))) (* skoZ (+ (+ (+ (* skoW (/ 1. 720.)) (* skoX (/ 1. 720.))) (* skoY (/ 1. 720.))) (* skoZ (/ 1. 5040.)))))))))))))) (+ (+ (* skoW (+ 1. (* skoW (* skoW (+ (/ (- 1.) 6.) (* skoW (* skoW (+ (/ 1. 120.) (* skoW (* skoW (/ (- 1.) 5040.))))))))))) (* skoX (+ (+ 1. (* skoW (* skoW (+ (/ (- 1.) 2.) (* skoW (* skoW (+ (/ 1. 24.) (* skoW (* skoW (/ (- 1.) 720.)))))))))) (* skoX (+ (* skoW (+ (/ (- 1.) 2.) (* skoW (* skoW (+ (/ 1. 12.) (* skoW (* skoW (/ (- 1.) 240.)))))))) (* skoX (+ (+ (/ (- 1.) 6.) (* skoW (* skoW (+ (/ 1. 12.) (* skoW (* skoW (/ (- 1.) 144.))))))) (* skoX (+ (* skoW (+ (/ 1. 24.) (* skoW (* skoW (/ (- 1.) 144.))))) (* skoX (+ (+ (/ 1. 120.) (* skoW (* skoW (/ (- 1.) 240.)))) (* skoX (+ (* skoW (/ (- 1.) 720.)) (* skoX (/ (- 1.) 5040.))))))))))))))) (* skoY (+ (+ (+ 1. (* skoW (* skoW (+ (/ (- 1.) 2.) (* skoW (* skoW (+ (/ 1. 24.) (* skoW (* skoW (/ (- 1.) 720.)))))))))) (* skoX (+ (* skoW (+ (- 1.) (* skoW (* skoW (+ (/ 1. 6.) (* skoW (* skoW (/ (- 1.) 120.)))))))) (* skoX (+ (+ (/ (- 1.) 2.) (* skoW (* skoW (+ (/ 1. 4.) (* skoW (* skoW (/ (- 1.) 48.))))))) (* skoX (+ (* skoW (+ (/ 1. 6.) (* skoW (* skoW (/ (- 1.) 36.))))) (* skoX (+ (+ (/ 1. 24.) (* skoW (* skoW (/ (- 1.) 48.)))) (* skoX (+ (* skoW (/ (- 1.) 120.)) (* skoX (/ (- 1.) 720.))))))))))))) (* skoY (+ (+ (* skoW (+ (/ (- 1.) 2.) (* skoW (* skoW (+ (/ 1. 12.) (* skoW (* skoW (/ (- 1.) 240.)))))))) (* skoX (+ (+ (/ (- 1.) 2.) (* skoW (* skoW (+ (/ 1. 4.) (* skoW (* skoW (/ (- 1.) 48.))))))) (* skoX (+ (* skoW (+ (/ 1. 4.) (* skoW (* skoW (/ (- 1.) 24.))))) (* skoX (+ (+ (/ 1. 12.) (* skoW (* skoW (/ (- 1.) 24.)))) (* skoX (+ (* skoW (/ (- 1.) 48.)) (* skoX (/ (- 1.) 240.))))))))))) (* skoY (+ (+ (+ (/ (- 1.) 6.) (* skoW (* skoW (+ (/ 1. 12.) (* skoW (* skoW (/ (- 1.) 144.))))))) (* skoX (+ (* skoW (+ (/ 1. 6.) (* skoW (* skoW (/ (- 1.) 36.))))) (* skoX (+ (+ (/ 1. 12.) (* skoW (* skoW (/ (- 1.) 24.)))) (* skoX (+ (* skoW (/ (- 1.) 36.)) (* skoX (/ (- 1.) 144.))))))))) (* skoY (+ (+ (* skoW (+ (/ 1. 24.) (* skoW (* skoW (/ (- 1.) 144.))))) (* skoX (+ (+ (/ 1. 24.) (* skoW (* skoW (/ (- 1.) 48.)))) (* skoX (+ (* skoW (/ (- 1.) 48.)) (* skoX (/ (- 1.) 144.))))))) (* skoY (+ (+ (+ (/ 1. 120.) (* skoW (* skoW (/ (- 1.) 240.)))) (* skoX (+ (* skoW (/ (- 1.) 120.)) (* skoX (/ (- 1.) 240.))))) (* skoY (+ (+ (* skoW (/ (- 1.) 720.)) (* skoX (/ (- 1.) 720.))) (* skoY (/ (- 1.) 5040.))))))))))))))))) (and (not (<= 3. skoW)) (and (not (<= 3. skoX)) (and (not (<= 3. skoY)) (and (not (<= 3. skoZ)) (and (not (<= skoW (/ 1. 10.))) (and (not (<= skoX (/ 1. 10.))) (and (not (<= skoY (/ 1. 10.))) (not (<= skoZ (/ 1. 10.)))))))))))))
(set-info :status sat)
(check-sat)
