(set-logic QF_NRA)
(declare-fun skoY () Real)
(declare-fun pi () Real)
(declare-fun skoX () Real)
(assert (and (not (<= (+ (* (- 360) (* skoY skoY)) (* 30 (* skoY skoY skoY skoY)) (* (- 1) (* skoY skoY skoY skoY skoY skoY))) (- 720))) (and (not (<= (+ (* 518400 (* skoY skoY)) (* (- 172800) (* skoY skoY skoY skoY)) (* 23040 (* skoY skoY skoY skoY skoY skoY)) (* (- 1620) (* skoY skoY skoY skoY skoY skoY skoY skoY)) (* 60 (* skoY skoY skoY skoY skoY skoY skoY skoY skoY skoY)) (* (- 1) (* skoY skoY skoY skoY skoY skoY skoY skoY skoY skoY skoY skoY))) 0)) (and (not (<= (+ skoY (* (- 1) skoX)) 0)) (and (<= (* (- 10) skoX) (- 1)) (and (not (<= (* (- 10000000) pi) (- 31415927))) (and (not (<= (* 5000000 pi) 15707963)) (<= (+ (* 10 skoY) (* (- 5) pi)) (- 2)))))))))
(set-info :status sat)
(check-sat)
