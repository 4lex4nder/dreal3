(set-logic QF_NRA)
(declare-fun skoX () Real)
(declare-fun skoSX () Real)
(declare-fun skoSMX () Real)
(assert (and (<= (+ (* 1536 skoX) (* (- 2304) skoSX) (* 2304 skoSMX) (* 384 (* skoX skoSX)) (* 384 (* skoX skoSMX)) (* 4992 (* skoX skoX skoSX)) (* (- 4992) (* skoX skoX skoSMX)) (* (- 3072) (* skoX skoX skoX)) (* (- 768) (* skoX skoX skoX skoSX)) (* (- 768) (* skoX skoX skoX skoSMX)) (* (- 3552) (* skoX skoX skoX skoX skoSX)) (* 3552 (* skoX skoX skoX skoX skoSMX)) (* 1920 (* skoX skoX skoX skoX skoX)) (* 480 (* skoX skoX skoX skoX skoX skoSX)) (* 480 (* skoX skoX skoX skoX skoX skoSMX)) (* 912 (* skoX skoX skoX skoX skoX skoX skoSX)) (* (- 912) (* skoX skoX skoX skoX skoX skoX skoSMX)) (* (- 384) (* skoX skoX skoX skoX skoX skoX skoX)) (* (- 96) (* skoX skoX skoX skoX skoX skoX skoX skoSX)) (* (- 96) (* skoX skoX skoX skoX skoX skoX skoX skoSMX)) (* (- 60) (* skoX skoX skoX skoX skoX skoX skoX skoX skoSX)) (* 60 (* skoX skoX skoX skoX skoX skoX skoX skoX skoSMX)) (* 12 (* skoX skoX skoX skoX skoX skoX skoX skoX skoX)) (* 3 (* skoX skoX skoX skoX skoX skoX skoX skoX skoX skoSX)) (* 3 (* skoX skoX skoX skoX skoX skoX skoX skoX skoX skoSMX))) 0) (and (not (<= (+ (* 256 (* skoX skoX)) (* (- 160) (* skoX skoX skoX skoX)) (* 32 (* skoX skoX skoX skoX skoX skoX)) (* (- 1) (* skoX skoX skoX skoX skoX skoX skoX skoX))) 128)) (and (<= (+ (* (- 24) skoX) (* 36 skoSX) (* (- 36) skoSMX) (* (- 6) (* skoX skoSX)) (* (- 6) (* skoX skoSMX)) (* (- 24) (* skoX skoX skoSX)) (* 24 (* skoX skoX skoSMX)) (* 12 (* skoX skoX skoX)) (* 3 (* skoX skoX skoX skoSX)) (* 3 (* skoX skoX skoX skoSMX))) 0) (and (<= (+ (* (- 12) skoX) (* 18 skoSX) (* (- 18) skoSMX) (* (- 3) (* skoX skoSX)) (* (- 3) (* skoX skoSMX)) (* (- 6) (* skoX skoX skoSX)) (* 6 (* skoX skoX skoSMX))) 0) (and (not (<= skoX 0)) (and (<= (* (- 1) skoSMX) 0) (and (<= (* (- 1) skoSX) 0) (and (<= skoX 1) (and (= (+ (* (- 1) skoX) (* skoSX skoSX)) 1) (= (+ skoX (* skoSMX skoSMX)) 1)))))))))))
(set-info :status unsat)
(check-sat)
