(set-logic QF_NRA)
(declare-fun skoSXY () Real)
(declare-fun skoX () Real)
(declare-fun skoY () Real)
(assert (and (<= (+ (* (- 256) (* skoSXY skoSXY skoSXY skoSXY skoSXY skoSXY skoX)) (* (- 160) (* skoSXY skoSXY skoSXY skoSXY skoSXY skoX skoX)) (* (- 32) (* skoSXY skoSXY skoSXY skoSXY skoX skoX skoX)) (* (- 1) (* skoSXY skoSXY skoSXY skoX skoX skoX skoX)) (* (- 128) (* skoSXY skoSXY skoSXY skoSXY skoSXY skoSXY skoSXY))) 0) (and (= (+ (* (- 1) skoX) (* (- 1) skoY) (* skoSXY skoSXY)) 0) (and (not (<= skoY 1)) (and (not (<= (* 2 skoX) 3)) (and (not (<= skoSXY 0)) (and (not (<= (* (- 1) skoX) (- 2))) (not (<= (* (- 32) skoY) (- 33))))))))))
(set-info :status sat)
(check-sat)
