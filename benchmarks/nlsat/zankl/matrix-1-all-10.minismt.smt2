(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun x6 () Real)
(declare-fun x23 () Real)
(declare-fun x13 () Real)
(declare-fun x30 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x10 () Real)
(declare-fun x27 () Real)
(declare-fun x0 () Real)
(declare-fun x17 () Real)
(declare-fun x7 () Real)
(declare-fun x24 () Real)
(declare-fun x14 () Real)
(declare-fun x31 () Real)
(declare-fun x4 () Real)
(declare-fun x21 () Real)
(declare-fun x11 () Real)
(declare-fun x28 () Real)
(declare-fun x1 () Real)
(declare-fun x18 () Real)
(declare-fun x8 () Real)
(declare-fun x25 () Real)
(declare-fun x15 () Real)
(declare-fun x5 () Real)
(declare-fun x22 () Real)
(declare-fun x12 () Real)
(declare-fun x29 () Real)
(declare-fun x2 () Real)
(declare-fun x19 () Real)
(declare-fun x9 () Real)
(declare-fun x26 () Real)
(declare-fun x16 () Real)
(assert (>= x6 0))
(assert (>= x23 0))
(assert (>= x13 0))
(assert (>= x30 0))
(assert (>= x3 0))
(assert (>= x20 0))
(assert (>= x10 0))
(assert (>= x27 0))
(assert (>= x0 0))
(assert (>= x17 0))
(assert (>= x7 0))
(assert (>= x24 0))
(assert (>= x14 0))
(assert (>= x31 0))
(assert (>= x4 0))
(assert (>= x21 0))
(assert (>= x11 0))
(assert (>= x28 0))
(assert (>= x1 0))
(assert (>= x18 0))
(assert (>= x8 0))
(assert (>= x25 0))
(assert (>= x15 0))
(assert (>= x5 0))
(assert (>= x22 0))
(assert (>= x12 0))
(assert (>= x29 0))
(assert (>= x2 0))
(assert (>= x19 0))
(assert (>= x9 0))
(assert (>= x26 0))
(assert (>= x16 0))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (<= (+ x0 (* (- 1) x4) (* x1 x2)) 0)) (>= (+ x0 (* (- 1) x4) (* x1 x2)) 0)) (>= (+ x3 (* (- 1) x5)) 0)) (and (and (not (<= (+ (* (- 1) x6) x0 (* x1 x2) (* (- 1) (* x8 x9))) 0)) (>= (+ (* (- 1) x6) x0 (* x1 x2) (* (- 1) (* x8 x9))) 0)) (>= (+ x3 (* (- 1) x7)) 0))) (and (and (not (<= (+ (* (- 1) x10) x0 (* x1 x2)) 0)) (>= (+ (* (- 1) x10) x0 (* x1 x2)) 0)) (>= (+ x3 (* (- 1) x11)) 0))) (and (and (not (<= (+ x0 (* (- 1) x12) (* x1 x2) (* (- 1) (* x13 x14)) (* (- 1) (* x17 x16)) (* (- 1) (* x19 x9 x16))) 0)) (>= (+ x0 (* (- 1) x12) (* x1 x2) (* (- 1) (* x13 x14)) (* (- 1) (* x17 x16)) (* (- 1) (* x19 x9 x16))) 0)) (>= (+ x3 (* (- 1) (* x13 x15)) (* (- 1) (* x18 x16))) 0))) (and (and (not (<= (+ (* x1 x2) (* (- 1) (* x20 x1)) (* (- 1) (* x23 x3)) (* (- 1) (* x14 x21 x1)) (* (- 1) (* x17 x1 x22)) (* (- 1) (* x1 x22 x19 x9))) 0)) (>= (+ (* x1 x2) (* (- 1) (* x20 x1)) (* (- 1) (* x23 x3)) (* (- 1) (* x14 x21 x1)) (* (- 1) (* x17 x1 x22)) (* (- 1) (* x1 x22 x19 x9))) 0)) (>= (+ x3 (* (- 1) (* x3 x24)) (* (- 1) (* x21 x1 x15)) (* (- 1) (* x1 x18 x22))) 0))) (and (and (not (<= (+ (* x11 x25) (* x11 x25 x26)) 0)) (>= (+ (* x11 x25) (* x11 x25 x26)) 0)) (>= (+ (* (- 1) x11) (* x11 x26 x26)) 0))) (and (and (not (<= (+ (* x7 x25) (* x8 x25) (* (- 1) (* x27 x8)) (* x27 x8 x26)) 0)) (>= (+ (* x7 x25) (* x8 x25) (* (- 1) (* x27 x8)) (* x27 x8 x26)) 0)) (>= (+ (* (- 1) x7) (* x7 x26)) 0))) (and (and (not (<= (+ (* x29 x2) (* (- 1) (* x20 x29)) (* (- 1) (* x23 x30)) (* (- 1) (* x14 x21 x29)) (* (- 1) (* x17 x22 x29)) (* (- 1) (* x22 x29 x19 x9))) 0)) (>= (+ (* x29 x2) (* (- 1) (* x20 x29)) (* (- 1) (* x23 x30)) (* (- 1) (* x14 x21 x29)) (* (- 1) (* x17 x22 x29)) (* (- 1) (* x22 x29 x19 x9))) 0)) (>= (+ x30 (* (- 1) (* x30 x24)) (* (- 1) (* x21 x15 x29)) (* (- 1) (* x18 x22 x29))) 0))) (and (not (<= (+ x20 (* (- 1) x31) (* x31 x22)) 0)) (>= (+ x20 (* (- 1) x31) (* x31 x22)) 0))) (and (not (<= (+ x20 (* (- 1) x31) (* x31 x21)) 0)) (>= (+ x20 (* (- 1) x31) (* x31 x21)) 0))) (and (not (<= (+ x20 (* (- 1) x2) (* x21 x2) (* x22 x2)) 0)) (>= (+ x20 (* (- 1) x2) (* x21 x2) (* x22 x2)) 0))) (and (not (<= (+ x14 (* (- 1) x2) (* x15 x9)) 0)) (>= (+ x14 (* (- 1) x2) (* x15 x9)) 0))) (and (not (<= (+ x14 (* (- 1) x31) (* x25 x15) (* x15 x9 x26)) 0)) (>= (+ x14 (* (- 1) x31) (* x25 x15) (* x15 x9 x26)) 0))) (and (and (not (<= (+ (* x25 x15) (* x25 x15 x26)) 0)) (>= (+ (* x25 x15) (* x25 x15 x26)) 0)) (>= (+ (* (- 1) x15) (* x15 x26 x26)) 0))) (and (not (<= (+ x17 (* (- 1) x31) (* x18 x9)) 0)) (>= (+ x17 (* (- 1) x31) (* x18 x9)) 0))) (and (not (<= (+ x17 (* (- 1) x2) (* x19 x9) (* x18 x25)) 0)) (>= (+ x17 (* (- 1) x2) (* x19 x9) (* x18 x25)) 0))) (and (and (not (<= (+ (* x18 x25) (* x25 x19) (* (- 1) (* x27 x19)) (* x27 x19 x26)) 0)) (>= (+ (* x18 x25) (* x25 x19) (* (- 1) (* x27 x19)) (* x27 x19 x26)) 0)) (>= (+ (* (- 1) x18) (* x18 x26)) 0))) (and (not (<= (+ x23 (* (- 1) x9) (* x24 x9)) 0)) (>= (+ x23 (* (- 1) x9) (* x24 x9)) 0))) (and (and (not (<= (+ x23 (* x24 x25)) 0)) (>= (+ x23 (* x24 x25)) 0)) (>= (* x24 x26) 1))) (and (and (and (and (and (and (and (and (not (<= (+ x0 (* (- 1) x4) (* x1 x2)) 0)) (>= (+ x0 (* (- 1) x4) (* x1 x2)) 0)) (>= (+ x3 (* (- 1) x5)) 0)) (and (and (not (<= (+ (* (- 1) x6) x0 (* x1 x2) (* (- 1) (* x8 x9))) 0)) (>= (+ (* (- 1) x6) x0 (* x1 x2) (* (- 1) (* x8 x9))) 0)) (>= (+ x3 (* (- 1) x7)) 0))) (and (and (not (<= (+ (* (- 1) x10) x0 (* x1 x2)) 0)) (>= (+ (* (- 1) x10) x0 (* x1 x2)) 0)) (>= (+ x3 (* (- 1) x11)) 0))) (and (and (not (<= (+ x0 (* (- 1) x12) (* x1 x2) (* (- 1) (* x13 x14)) (* (- 1) (* x17 x16)) (* (- 1) (* x19 x9 x16))) 0)) (>= (+ x0 (* (- 1) x12) (* x1 x2) (* (- 1) (* x13 x14)) (* (- 1) (* x17 x16)) (* (- 1) (* x19 x9 x16))) 0)) (>= (+ x3 (* (- 1) (* x13 x15)) (* (- 1) (* x18 x16))) 0))) (and (and (not (<= (+ (* x1 x2) (* (- 1) (* x20 x1)) (* (- 1) (* x23 x3)) (* (- 1) (* x14 x21 x1)) (* (- 1) (* x17 x1 x22)) (* (- 1) (* x1 x22 x19 x9))) 0)) (>= (+ (* x1 x2) (* (- 1) (* x20 x1)) (* (- 1) (* x23 x3)) (* (- 1) (* x14 x21 x1)) (* (- 1) (* x17 x1 x22)) (* (- 1) (* x1 x22 x19 x9))) 0)) (>= (+ x3 (* (- 1) (* x3 x24)) (* (- 1) (* x21 x1 x15)) (* (- 1) (* x1 x18 x22))) 0))) (and (and (not (<= (+ (* x11 x25) (* x11 x25 x26)) 0)) (>= (+ (* x11 x25) (* x11 x25 x26)) 0)) (>= (+ (* (- 1) x11) (* x11 x26 x26)) 0))) (and (and (not (<= (+ (* x7 x25) (* x8 x25) (* (- 1) (* x27 x8)) (* x27 x8 x26)) 0)) (>= (+ (* x7 x25) (* x8 x25) (* (- 1) (* x27 x8)) (* x27 x8 x26)) 0)) (>= (+ (* (- 1) x7) (* x7 x26)) 0)))))
(exit)
(check-sat)
