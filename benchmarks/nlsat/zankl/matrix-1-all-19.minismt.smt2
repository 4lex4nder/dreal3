(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun x6 () Real)
(declare-fun x23 () Real)
(declare-fun x13 () Real)
(declare-fun x30 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x10 () Real)
(declare-fun x27 () Real)
(declare-fun x0 () Real)
(declare-fun x17 () Real)
(declare-fun x34 () Real)
(declare-fun x7 () Real)
(declare-fun x24 () Real)
(declare-fun x14 () Real)
(declare-fun x31 () Real)
(declare-fun x4 () Real)
(declare-fun x21 () Real)
(declare-fun x11 () Real)
(declare-fun x28 () Real)
(declare-fun x1 () Real)
(declare-fun x18 () Real)
(declare-fun x8 () Real)
(declare-fun x25 () Real)
(declare-fun x15 () Real)
(declare-fun x32 () Real)
(declare-fun x5 () Real)
(declare-fun x22 () Real)
(declare-fun x12 () Real)
(declare-fun x29 () Real)
(declare-fun x2 () Real)
(declare-fun x19 () Real)
(declare-fun x9 () Real)
(declare-fun x26 () Real)
(declare-fun x16 () Real)
(declare-fun x33 () Real)
(assert (>= x6 0))
(assert (>= x23 0))
(assert (>= x13 0))
(assert (>= x30 0))
(assert (>= x3 0))
(assert (>= x20 0))
(assert (>= x10 0))
(assert (>= x27 0))
(assert (>= x0 0))
(assert (>= x17 0))
(assert (>= x34 0))
(assert (>= x7 0))
(assert (>= x24 0))
(assert (>= x14 0))
(assert (>= x31 0))
(assert (>= x4 0))
(assert (>= x21 0))
(assert (>= x11 0))
(assert (>= x28 0))
(assert (>= x1 0))
(assert (>= x18 0))
(assert (>= x8 0))
(assert (>= x25 0))
(assert (>= x15 0))
(assert (>= x32 0))
(assert (>= x5 0))
(assert (>= x22 0))
(assert (>= x12 0))
(assert (>= x29 0))
(assert (>= x2 0))
(assert (>= x19 0))
(assert (>= x9 0))
(assert (>= x26 0))
(assert (>= x16 0))
(assert (>= x33 0))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (<= (* x3 x2) 0)) (>= (* x3 x2) 0)) (>= (+ (* (- 1) x2) (* x4 x2)) 0)) (and (and (and (not (<= (+ x0 (* (- 1) x5) (* (- 1) (* x6 x7)) (* x3 x2)) 0)) (>= (+ x0 (* (- 1) x5) (* (- 1) (* x6 x7)) (* x3 x2)) 0)) (>= (+ x1 (* (- 1) (* x6 x8))) 0)) (>= (+ (* (- 1) (* x6 x9)) (* x4 x2)) 0))) (and (and (and (not (<= (+ (* x3 x11) (* x3 x12)) 0)) (>= (+ (* x3 x11) (* x3 x12)) 0)) (>= (+ (* (- 1) x11) (* x4 x11)) 0)) (>= (+ (* (- 1) x12) (* x4 x12)) 0))) (and (and (and (not (<= (+ x13 (* (- 1) x10) (* x3 x14) (* x3 x15)) 0)) (>= (+ x13 (* (- 1) x10) (* x3 x14) (* x3 x15)) 0)) (>= (+ (* (- 1) x12) (* x14 x4)) 0)) (>= (+ (* (- 1) x11) (* x4 x15)) 0))) (and (and (and (not (<= (+ x13 (* (- 1) x16) (* (- 1) (* x17 x18)) (* x3 x14) (* x3 x15) (* (- 1) (* x3 x21)) (* (- 1) (* x3 x22))) 0)) (>= (+ x13 (* (- 1) x16) (* (- 1) (* x17 x18)) (* x3 x14) (* x3 x15) (* (- 1) (* x3 x21)) (* (- 1) (* x3 x22))) 0)) (>= (+ (* x14 x4) (* (- 1) (* x20 x17)) (* (- 1) (* x4 x21))) 0)) (>= (+ (* (- 1) (* x17 x19)) (* x4 x15) (* (- 1) (* x4 x22))) 0))) (and (and (and (not (<= (+ (* (- 1) x0) x16 (* x3 x21) (* x3 x22) (* x23 x17)) 0)) (>= (+ (* (- 1) x0) x16 (* x3 x21) (* x3 x22) (* x23 x17)) 0)) (>= (+ (* (- 1) x1) (* x4 x21)) 0)) (>= (+ (* (- 1) x2) (* x4 x22)) 0))) (and (and (and (not (<= (+ (* (- 1) x13) x16 (* (- 1) (* x3 x15)) (* x3 x21) (* x3 x22) (* x23 x17) (* (- 1) (* x7 x14))) 0)) (>= (+ (* (- 1) x13) x16 (* (- 1) (* x3 x15)) (* x3 x21) (* x3 x22) (* x23 x17) (* (- 1) (* x7 x14))) 0)) (>= (+ (* (- 1) (* x14 x8)) (* x4 x21)) 0)) (>= (+ (* (- 1) (* x14 x9)) (* (- 1) (* x4 x15)) (* x4 x22)) 0))) (and (and (and (not (<= (+ (* (- 1) x0) x16 (* x17 x24) (* x3 x21) (* x3 x22)) 0)) (>= (+ (* (- 1) x0) x16 (* x17 x24) (* x3 x21) (* x3 x22)) 0)) (>= (+ (* (- 1) x2) (* x4 x21)) 0)) (>= (+ (* (- 1) x1) (* x4 x22)) 0))) (and (and (and (not (<= (+ (* (- 1) x13) x16 (* x17 x24) (* (- 1) (* x3 x15)) (* x3 x21) (* x3 x22) (* (- 1) (* x7 x14))) 0)) (>= (+ (* (- 1) x13) x16 (* x17 x24) (* (- 1) (* x3 x15)) (* x3 x21) (* x3 x22) (* (- 1) (* x7 x14))) 0)) (>= (+ (* (- 1) (* x14 x9)) (* (- 1) (* x4 x15)) (* x4 x21)) 0)) (>= (+ (* (- 1) (* x14 x8)) (* x4 x22)) 0))) (and (and (and (not (<= (+ x7 (* (- 1) x25) (* x3 x9) (* (- 1) (* x7 x26))) 0)) (>= (+ x7 (* (- 1) x25) (* x3 x9) (* (- 1) (* x7 x26))) 0)) (>= (+ x8 (* (- 1) (* x8 x26))) 0)) (>= (+ (* x4 x9) (* (- 1) (* x9 x26))) 0))) (and (and (not (<= (+ x7 (* x27 x9)) 0)) (>= (+ x7 (* x27 x9)) 0)) (>= x8 1))) (and (and (not (<= (+ x25 (* x3 x26)) 0)) (>= (+ x25 (* x3 x26)) 0)) (>= (* x4 x26) 1))) (and (and (and (not (<= (+ (* x3 x19) (* x3 x20)) 0)) (>= (+ (* x3 x19) (* x3 x20)) 0)) (>= (+ (* (- 1) x19) (* x4 x19)) 0)) (>= (+ (* (- 1) x20) (* x20 x4)) 0))) (and (not (<= (+ (* (- 1) x24) x18 (* x20 x27) (* x3 x19)) 0)) (>= (+ (* (- 1) x24) x18 (* x20 x27) (* x3 x19)) 0))) (and (not (<= (+ (* (- 1) x23) x18 (* x27 x19)) 0)) (>= (+ (* (- 1) x23) x18 (* x27 x19)) 0))) (and (not (<= (+ (* (- 1) x27) x28 (* x27 x29)) 0)) (>= (+ (* (- 1) x27) x28 (* x27 x29)) 0))) (and (and (not (<= (+ (* (- 1) x3) x28 (* x30 x27) (* x3 x29)) 0)) (>= (+ (* (- 1) x3) x28 (* x30 x27) (* x3 x29)) 0)) (>= (+ (* (- 1) x4) (* x4 x29)) 0))) (and (and (and (not (<= (+ (* (- 1) x31) x28 (* x30 x3) (* x3 x29) (* (- 1) (* x18 x32)) (* (- 1) (* x3 x33)) (* (- 1) (* x3 x34))) 0)) (>= (+ (* (- 1) x31) x28 (* x30 x3) (* x3 x29) (* (- 1) (* x18 x32)) (* (- 1) (* x3 x33)) (* (- 1) (* x3 x34))) 0)) (>= (+ (* x4 x29) (* (- 1) (* x20 x32)) (* (- 1) (* x4 x33))) 0)) (>= (+ (* (- 1) (* x34 x4)) (* x30 x4) (* (- 1) (* x32 x19))) 0))) (and (and (and (not (<= (+ x31 (* (- 1) x28) (* (- 1) (* x30 x3)) (* x3 x33) (* x3 x34) (* x23 x32) (* (- 1) (* x7 x29))) 0)) (>= (+ x31 (* (- 1) x28) (* (- 1) (* x30 x3)) (* x3 x33) (* x3 x34) (* x23 x32) (* (- 1) (* x7 x29))) 0)) (>= (+ (* x4 x33) (* (- 1) (* x8 x29))) 0)) (>= (+ (* x34 x4) (* (- 1) (* x30 x4)) (* (- 1) (* x29 x9))) 0))) (and (and (and (not (<= (+ x31 (* (- 1) x28) (* (- 1) (* x30 x3)) (* x3 x33) (* x3 x34) (* (- 1) (* x7 x29)) (* x24 x32)) 0)) (>= (+ x31 (* (- 1) x28) (* (- 1) (* x30 x3)) (* x3 x33) (* x3 x34) (* (- 1) (* x7 x29)) (* x24 x32)) 0)) (>= (+ (* (- 1) (* x30 x4)) (* (- 1) (* x29 x9)) (* x4 x33)) 0)) (>= (+ (* x34 x4) (* (- 1) (* x8 x29))) 0))) (and (and (and (and (and (and (and (and (and (and (not (<= (* x3 x2) 0)) (>= (* x3 x2) 0)) (>= (+ (* (- 1) x2) (* x4 x2)) 0)) (and (and (and (not (<= (+ x0 (* (- 1) x5) (* (- 1) (* x6 x7)) (* x3 x2)) 0)) (>= (+ x0 (* (- 1) x5) (* (- 1) (* x6 x7)) (* x3 x2)) 0)) (>= (+ x1 (* (- 1) (* x6 x8))) 0)) (>= (+ (* (- 1) (* x6 x9)) (* x4 x2)) 0))) (and (and (and (not (<= (+ (* x3 x11) (* x3 x12)) 0)) (>= (+ (* x3 x11) (* x3 x12)) 0)) (>= (+ (* (- 1) x11) (* x4 x11)) 0)) (>= (+ (* (- 1) x12) (* x4 x12)) 0))) (and (and (and (not (<= (+ x13 (* (- 1) x10) (* x3 x14) (* x3 x15)) 0)) (>= (+ x13 (* (- 1) x10) (* x3 x14) (* x3 x15)) 0)) (>= (+ (* (- 1) x12) (* x14 x4)) 0)) (>= (+ (* (- 1) x11) (* x4 x15)) 0))) (and (and (and (not (<= (+ x13 (* (- 1) x16) (* (- 1) (* x17 x18)) (* x3 x14) (* x3 x15) (* (- 1) (* x3 x21)) (* (- 1) (* x3 x22))) 0)) (>= (+ x13 (* (- 1) x16) (* (- 1) (* x17 x18)) (* x3 x14) (* x3 x15) (* (- 1) (* x3 x21)) (* (- 1) (* x3 x22))) 0)) (>= (+ (* x14 x4) (* (- 1) (* x20 x17)) (* (- 1) (* x4 x21))) 0)) (>= (+ (* (- 1) (* x17 x19)) (* x4 x15) (* (- 1) (* x4 x22))) 0))) (and (and (and (not (<= (+ (* (- 1) x0) x16 (* x3 x21) (* x3 x22) (* x23 x17)) 0)) (>= (+ (* (- 1) x0) x16 (* x3 x21) (* x3 x22) (* x23 x17)) 0)) (>= (+ (* (- 1) x1) (* x4 x21)) 0)) (>= (+ (* (- 1) x2) (* x4 x22)) 0))) (and (and (and (not (<= (+ (* (- 1) x13) x16 (* (- 1) (* x3 x15)) (* x3 x21) (* x3 x22) (* x23 x17) (* (- 1) (* x7 x14))) 0)) (>= (+ (* (- 1) x13) x16 (* (- 1) (* x3 x15)) (* x3 x21) (* x3 x22) (* x23 x17) (* (- 1) (* x7 x14))) 0)) (>= (+ (* (- 1) (* x14 x8)) (* x4 x21)) 0)) (>= (+ (* (- 1) (* x14 x9)) (* (- 1) (* x4 x15)) (* x4 x22)) 0))) (and (and (and (not (<= (+ (* (- 1) x0) x16 (* x17 x24) (* x3 x21) (* x3 x22)) 0)) (>= (+ (* (- 1) x0) x16 (* x17 x24) (* x3 x21) (* x3 x22)) 0)) (>= (+ (* (- 1) x2) (* x4 x21)) 0)) (>= (+ (* (- 1) x1) (* x4 x22)) 0))) (and (and (and (not (<= (+ (* (- 1) x13) x16 (* x17 x24) (* (- 1) (* x3 x15)) (* x3 x21) (* x3 x22) (* (- 1) (* x7 x14))) 0)) (>= (+ (* (- 1) x13) x16 (* x17 x24) (* (- 1) (* x3 x15)) (* x3 x21) (* x3 x22) (* (- 1) (* x7 x14))) 0)) (>= (+ (* (- 1) (* x14 x9)) (* (- 1) (* x4 x15)) (* x4 x21)) 0)) (>= (+ (* (- 1) (* x14 x8)) (* x4 x22)) 0)))))
(exit)
(check-sat)
