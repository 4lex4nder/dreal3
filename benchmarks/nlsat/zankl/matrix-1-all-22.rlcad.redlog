load redlog;
rlset ofsf;
phi := ex({ x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18},(x0 >= 0) and (x1 >= 0) and (x2 >= 0) and (x3 >= 0) and (x4 >= 0) and (x5 >= 0) and (x6 >= 0) and (x7 >= 0) and (x8 >= 0) and (x9 >= 0) and (x10 >= 0) and (x11 >= 0) and (x12 >= 0) and (x13 >= 0) and (x14 >= 0) and (x15 >= 0) and (x16 >= 0) and (x17 >= 0) and (x18 >= 0) and ((((((((((not ((x4 + (-1 * x13) + (-1 * (x0 * x2)) + (x2 * x15)) <= 0)) and ((x4 + (-1 * x13) + (-1 * (x0 * x2)) + (x2 * x15)) >= 0)) and (((-1 * (x0 * x8)) + (x8 * x15)) >= 0)) and (((not (((x2 * x15) + (-1 * (x6 * x15)) + (-1 * (x2 * x11 * x15))) <= 0)) and (((x2 * x15) + (-1 * (x6 * x15)) + (-1 * (x2 * x11 * x15))) >= 0)) and (((x8 * x15) + (-1 * (x8 * x11 * x15))) >= 0))) and ((not (((-1 * x9) + x17 + (x3 * x9)) <= 0)) and (((-1 * x9) + x17 + (x3 * x9)) >= 0))) and (((not ((x17 + (x9 * x14)) <= 0)) and ((x17 + (x9 * x14)) >= 0)) and (x3 >= 1))) and ((((not (((-1 * x1) + x17 + (x2 * x14) + (-1 * (x7 * x12)) + (-1 * (x2 * x10)) + (-1 * (x9 * x16)) + (-1 * (x2 * x5 * x7)) + (-1 * (x8 * x10 * x17)) + (-1 * (x6 * x8 * x10 * x14)) + (-1 * (x2 * x8 * x10 * x11 * x14))) <= 0)) and (((-1 * x1) + x17 + (x2 * x14) + (-1 * (x7 * x12)) + (-1 * (x2 * x10)) + (-1 * (x9 * x16)) + (-1 * (x2 * x5 * x7)) + (-1 * (x8 * x10 * x17)) + (-1 * (x6 * x8 * x10 * x14)) + (-1 * (x2 * x8 * x10 * x11 * x14))) >= 0)) and ((x3 + (-1 * (x7 * x18)) + (-1 * (x3 * x8 * x10))) >= 0)) and (((x8 * x14) + (-1 * (x5 * x7 * x8)) + (-1 * (x8 * x8 * x10 * x11 * x14))) >= 0))) and ((not ((x6 + (-1 * x9) + (x9 * x11)) <= 0)) and ((x6 + (-1 * x9) + (x9 * x11)) >= 0))) and (((not ((x6 + (x2 * x11)) <= 0)) and ((x6 + (x2 * x11)) >= 0)) and ((x8 * x11) >= 1))) and ((((not ((x4 + (-1 * x13) + (-1 * (x0 * x2)) + (x2 * x15)) <= 0)) and ((x4 + (-1 * x13) + (-1 * (x0 * x2)) + (x2 * x15)) >= 0)) and (((-1 * (x0 * x8)) + (x8 * x15)) >= 0)) and (((not (((x2 * x15) + (-1 * (x6 * x15)) + (-1 * (x2 * x11 * x15))) <= 0)) and (((x2 * x15) + (-1 * (x6 * x15)) + (-1 * (x2 * x11 * x15))) >= 0)) and (((x8 * x15) + (-1 * (x8 * x11 * x15))) >= 0)))));
result := rlcad phi;
result;
quit;
