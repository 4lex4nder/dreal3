(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun x6 () Real)
(declare-fun x23 () Real)
(declare-fun x13 () Real)
(declare-fun x30 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x37 () Real)
(declare-fun x10 () Real)
(declare-fun x27 () Real)
(declare-fun x0 () Real)
(declare-fun x17 () Real)
(declare-fun x34 () Real)
(declare-fun x7 () Real)
(declare-fun x24 () Real)
(declare-fun x14 () Real)
(declare-fun x31 () Real)
(declare-fun x4 () Real)
(declare-fun x21 () Real)
(declare-fun x38 () Real)
(declare-fun x11 () Real)
(declare-fun x28 () Real)
(declare-fun x1 () Real)
(declare-fun x18 () Real)
(declare-fun x35 () Real)
(declare-fun x8 () Real)
(declare-fun x25 () Real)
(declare-fun x15 () Real)
(declare-fun x32 () Real)
(declare-fun x5 () Real)
(declare-fun x22 () Real)
(declare-fun x12 () Real)
(declare-fun x29 () Real)
(declare-fun x2 () Real)
(declare-fun x19 () Real)
(declare-fun x36 () Real)
(declare-fun x9 () Real)
(declare-fun x26 () Real)
(declare-fun x16 () Real)
(declare-fun x33 () Real)
(assert (>= x6 0))
(assert (>= x23 0))
(assert (>= x13 0))
(assert (>= x30 0))
(assert (>= x3 0))
(assert (>= x20 0))
(assert (>= x37 0))
(assert (>= x10 0))
(assert (>= x27 0))
(assert (>= x0 0))
(assert (>= x17 0))
(assert (>= x34 0))
(assert (>= x7 0))
(assert (>= x24 0))
(assert (>= x14 0))
(assert (>= x31 0))
(assert (>= x4 0))
(assert (>= x21 0))
(assert (>= x38 0))
(assert (>= x11 0))
(assert (>= x28 0))
(assert (>= x1 0))
(assert (>= x18 0))
(assert (>= x35 0))
(assert (>= x8 0))
(assert (>= x25 0))
(assert (>= x15 0))
(assert (>= x32 0))
(assert (>= x5 0))
(assert (>= x22 0))
(assert (>= x12 0))
(assert (>= x29 0))
(assert (>= x2 0))
(assert (>= x19 0))
(assert (>= x36 0))
(assert (>= x9 0))
(assert (>= x26 0))
(assert (>= x16 0))
(assert (>= x33 0))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (<= (+ (* x1 x2) (* x3 x1 x2)) 0)) (>= (+ (* x1 x2) (* x3 x1 x2)) 0)) (>= (+ (* (- 1) x1) (* x3 x3 x1)) 0)) (and (and (not (<= (+ (* x5 x2) (* x3 x5 x2)) 0)) (>= (+ (* x5 x2) (* x3 x5 x2)) 0)) (>= (+ (* (- 1) x5) (* x3 x3 x5)) 0))) (and (and (not (<= (+ x6 (* (- 1) x8) (* (- 1) (* x10 x11)) (* (- 1) (* x10 x14 x15)) (* (- 1) (* x13 x10 x12))) 0)) (>= (+ x6 (* (- 1) x8) (* (- 1) (* x10 x11)) (* (- 1) (* x10 x14 x15)) (* (- 1) (* x13 x10 x12))) 0)) (>= (+ x7 (* (- 1) x9)) 0))) (and (and (not (<= (+ x8 (* (- 1) x16)) 0)) (>= (+ x8 (* (- 1) x16)) 0)) (>= (+ (* (- 1) x17) x9) 0))) (and (and (and (not (<= (+ (* (- 1) x18) x8 (* (- 1) (* x20 x19))) 0)) (>= (+ (* (- 1) x18) x8 (* (- 1) (* x20 x19))) 0)) (>= (+ (* (- 1) x22) x9 (* (- 1) (* x21 x19))) 0)) (>= (+ (* (- 1) x23) x10) 0))) (and (and (not (<= (+ (* (- 1) x4) x18 (* x24 x19)) 0)) (>= (+ (* (- 1) x4) x18 (* x24 x19)) 0)) (>= (+ (* (- 1) x5) x22) 0))) (and (and (not (<= (+ (* (- 1) x0) x18 (* x24 x19)) 0)) (>= (+ (* (- 1) x0) x18 (* x24 x19)) 0)) (>= (+ (* (- 1) x1) x22) 0))) (and (and (and (not (<= (+ x18 (* (- 1) x8) (* (- 1) (* x10 x11)) (* x24 x19) (* (- 1) (* x25 x9)) (* (- 1) (* x10 x27 x12))) 0)) (>= (+ x18 (* (- 1) x8) (* (- 1) (* x10 x11)) (* x24 x19) (* (- 1) (* x25 x9)) (* (- 1) (* x10 x27 x12))) 0)) (>= (+ x22 (* (- 1) (* x9 x26)) (* (- 1) (* x10 x28 x12))) 0)) (>= (+ x23 (* (- 1) (* x10 x14))) 0))) (and (not (<= (+ (* (- 1) x13) x25 (* x13 x26)) 0)) (>= (+ (* (- 1) x13) x25 (* x13 x26)) 0))) (and (not (<= (+ (* (- 1) x13) x25 (* x2 x26) (* x13 x3 x26)) 0)) (>= (+ (* (- 1) x13) x25 (* x2 x26) (* x13 x3 x26)) 0))) (and (and (not (<= (+ x25 (* (- 1) x2) (* (- 1) (* x3 x25)) (* x2 x26) (* x3 x2 x26)) 0)) (>= (+ x25 (* (- 1) x2) (* (- 1) (* x3 x25)) (* x2 x26) (* x3 x2 x26)) 0)) (>= (+ (* (- 1) (* x3 x26)) (* x3 x3 x26)) 0))) (and (not (<= (+ (* (- 1) x13) x27 (* x13 x28)) 0)) (>= (+ (* (- 1) x13) x27 (* x13 x28)) 0))) (and (not (<= (+ x27 (* (- 1) x2) (* (- 1) (* x13 x3)) (* x28 x2) (* x13 x3 x28)) 0)) (>= (+ x27 (* (- 1) x2) (* (- 1) (* x13 x3)) (* x28 x2) (* x13 x3 x28)) 0))) (and (and (not (<= (+ (* x28 x2) (* x3 x28 x2)) 0)) (>= (+ (* x28 x2) (* x3 x28 x2)) 0)) (>= (+ (* (- 1) x28) (* x3 x3 x28)) 0))) (and (not (<= (+ x20 (* (- 1) x29) (* x13 x21)) 0)) (>= (+ x20 (* (- 1) x29) (* x13 x21)) 0))) (and (not (<= (+ x20 (* (- 1) x24) (* x21 x2)) 0)) (>= (+ x20 (* (- 1) x24) (* x21 x2)) 0))) (and (and (not (<= (+ x30 (* (- 1) x32) (* (- 1) (* x34 x11)) (* (- 1) (* x34 x14 x15)) (* (- 1) (* x13 x34 x12))) 0)) (>= (+ x30 (* (- 1) x32) (* (- 1) (* x34 x11)) (* (- 1) (* x34 x14 x15)) (* (- 1) (* x13 x34 x12))) 0)) (>= (+ x31 (* (- 1) x33)) 0))) (and (and (and (not (<= (+ (* (- 1) x35) x32 (* (- 1) (* x20 x36))) 0)) (>= (+ (* (- 1) x35) x32 (* (- 1) (* x20 x36))) 0)) (>= (+ (* (- 1) x37) x33 (* (- 1) (* x21 x36))) 0)) (>= (+ x34 (* (- 1) x38)) 0))) (and (and (not (<= (+ x35 (* x29 x36)) 0)) (>= (+ x35 (* x29 x36)) 0)) (>= x38 1))) (and (and (and (not (<= (+ x35 (* (- 1) x32) (* (- 1) (* x34 x11)) (* x24 x36) (* (- 1) (* x25 x33)) (* (- 1) (* x27 x34 x12))) 0)) (>= (+ x35 (* (- 1) x32) (* (- 1) (* x34 x11)) (* x24 x36) (* (- 1) (* x25 x33)) (* (- 1) (* x27 x34 x12))) 0)) (>= (+ x37 (* (- 1) (* x26 x33)) (* (- 1) (* x34 x28 x12))) 0)) (>= (+ x38 (* (- 1) (* x34 x14))) 0))) (and (and (and (and (and (and (and (and (and (not (<= (+ (* x1 x2) (* x3 x1 x2)) 0)) (>= (+ (* x1 x2) (* x3 x1 x2)) 0)) (>= (+ (* (- 1) x1) (* x3 x3 x1)) 0)) (and (and (not (<= (+ (* x5 x2) (* x3 x5 x2)) 0)) (>= (+ (* x5 x2) (* x3 x5 x2)) 0)) (>= (+ (* (- 1) x5) (* x3 x3 x5)) 0))) (and (and (not (<= (+ x6 (* (- 1) x8) (* (- 1) (* x10 x11)) (* (- 1) (* x10 x14 x15)) (* (- 1) (* x13 x10 x12))) 0)) (>= (+ x6 (* (- 1) x8) (* (- 1) (* x10 x11)) (* (- 1) (* x10 x14 x15)) (* (- 1) (* x13 x10 x12))) 0)) (>= (+ x7 (* (- 1) x9)) 0))) (and (and (not (<= (+ x8 (* (- 1) x16)) 0)) (>= (+ x8 (* (- 1) x16)) 0)) (>= (+ (* (- 1) x17) x9) 0))) (and (and (and (not (<= (+ (* (- 1) x18) x8 (* (- 1) (* x20 x19))) 0)) (>= (+ (* (- 1) x18) x8 (* (- 1) (* x20 x19))) 0)) (>= (+ (* (- 1) x22) x9 (* (- 1) (* x21 x19))) 0)) (>= (+ (* (- 1) x23) x10) 0))) (and (and (not (<= (+ (* (- 1) x4) x18 (* x24 x19)) 0)) (>= (+ (* (- 1) x4) x18 (* x24 x19)) 0)) (>= (+ (* (- 1) x5) x22) 0))) (and (and (not (<= (+ (* (- 1) x0) x18 (* x24 x19)) 0)) (>= (+ (* (- 1) x0) x18 (* x24 x19)) 0)) (>= (+ (* (- 1) x1) x22) 0))) (and (and (and (not (<= (+ x18 (* (- 1) x8) (* (- 1) (* x10 x11)) (* x24 x19) (* (- 1) (* x25 x9)) (* (- 1) (* x10 x27 x12))) 0)) (>= (+ x18 (* (- 1) x8) (* (- 1) (* x10 x11)) (* x24 x19) (* (- 1) (* x25 x9)) (* (- 1) (* x10 x27 x12))) 0)) (>= (+ x22 (* (- 1) (* x9 x26)) (* (- 1) (* x10 x28 x12))) 0)) (>= (+ x23 (* (- 1) (* x10 x14))) 0)))))
(exit)
(check-sat)
