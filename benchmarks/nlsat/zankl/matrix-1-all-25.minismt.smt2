(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun x6 () Real)
(declare-fun x23 () Real)
(declare-fun x40 () Real)
(declare-fun x13 () Real)
(declare-fun x30 () Real)
(declare-fun x47 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x37 () Real)
(declare-fun x54 () Real)
(declare-fun x10 () Real)
(declare-fun x27 () Real)
(declare-fun x44 () Real)
(declare-fun x0 () Real)
(declare-fun x17 () Real)
(declare-fun x34 () Real)
(declare-fun x51 () Real)
(declare-fun x7 () Real)
(declare-fun x24 () Real)
(declare-fun x41 () Real)
(declare-fun x14 () Real)
(declare-fun x31 () Real)
(declare-fun x48 () Real)
(declare-fun x4 () Real)
(declare-fun x21 () Real)
(declare-fun x38 () Real)
(declare-fun x11 () Real)
(declare-fun x28 () Real)
(declare-fun x45 () Real)
(declare-fun x1 () Real)
(declare-fun x18 () Real)
(declare-fun x35 () Real)
(declare-fun x52 () Real)
(declare-fun x8 () Real)
(declare-fun x25 () Real)
(declare-fun x42 () Real)
(declare-fun x15 () Real)
(declare-fun x32 () Real)
(declare-fun x49 () Real)
(declare-fun x5 () Real)
(declare-fun x22 () Real)
(declare-fun x39 () Real)
(declare-fun x12 () Real)
(declare-fun x29 () Real)
(declare-fun x46 () Real)
(declare-fun x2 () Real)
(declare-fun x19 () Real)
(declare-fun x36 () Real)
(declare-fun x53 () Real)
(declare-fun x9 () Real)
(declare-fun x26 () Real)
(declare-fun x43 () Real)
(declare-fun x16 () Real)
(declare-fun x33 () Real)
(declare-fun x50 () Real)
(assert (>= x6 0))
(assert (>= x23 0))
(assert (>= x40 0))
(assert (>= x13 0))
(assert (>= x30 0))
(assert (>= x47 0))
(assert (>= x3 0))
(assert (>= x20 0))
(assert (>= x37 0))
(assert (>= x54 0))
(assert (>= x10 0))
(assert (>= x27 0))
(assert (>= x44 0))
(assert (>= x0 0))
(assert (>= x17 0))
(assert (>= x34 0))
(assert (>= x51 0))
(assert (>= x7 0))
(assert (>= x24 0))
(assert (>= x41 0))
(assert (>= x14 0))
(assert (>= x31 0))
(assert (>= x48 0))
(assert (>= x4 0))
(assert (>= x21 0))
(assert (>= x38 0))
(assert (>= x11 0))
(assert (>= x28 0))
(assert (>= x45 0))
(assert (>= x1 0))
(assert (>= x18 0))
(assert (>= x35 0))
(assert (>= x52 0))
(assert (>= x8 0))
(assert (>= x25 0))
(assert (>= x42 0))
(assert (>= x15 0))
(assert (>= x32 0))
(assert (>= x49 0))
(assert (>= x5 0))
(assert (>= x22 0))
(assert (>= x39 0))
(assert (>= x12 0))
(assert (>= x29 0))
(assert (>= x46 0))
(assert (>= x2 0))
(assert (>= x19 0))
(assert (>= x36 0))
(assert (>= x53 0))
(assert (>= x9 0))
(assert (>= x26 0))
(assert (>= x43 0))
(assert (>= x16 0))
(assert (>= x33 0))
(assert (>= x50 0))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (<= (+ x0 (* (- 1) x4) (* x1 x2)) 0)) (>= (+ x0 (* (- 1) x4) (* x1 x2)) 0)) (>= (+ x3 (* (- 1) x5)) 0)) (and (and (not (<= (+ x6 (* (- 1) x4) (* x7 x2)) 0)) (>= (+ x6 (* (- 1) x4) (* x7 x2)) 0)) (>= (+ x8 (* (- 1) x5)) 0))) (and (and (not (<= (+ x6 (* (- 1) x4) (* x10 x7)) 0)) (>= (+ x6 (* (- 1) x4) (* x10 x7)) 0)) (>= (+ (* (- 1) x5) x9) 0))) (and (and (not (<= (+ (* (- 1) x4) x11 (* x13 x12)) 0)) (>= (+ (* (- 1) x4) x11 (* x13 x12)) 0)) (>= (+ x14 (* (- 1) x5)) 0))) (and (and (not (<= (+ (* (- 1) x4) x11 (* x15 x12)) 0)) (>= (+ (* (- 1) x4) x11 (* x15 x12)) 0)) (>= (+ x14 (* (- 1) x5)) 0))) (and (and (not (<= (+ (* (- 1) x4) x11 (* x15 x12)) 0)) (>= (+ (* (- 1) x4) x11 (* x15 x12)) 0)) (>= (+ (* (- 1) x5) (* x12 x16)) 0))) (and (and (and (not (<= (+ (* (- 1) x17) x11 (* x15 x12) (* (- 1) (* x18 x19)) (* (- 1) (* x20 x21 x18)) (* (- 1) (* x23 x21 x18))) 0)) (>= (+ (* (- 1) x17) x11 (* x15 x12) (* (- 1) (* x18 x19)) (* (- 1) (* x20 x21 x18)) (* (- 1) (* x23 x21 x18))) 0)) (>= (+ (* x12 x16) (* (- 1) (* x20 x18 x22))) 0)) (>= (+ x14 (* (- 1) (* x23 x18 x22))) 0))) (and (and (not (<= (+ x24 (* (- 1) x4) (* x25 x15) (* x27 x26)) 0)) (>= (+ x24 (* (- 1) x4) (* x25 x15) (* x27 x26)) 0)) (>= (+ (* (- 1) x5) (* x29 x26)) 0))) (and (and (not (<= (+ x24 (* (- 1) x4) (* x25 x15) (* x27 x26)) 0)) (>= (+ x24 (* (- 1) x4) (* x25 x15) (* x27 x26)) 0)) (>= (+ (* (- 1) x5) (* x25 x16)) 0))) (and (and (not (<= (+ x24 (* (- 1) x4) (* x25 x15) (* x27 x26)) 0)) (>= (+ x24 (* (- 1) x4) (* x25 x15) (* x27 x26)) 0)) (>= (+ (* (- 1) x5) (* x28 x26)) 0))) (and (and (not (<= (+ x30 (* (- 1) x4)) 0)) (>= (+ x30 (* (- 1) x4)) 0)) (>= (+ x31 (* (- 1) x5)) 0))) (and (and (and (not (<= (+ x4 (* (- 1) x11) (* x5 x19)) 0)) (>= (+ x4 (* (- 1) x11) (* x5 x19)) 0)) (>= (+ (* (- 1) x12) (* x20 x5)) 0)) (>= (+ (* (- 1) x14) (* x23 x5)) 0))) (and (and (and (not (<= (+ (* (- 1) x24) x4 (* x32 x5)) 0)) (>= (+ (* (- 1) x24) x4 (* x32 x5)) 0)) (>= (+ (* (- 1) x25) (* x5 x33)) 0)) (>= (+ (* (- 1) x26) (* x34 x5)) 0))) (and (and (not (<= (+ (* (- 1) x30) x4 (* x35 x5)) 0)) (>= (+ (* (- 1) x30) x4 (* x35 x5)) 0)) (>= (+ (* (- 1) x31) (* x5 x36)) 0))) (and (and (not (<= (+ (* (- 1) x17) x4 (* x37 x5)) 0)) (>= (+ (* (- 1) x17) x4 (* x37 x5)) 0)) (>= (+ (* (- 1) x18) (* x38 x5)) 0))) (and (and (not (<= (+ (* (- 1) x21) x39 (* x40 x2)) 0)) (>= (+ (* (- 1) x21) x39 (* x40 x2)) 0)) (>= (+ x41 (* (- 1) x22)) 0))) (and (not (<= (+ (* (- 1) x10) x39 (* x40 x10)) 0)) (>= (+ (* (- 1) x10) x39 (* x40 x10)) 0))) (and (and (not (<= (+ (* (- 1) x21) x42 (* x2 x43)) 0)) (>= (+ (* (- 1) x21) x42 (* x2 x43)) 0)) (>= (+ x44 (* (- 1) x22)) 0))) (and (and (not (<= (+ (* (- 1) x21) x42 (* x10 x43)) 0)) (>= (+ (* (- 1) x21) x42 (* x10 x43)) 0)) (>= (+ x45 (* (- 1) x22)) 0))) (and (and (not (<= (+ (* (- 1) x21) x46 (* x13 x47)) 0)) (>= (+ (* (- 1) x21) x46 (* x13 x47)) 0)) (>= (+ x48 (* (- 1) x22)) 0))) (and (and (and (not (<= (+ (* (- 1) x15) x46 (* x47 x15) (* (- 1) (* x19 x16)) (* (- 1) (* x20 x21 x16)) (* (- 1) (* x23 x21 x16))) 0)) (>= (+ (* (- 1) x15) x46 (* x47 x15) (* (- 1) (* x19 x16)) (* (- 1) (* x20 x21 x16)) (* (- 1) (* x23 x21 x16))) 0)) (>= (+ (* x47 x16) (* (- 1) (* x20 x22 x16))) 0)) (>= (+ x48 (* (- 1) (* x23 x22 x16))) 0))) (and (not (<= (+ (* (- 1) x52) x49 (* x13 x50)) 0)) (>= (+ (* (- 1) x52) x49 (* x13 x50)) 0))) (and (and (and (and (not (<= (+ (* (- 1) x27) x49 (* x15 x50) (* x27 x51) (* (- 1) (* x21 x28)) (* (- 1) (* x32 x29)) (* (- 1) (* x34 x21 x29)) (* (- 1) (* x21 x29 x33))) 0)) (>= (+ (* (- 1) x27) x49 (* x15 x50) (* x27 x51) (* (- 1) (* x21 x28)) (* (- 1) (* x32 x29)) (* (- 1) (* x34 x21 x29)) (* (- 1) (* x21 x29 x33))) 0)) (>= (+ (* x16 x50) (* (- 1) (* x22 x29 x33))) 0)) (>= (+ (* (- 1) (* x28 x22)) (* x51 x28)) 0)) (>= (+ (* x51 x29) (* (- 1) (* x34 x22 x29))) 0))) (and (and (not (<= (+ (* (- 1) x27) x53 (* (- 1) (* x21 x28)) (* (- 1) (* x35 x29)) (* (- 1) (* x37 x29 x36)) (* (- 1) (* x21 x38 x29 x36))) 0)) (>= (+ (* (- 1) x27) x53 (* (- 1) (* x21 x28)) (* (- 1) (* x35 x29)) (* (- 1) (* x37 x29 x36)) (* (- 1) (* x21 x38 x29 x36))) 0)) (>= (+ x54 (* (- 1) (* x28 x22)) (* (- 1) (* x38 x22 x29 x36))) 0))) (and (and (and (not (<= (+ x46 (* (- 1) x19)) 0)) (>= (+ x46 (* (- 1) x19)) 0)) (>= (+ x47 (* (- 1) x20)) 0)) (>= (+ (* (- 1) x23) x48) 0))) (and (and (and (not (<= (+ (* (- 1) x32) x49) 0)) (>= (+ (* (- 1) x32) x49) 0)) (>= (+ (* (- 1) x33) x50) 0)) (>= (+ (* (- 1) x34) x51) 0))) (and (and (not (<= (+ (* (- 1) x35) x53) 0)) (>= (+ (* (- 1) x35) x53) 0)) (>= (+ x54 (* (- 1) x36)) 0))) (and (and (not (<= (+ (* (- 1) x37) x15) 0)) (>= (+ (* (- 1) x37) x15) 0)) (>= (+ (* (- 1) x38) x16) 0))) (and (and (and (not (<= (+ x21 (* (- 1) x46) (* x22 x19)) 0)) (>= (+ x21 (* (- 1) x46) (* x22 x19)) 0)) (>= (+ (* (- 1) x47) (* x20 x22)) 0)) (>= (+ (* (- 1) x48) (* x23 x22)) 0))) (and (and (and (not (<= (+ x21 (* (- 1) x49) (* x32 x22)) 0)) (>= (+ x21 (* (- 1) x49) (* x32 x22)) 0)) (>= (+ (* (- 1) x50) (* x22 x33)) 0)) (>= (+ (* (- 1) x51) (* x34 x22)) 0))) (and (and (not (<= (+ x21 (* (- 1) x53) (* x35 x22)) 0)) (>= (+ x21 (* (- 1) x53) (* x35 x22)) 0)) (>= (+ (* (- 1) x54) (* x22 x36)) 0))) (and (and (not (<= (+ x21 (* (- 1) x15) (* x37 x22)) 0)) (>= (+ x21 (* (- 1) x15) (* x37 x22)) 0)) (>= (+ (* (- 1) x16) (* x38 x22)) 0))) (and (and (not (<= x21 0)) (>= x21 0)) (>= x22 1))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (<= (+ x0 (* (- 1) x4) (* x1 x2)) 0)) (>= (+ x0 (* (- 1) x4) (* x1 x2)) 0)) (>= (+ x3 (* (- 1) x5)) 0)) (and (and (not (<= (+ x6 (* (- 1) x4) (* x7 x2)) 0)) (>= (+ x6 (* (- 1) x4) (* x7 x2)) 0)) (>= (+ x8 (* (- 1) x5)) 0))) (and (and (not (<= (+ x6 (* (- 1) x4) (* x10 x7)) 0)) (>= (+ x6 (* (- 1) x4) (* x10 x7)) 0)) (>= (+ (* (- 1) x5) x9) 0))) (and (and (not (<= (+ (* (- 1) x4) x11 (* x13 x12)) 0)) (>= (+ (* (- 1) x4) x11 (* x13 x12)) 0)) (>= (+ x14 (* (- 1) x5)) 0))) (and (and (not (<= (+ (* (- 1) x4) x11 (* x15 x12)) 0)) (>= (+ (* (- 1) x4) x11 (* x15 x12)) 0)) (>= (+ x14 (* (- 1) x5)) 0))) (and (and (not (<= (+ (* (- 1) x4) x11 (* x15 x12)) 0)) (>= (+ (* (- 1) x4) x11 (* x15 x12)) 0)) (>= (+ (* (- 1) x5) (* x12 x16)) 0))) (and (and (and (not (<= (+ (* (- 1) x17) x11 (* x15 x12) (* (- 1) (* x18 x19)) (* (- 1) (* x20 x21 x18)) (* (- 1) (* x23 x21 x18))) 0)) (>= (+ (* (- 1) x17) x11 (* x15 x12) (* (- 1) (* x18 x19)) (* (- 1) (* x20 x21 x18)) (* (- 1) (* x23 x21 x18))) 0)) (>= (+ (* x12 x16) (* (- 1) (* x20 x18 x22))) 0)) (>= (+ x14 (* (- 1) (* x23 x18 x22))) 0))) (and (and (not (<= (+ x24 (* (- 1) x4) (* x25 x15) (* x27 x26)) 0)) (>= (+ x24 (* (- 1) x4) (* x25 x15) (* x27 x26)) 0)) (>= (+ (* (- 1) x5) (* x29 x26)) 0))) (and (and (not (<= (+ x24 (* (- 1) x4) (* x25 x15) (* x27 x26)) 0)) (>= (+ x24 (* (- 1) x4) (* x25 x15) (* x27 x26)) 0)) (>= (+ (* (- 1) x5) (* x25 x16)) 0))) (and (and (not (<= (+ x24 (* (- 1) x4) (* x25 x15) (* x27 x26)) 0)) (>= (+ x24 (* (- 1) x4) (* x25 x15) (* x27 x26)) 0)) (>= (+ (* (- 1) x5) (* x28 x26)) 0))) (and (and (not (<= (+ x30 (* (- 1) x4)) 0)) (>= (+ x30 (* (- 1) x4)) 0)) (>= (+ x31 (* (- 1) x5)) 0))) (and (and (and (not (<= (+ x4 (* (- 1) x11) (* x5 x19)) 0)) (>= (+ x4 (* (- 1) x11) (* x5 x19)) 0)) (>= (+ (* (- 1) x12) (* x20 x5)) 0)) (>= (+ (* (- 1) x14) (* x23 x5)) 0))) (and (and (and (not (<= (+ (* (- 1) x24) x4 (* x32 x5)) 0)) (>= (+ (* (- 1) x24) x4 (* x32 x5)) 0)) (>= (+ (* (- 1) x25) (* x5 x33)) 0)) (>= (+ (* (- 1) x26) (* x34 x5)) 0))) (and (and (not (<= (+ (* (- 1) x30) x4 (* x35 x5)) 0)) (>= (+ (* (- 1) x30) x4 (* x35 x5)) 0)) (>= (+ (* (- 1) x31) (* x5 x36)) 0))) (and (and (not (<= (+ (* (- 1) x17) x4 (* x37 x5)) 0)) (>= (+ (* (- 1) x17) x4 (* x37 x5)) 0)) (>= (+ (* (- 1) x18) (* x38 x5)) 0)))))
(exit)
(check-sat)
