(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun x6 () Real)
(declare-fun x23 () Real)
(declare-fun x13 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x10 () Real)
(declare-fun x27 () Real)
(declare-fun x0 () Real)
(declare-fun x17 () Real)
(declare-fun x7 () Real)
(declare-fun x24 () Real)
(declare-fun x14 () Real)
(declare-fun x4 () Real)
(declare-fun x21 () Real)
(declare-fun x11 () Real)
(declare-fun x28 () Real)
(declare-fun x1 () Real)
(declare-fun x18 () Real)
(declare-fun x8 () Real)
(declare-fun x25 () Real)
(declare-fun x15 () Real)
(declare-fun x5 () Real)
(declare-fun x22 () Real)
(declare-fun x12 () Real)
(declare-fun x2 () Real)
(declare-fun x19 () Real)
(declare-fun x9 () Real)
(declare-fun x26 () Real)
(declare-fun x16 () Real)
(assert (>= x6 0))
(assert (>= x23 0))
(assert (>= x13 0))
(assert (>= x3 0))
(assert (>= x20 0))
(assert (>= x10 0))
(assert (>= x27 0))
(assert (>= x0 0))
(assert (>= x17 0))
(assert (>= x7 0))
(assert (>= x24 0))
(assert (>= x14 0))
(assert (>= x4 0))
(assert (>= x21 0))
(assert (>= x11 0))
(assert (>= x28 0))
(assert (>= x1 0))
(assert (>= x18 0))
(assert (>= x8 0))
(assert (>= x25 0))
(assert (>= x15 0))
(assert (>= x5 0))
(assert (>= x22 0))
(assert (>= x12 0))
(assert (>= x2 0))
(assert (>= x19 0))
(assert (>= x9 0))
(assert (>= x26 0))
(assert (>= x16 0))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (<= (+ x0 (* (- 1) x8) (* x1 x2) (* x4 x1 x5)) 0)) (>= (+ x0 (* (- 1) x8) (* x1 x2) (* x4 x1 x5)) 0)) (>= (+ (* (- 1) x9) (* x6 x4 x1)) 0)) (and (and (not (<= (+ x10 (* (- 1) x12) (* (- 1) (* x14 x15)) (* (- 1) (* x17 x14 x16))) 0)) (>= (+ x10 (* (- 1) x12) (* (- 1) (* x14 x15)) (* (- 1) (* x17 x14 x16))) 0)) (>= (+ (* (- 1) x13) x11 (* (- 1) (* x14 x18 x16))) 0))) (and (and (not (<= (* x5 x9) 0)) (>= (* x5 x9) 0)) (>= (+ (* (- 1) x9) (* x6 x9)) 0))) (and (and (and (not (<= (+ x8 (* (- 1) x12) (* (- 1) (* x13 x19)) (* x5 x9)) 0)) (>= (+ x8 (* (- 1) x12) (* (- 1) (* x13 x19)) (* x5 x9)) 0)) (>= (+ (* (- 1) (* x13 x20)) (* x6 x9)) 0)) (>= (+ (* (- 1) x14) (* x7 x9)) 0))) (and (and (not (<= (* x15 x9) 0)) (>= (* x15 x9) 0)) (>= (+ (* (- 1) x9) (* x9 x16)) 0))) (and (and (not (<= (+ (* (- 1) x10) x8 (* (- 1) (* x11 x19)) (* x15 x9)) 0)) (>= (+ (* (- 1) x10) x8 (* (- 1) (* x11 x19)) (* x15 x9)) 0)) (>= (+ (* x9 x16) (* (- 1) (* x20 x11))) 0))) (and (and (not (<= (* x17 x9) 0)) (>= (* x17 x9) 0)) (>= (+ (* (- 1) x9) (* x18 x9)) 0))) (and (and (not (<= (+ (* (- 1) x21) x8 (* (- 1) (* x22 x19)) (* x17 x9)) 0)) (>= (+ (* (- 1) x21) x8 (* (- 1) (* x22 x19)) (* x17 x9)) 0)) (>= (+ (* x18 x9) (* (- 1) (* x20 x22))) 0))) (and (and (not (<= (+ x23 (* (- 1) x19) (* x24 x2) (* x24 x4 x5)) 0)) (>= (+ x23 (* (- 1) x19) (* x24 x2) (* x24 x4 x5)) 0)) (>= (+ (* (- 1) x20) (* x6 x24 x4)) 0))) (and (and (not (<= (+ x25 (* (- 1) x2) (* (- 1) (* x4 x15)) (* (- 1) (* x17 x4 x16))) 0)) (>= (+ x25 (* (- 1) x2) (* (- 1) (* x4 x15)) (* (- 1) (* x17 x4 x16))) 0)) (>= (+ (* (- 1) x3) x26 (* (- 1) (* x4 x18 x16))) 0))) (and (and (and (not (<= (+ (* (- 1) x5) x2) 0)) (>= (+ (* (- 1) x5) x2) 0)) (>= (+ (* (- 1) x6) x3) 0)) (>= (+ (* (- 1) x7) x4) 0))) (and (and (not (<= (+ x25 (* (- 1) x15)) 0)) (>= (+ x25 (* (- 1) x15)) 0)) (>= (+ x26 (* (- 1) x16)) 0))) (and (and (not (<= (+ x27 (* (- 1) x17)) 0)) (>= (+ x27 (* (- 1) x17)) 0)) (>= (+ x28 (* (- 1) x18)) 0))) (and (and (and (not (<= (+ (* (- 1) x2) x19 (* (- 1) (* x3 x19)) (* x20 x5)) 0)) (>= (+ (* (- 1) x2) x19 (* (- 1) (* x3 x19)) (* x20 x5)) 0)) (>= (+ (* (- 1) (* x3 x20)) (* x6 x20)) 0)) (>= (+ (* (- 1) x4) (* x20 x7)) 0))) (and (and (not (<= (+ (* (- 1) x25) x19 (* x20 x15) (* (- 1) (* x19 x26))) 0)) (>= (+ (* (- 1) x25) x19 (* x20 x15) (* (- 1) (* x19 x26))) 0)) (>= (+ (* x20 x16) (* (- 1) (* x20 x26))) 0))) (and (and (not (<= (+ (* (- 1) x27) x19 (* (- 1) (* x28 x19)) (* x20 x17)) 0)) (>= (+ (* (- 1) x27) x19 (* (- 1) (* x28 x19)) (* x20 x17)) 0)) (>= (+ (* x20 x18) (* (- 1) (* x20 x28))) 0))) (and (and (not (<= x19 0)) (>= x19 0)) (>= x20 1))) (and (and (and (and (and (and (and (and (and (not (<= (+ x0 (* (- 1) x8) (* x1 x2) (* x4 x1 x5)) 0)) (>= (+ x0 (* (- 1) x8) (* x1 x2) (* x4 x1 x5)) 0)) (>= (+ (* (- 1) x9) (* x6 x4 x1)) 0)) (and (and (not (<= (+ x10 (* (- 1) x12) (* (- 1) (* x14 x15)) (* (- 1) (* x17 x14 x16))) 0)) (>= (+ x10 (* (- 1) x12) (* (- 1) (* x14 x15)) (* (- 1) (* x17 x14 x16))) 0)) (>= (+ (* (- 1) x13) x11 (* (- 1) (* x14 x18 x16))) 0))) (and (and (not (<= (* x5 x9) 0)) (>= (* x5 x9) 0)) (>= (+ (* (- 1) x9) (* x6 x9)) 0))) (and (and (and (not (<= (+ x8 (* (- 1) x12) (* (- 1) (* x13 x19)) (* x5 x9)) 0)) (>= (+ x8 (* (- 1) x12) (* (- 1) (* x13 x19)) (* x5 x9)) 0)) (>= (+ (* (- 1) (* x13 x20)) (* x6 x9)) 0)) (>= (+ (* (- 1) x14) (* x7 x9)) 0))) (and (and (not (<= (* x15 x9) 0)) (>= (* x15 x9) 0)) (>= (+ (* (- 1) x9) (* x9 x16)) 0))) (and (and (not (<= (+ (* (- 1) x10) x8 (* (- 1) (* x11 x19)) (* x15 x9)) 0)) (>= (+ (* (- 1) x10) x8 (* (- 1) (* x11 x19)) (* x15 x9)) 0)) (>= (+ (* x9 x16) (* (- 1) (* x20 x11))) 0))) (and (and (not (<= (* x17 x9) 0)) (>= (* x17 x9) 0)) (>= (+ (* (- 1) x9) (* x18 x9)) 0))) (and (and (not (<= (+ (* (- 1) x21) x8 (* (- 1) (* x22 x19)) (* x17 x9)) 0)) (>= (+ (* (- 1) x21) x8 (* (- 1) (* x22 x19)) (* x17 x9)) 0)) (>= (+ (* x18 x9) (* (- 1) (* x20 x22))) 0)))))
(exit)
(check-sat)
