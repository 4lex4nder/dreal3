(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun x6 () Real)
(declare-fun x23 () Real)
(declare-fun x13 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x10 () Real)
(declare-fun x0 () Real)
(declare-fun x17 () Real)
(declare-fun x7 () Real)
(declare-fun x24 () Real)
(declare-fun x14 () Real)
(declare-fun x4 () Real)
(declare-fun x21 () Real)
(declare-fun x11 () Real)
(declare-fun x1 () Real)
(declare-fun x18 () Real)
(declare-fun x8 () Real)
(declare-fun x25 () Real)
(declare-fun x15 () Real)
(declare-fun x5 () Real)
(declare-fun x22 () Real)
(declare-fun x12 () Real)
(declare-fun x2 () Real)
(declare-fun x19 () Real)
(declare-fun x9 () Real)
(declare-fun x16 () Real)
(assert (>= x6 0))
(assert (>= x23 0))
(assert (>= x13 0))
(assert (>= x3 0))
(assert (>= x20 0))
(assert (>= x10 0))
(assert (>= x0 0))
(assert (>= x17 0))
(assert (>= x7 0))
(assert (>= x24 0))
(assert (>= x14 0))
(assert (>= x4 0))
(assert (>= x21 0))
(assert (>= x11 0))
(assert (>= x1 0))
(assert (>= x18 0))
(assert (>= x8 0))
(assert (>= x25 0))
(assert (>= x15 0))
(assert (>= x5 0))
(assert (>= x22 0))
(assert (>= x12 0))
(assert (>= x2 0))
(assert (>= x19 0))
(assert (>= x9 0))
(assert (>= x16 0))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (<= (+ x0 (* (- 1) x5) (* x1 x2) (* (- 1) (* x6 x2)) (* x3 x4 x1) (* (- 1) (* x6 x3 x4))) 0)) (>= (+ x0 (* (- 1) x5) (* x1 x2) (* (- 1) (* x6 x2)) (* x3 x4 x1) (* (- 1) (* x6 x3 x4))) 0)) (and (not (<= (+ (* x1 x2) (* (- 1) (* x7 x1)) (* x3 x4 x1) (* (- 1) (* x1 x8 x2)) (* (- 1) (* x3 x4 x1 x8))) 0)) (>= (+ (* x1 x2) (* (- 1) (* x7 x1)) (* x3 x4 x1) (* (- 1) (* x1 x8 x2)) (* (- 1) (* x3 x4 x1 x8))) 0))) (and (and (not (<= (* x10 x11) 0)) (>= (* x10 x11) 0)) (>= (+ (* (- 1) x10) (* x10 x12)) 0))) (and (and (not (<= (+ (* (- 1) x0) x9 (* x10 x11) (* (- 1) (* x13 x1))) 0)) (>= (+ (* (- 1) x0) x9 (* x10 x11) (* (- 1) (* x13 x1))) 0)) (>= (+ (* x10 x12) (* (- 1) (* x14 x1))) 0))) (and (and (not (<= (* x10 x15) 0)) (>= (* x10 x15) 0)) (>= (+ (* (- 1) x10) (* x10 x16)) 0))) (and (and (not (<= (+ (* (- 1) x17) x9 (* x10 x15) (* (- 1) (* x13 x18))) 0)) (>= (+ (* (- 1) x17) x9 (* x10 x15) (* (- 1) (* x13 x18))) 0)) (>= (+ (* x10 x16) (* (- 1) (* x14 x18))) 0))) (and (not (<= (+ (* (- 1) x20) x9 (* x10 x19)) 0)) (>= (+ (* (- 1) x20) x9 (* x10 x19)) 0))) (and (not (<= (+ (* (- 1) x23) x21 (* (- 1) (* x24 x4)) (* x4 x22) (* (- 1) (* x11 x25)) (* (- 1) (* x25 x15 x12)) (* (- 1) (* x25 x12 x19 x16))) 0)) (>= (+ (* (- 1) x23) x21 (* (- 1) (* x24 x4)) (* x4 x22) (* (- 1) (* x11 x25)) (* (- 1) (* x25 x15 x12)) (* (- 1) (* x25 x12 x19 x16))) 0))) (and (not (<= (+ (* x22 x2) (* (- 1) (* x7 x22)) (* x3 x4 x22) (* (- 1) (* x8 x22 x2)) (* (- 1) (* x3 x4 x8 x22))) 0)) (>= (+ (* x22 x2) (* (- 1) (* x7 x22)) (* x3 x4 x22) (* (- 1) (* x8 x22 x2)) (* (- 1) (* x3 x4 x8 x22))) 0))) (and (and (not (<= (+ x7 (* x8 x2)) 0)) (>= (+ x7 (* x8 x2)) 0)) (>= (* x3 x8) 1))) (and (and (not (<= (+ x21 (* (- 1) x11)) 0)) (>= (+ x21 (* (- 1) x11)) 0)) (>= (+ x22 (* (- 1) x12)) 0))) (and (and (not (<= (+ (* (- 1) x15) x2) 0)) (>= (+ (* (- 1) x15) x2) 0)) (>= (+ x3 (* (- 1) x16)) 0))) (and (not (<= (+ x4 (* (- 1) x19)) 0)) (>= (+ x4 (* (- 1) x19)) 0))) (and (and (not (<= (+ x13 (* (- 1) x21) (* x14 x11) (* (- 1) (* x13 x22))) 0)) (>= (+ x13 (* (- 1) x21) (* x14 x11) (* (- 1) (* x13 x22))) 0)) (>= (+ (* x14 x12) (* (- 1) (* x14 x22))) 0))) (and (and (not (<= (+ x13 (* (- 1) x2) (* x14 x15) (* (- 1) (* x13 x3))) 0)) (>= (+ x13 (* (- 1) x2) (* x14 x15) (* (- 1) (* x13 x3))) 0)) (>= (+ (* x14 x16) (* (- 1) (* x3 x14))) 0))) (and (not (<= (+ x13 (* (- 1) x4) (* x14 x19)) 0)) (>= (+ x13 (* (- 1) x4) (* x14 x19)) 0))) (and (and (not (<= x13 0)) (>= x13 0)) (>= x14 1))) (and (and (and (and (and (and (and (not (<= (+ x0 (* (- 1) x5) (* x1 x2) (* (- 1) (* x6 x2)) (* x3 x4 x1) (* (- 1) (* x6 x3 x4))) 0)) (>= (+ x0 (* (- 1) x5) (* x1 x2) (* (- 1) (* x6 x2)) (* x3 x4 x1) (* (- 1) (* x6 x3 x4))) 0)) (and (not (<= (+ (* x1 x2) (* (- 1) (* x7 x1)) (* x3 x4 x1) (* (- 1) (* x1 x8 x2)) (* (- 1) (* x3 x4 x1 x8))) 0)) (>= (+ (* x1 x2) (* (- 1) (* x7 x1)) (* x3 x4 x1) (* (- 1) (* x1 x8 x2)) (* (- 1) (* x3 x4 x1 x8))) 0))) (and (and (not (<= (* x10 x11) 0)) (>= (* x10 x11) 0)) (>= (+ (* (- 1) x10) (* x10 x12)) 0))) (and (and (not (<= (+ (* (- 1) x0) x9 (* x10 x11) (* (- 1) (* x13 x1))) 0)) (>= (+ (* (- 1) x0) x9 (* x10 x11) (* (- 1) (* x13 x1))) 0)) (>= (+ (* x10 x12) (* (- 1) (* x14 x1))) 0))) (and (and (not (<= (* x10 x15) 0)) (>= (* x10 x15) 0)) (>= (+ (* (- 1) x10) (* x10 x16)) 0))) (and (and (not (<= (+ (* (- 1) x17) x9 (* x10 x15) (* (- 1) (* x13 x18))) 0)) (>= (+ (* (- 1) x17) x9 (* x10 x15) (* (- 1) (* x13 x18))) 0)) (>= (+ (* x10 x16) (* (- 1) (* x14 x18))) 0))) (and (not (<= (+ (* (- 1) x20) x9 (* x10 x19)) 0)) (>= (+ (* (- 1) x20) x9 (* x10 x19)) 0)))))
(exit)
(check-sat)
