(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x6 () Real)
(declare-fun x23 () Real)
(declare-fun x40 () Real)
(declare-fun x13 () Real)
(declare-fun x30 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x37 () Real)
(declare-fun x10 () Real)
(declare-fun x27 () Real)
(declare-fun x0 () Real)
(declare-fun x17 () Real)
(declare-fun x34 () Real)
(declare-fun x7 () Real)
(declare-fun x24 () Real)
(declare-fun x41 () Real)
(declare-fun x14 () Real)
(declare-fun x31 () Real)
(declare-fun x4 () Real)
(declare-fun x21 () Real)
(declare-fun x38 () Real)
(declare-fun x11 () Real)
(declare-fun x28 () Real)
(declare-fun x1 () Real)
(declare-fun x18 () Real)
(declare-fun x35 () Real)
(declare-fun x8 () Real)
(declare-fun x25 () Real)
(declare-fun x15 () Real)
(declare-fun x32 () Real)
(declare-fun x5 () Real)
(declare-fun x22 () Real)
(declare-fun x39 () Real)
(declare-fun x12 () Real)
(declare-fun x29 () Real)
(declare-fun x2 () Real)
(declare-fun x19 () Real)
(declare-fun x36 () Real)
(declare-fun x9 () Real)
(declare-fun x26 () Real)
(declare-fun x16 () Real)
(declare-fun x33 () Real)
(assert (>= x6 0))
(assert (>= x23 0))
(assert (>= x40 0))
(assert (>= x13 0))
(assert (>= x30 0))
(assert (>= x3 0))
(assert (>= x20 0))
(assert (>= x37 0))
(assert (>= x10 0))
(assert (>= x27 0))
(assert (>= x0 0))
(assert (>= x17 0))
(assert (>= x34 0))
(assert (>= x7 0))
(assert (>= x24 0))
(assert (>= x41 0))
(assert (>= x14 0))
(assert (>= x31 0))
(assert (>= x4 0))
(assert (>= x21 0))
(assert (>= x38 0))
(assert (>= x11 0))
(assert (>= x28 0))
(assert (>= x1 0))
(assert (>= x18 0))
(assert (>= x35 0))
(assert (>= x8 0))
(assert (>= x25 0))
(assert (>= x15 0))
(assert (>= x32 0))
(assert (>= x5 0))
(assert (>= x22 0))
(assert (>= x39 0))
(assert (>= x12 0))
(assert (>= x29 0))
(assert (>= x2 0))
(assert (>= x19 0))
(assert (>= x36 0))
(assert (>= x9 0))
(assert (>= x26 0))
(assert (>= x16 0))
(assert (>= x33 0))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (<= (+ x0 (* (- 1) x4) (* x1 x2)) 0)) (>= (+ x0 (* (- 1) x4) (* x1 x2)) 0)) (>= (+ (* (- 1) x5) (* x3 x1)) 0)) (and (and (not (<= (+ (* x10 x11) (* (- 1) (* x14 x9))) 0)) (>= (+ (* x10 x11) (* (- 1) (* x14 x9))) 0)) (>= (+ (* (- 1) x10) x9) 0))) (and (and (not (<= (+ (* (- 1) x17) x4 (* x15 x5)) 0)) (>= (+ (* (- 1) x17) x4 (* x15 x5)) 0)) (>= (+ (* (- 1) x18) (* x5 x16)) 0))) (and (and (not (<= (+ (* (- 1) x0) x4 (* x15 x5) (* (- 1) (* x1 x15)) (* (- 1) (* x1 x2 x16))) 0)) (>= (+ (* (- 1) x0) x4 (* x15 x5) (* (- 1) (* x1 x15)) (* (- 1) (* x1 x2 x16))) 0)) (>= (+ (* x5 x16) (* (- 1) (* x3 x1 x16))) 0))) (and (and (not (<= (+ (* (- 1) (* x10 x21)) (* x20 x9)) 0)) (>= (+ (* (- 1) (* x10 x21)) (* x20 x9)) 0)) (>= (+ x10 (* (- 1) x9)) 0))) (and (and (not (<= (+ (* (- 1) (* x23 x8)) (* x24 x14)) 0)) (>= (+ (* (- 1) (* x23 x8)) (* x24 x14)) 0)) (>= (+ x23 (* (- 1) x24)) 0))) (and (and (not (<= (+ x6 (* (- 1) x4) (* x13 x12)) 0)) (>= (+ x6 (* (- 1) x4) (* x13 x12)) 0)) (>= (+ x10 x7 (* (- 1) x5) x9) 0))) (and (and (not (<= (+ (* (- 1) (* x7 x26)) (* (- 1) (* x10 x28)) (* x13 x12) (* (- 1) (* x28 x9)) (* (- 1) (* x28 x12))) 0)) (>= (+ (* (- 1) (* x7 x26)) (* (- 1) (* x10 x28)) (* x13 x12) (* (- 1) (* x28 x9)) (* (- 1) (* x28 x12))) 0)) (>= (+ x10 x7 x9 (* (- 1) (* x27 x7))) 0))) (and (and (not (<= (+ (* x23 x19) (* (- 1) (* x20 x24))) 0)) (>= (+ (* x23 x19) (* (- 1) (* x20 x24))) 0)) (>= (+ (* (- 1) x23) x24) 0))) (and (and (not (<= (+ (* x7 x26) (* x10 x29) (* x12 x29) (* x29 x9) (* (- 1) (* x30 x12))) 0)) (>= (+ (* x7 x26) (* x10 x29) (* x12 x29) (* x29 x9) (* (- 1) (* x30 x12))) 0)) (>= (+ (* (- 1) x10) (* (- 1) x7) (* (- 1) x9) (* x27 x7)) 0))) (and (and (not (<= (+ (* (- 1) x0) x22 (* x13 x25)) 0)) (>= (+ (* (- 1) x0) x22 (* x13 x25)) 0)) (>= (+ x23 x24 (* (- 1) x1)) 0))) (and (and (not (<= (+ (* (- 1) (* x23 x31)) (* (- 1) (* x24 x28)) (* x13 x25) (* (- 1) (* x28 x25))) 0)) (>= (+ (* (- 1) (* x23 x31)) (* (- 1) (* x24 x28)) (* x13 x25) (* (- 1) (* x28 x25))) 0)) (>= (+ x23 x24 (* (- 1) (* x23 x32))) 0))) (and (and (not (<= (+ x17 (* (- 1) x22) (* x18 x2) (* x3 x18 x2)) 0)) (>= (+ x17 (* (- 1) x22) (* x18 x2) (* x3 x18 x2)) 0)) (>= (+ (* (- 1) x23) (* (- 1) x24) (* (- 1) x25) (* x3 x3 x18)) 0))) (and (and (not (<= (+ (* x23 x31) (* x24 x29) (* x25 x29) (* (- 1) (* x30 x25))) 0)) (>= (+ (* x23 x31) (* x24 x29) (* x25 x29) (* (- 1) (* x30 x25))) 0)) (>= (+ (* (- 1) x23) (* (- 1) x24) (* x23 x32)) 0))) (and (and (not (<= (+ x0 (* (- 1) x22) (* x31 x1)) 0)) (>= (+ x0 (* (- 1) x22) (* x31 x1)) 0)) (>= (+ (* (- 1) x23) (* (- 1) x24) (* (- 1) x25) (* x1 x32)) 0))) (and (and (not (<= (+ (* (- 1) (* x7 x8)) (* x14 x9)) 0)) (>= (+ (* (- 1) (* x7 x8)) (* x14 x9)) 0)) (>= (+ x7 (* (- 1) x9)) 0))) (and (and (not (<= (+ (* (- 1) x6) x17 (* x18 x2) (* x3 x18 x2) (* x3 x3 x18 x2)) 0)) (>= (+ (* (- 1) x6) x17 (* x18 x2) (* x3 x18 x2) (* x3 x3 x18 x2)) 0)) (>= (+ (* (- 1) x10) (* (- 1) x7) (* (- 1) x12) (* (- 1) x9) (* x3 x3 x3 x18)) 0))) (and (and (not (<= (+ (* x7 x19) (* (- 1) (* x20 x9))) 0)) (>= (+ (* x7 x19) (* (- 1) (* x20 x9))) 0)) (>= (+ (* (- 1) x7) x9) 0))) (and (and (not (<= (+ (* (- 1) x6) x0 (* x31 x1)) 0)) (>= (+ (* (- 1) x6) x0 (* x31 x1)) 0)) (>= (+ (* (- 1) x10) (* (- 1) x7) (* (- 1) x12) (* (- 1) x9) (* x1 x32)) 0))) (and (and (not (<= (+ x31 (* (- 1) x26) (* x32 x2)) 0)) (>= (+ x31 (* (- 1) x26) (* x32 x2)) 0)) (>= (+ (* (- 1) x27) (* x3 x32)) 0))) (and (and (not (<= (+ (* x11 x36) (* (- 1) (* x14 x35))) 0)) (>= (+ (* x11 x36) (* (- 1) (* x14 x35))) 0)) (>= (+ x35 (* (- 1) x36)) 0))) (and (and (not (<= (+ (* (- 1) x31) x26 (* x27 x15) (* (- 1) (* x15 x32)) (* (- 1) (* x32 x2 x16))) 0)) (>= (+ (* (- 1) x31) x26 (* x27 x15) (* (- 1) (* x15 x32)) (* (- 1) (* x32 x2 x16))) 0)) (>= (+ (* x27 x16) (* (- 1) (* x3 x32 x16))) 0))) (and (and (not (<= (+ (* x20 x35) (* (- 1) (* x21 x36))) 0)) (>= (+ (* x20 x35) (* (- 1) (* x21 x36))) 0)) (>= (+ (* (- 1) x35) x36) 0))) (and (and (not (<= (+ (* x40 x14) (* (- 1) (* x8 x39))) 0)) (>= (+ (* x40 x14) (* (- 1) (* x8 x39))) 0)) (>= (+ (* (- 1) x40) x39) 0))) (and (and (not (<= (+ (* (- 1) (* x34 x26)) (* (- 1) (* x37 x28)) (* x13 x37) (* (- 1) (* x28 x35)) (* (- 1) (* x28 x36))) 0)) (>= (+ (* (- 1) (* x34 x26)) (* (- 1) (* x37 x28)) (* x13 x37) (* (- 1) (* x28 x35)) (* (- 1) (* x28 x36))) 0)) (>= (+ x34 x35 x36 (* (- 1) (* x27 x34))) 0))) (and (and (not (<= (+ (* (- 1) (* x40 x20)) (* x39 x19)) 0)) (>= (+ (* (- 1) (* x40 x20)) (* x39 x19)) 0)) (>= (+ x40 (* (- 1) x39)) 0))) (and (and (not (<= (+ (* x34 x26) (* x35 x29) (* x37 x29) (* x29 x36) (* (- 1) (* x30 x37))) 0)) (>= (+ (* x34 x26) (* x35 x29) (* x37 x29) (* x29 x36) (* (- 1) (* x30 x37))) 0)) (>= (+ (* (- 1) x34) (* (- 1) x35) (* (- 1) x36) (* x27 x34)) 0))) (and (and (not (<= (+ (* (- 1) (* x40 x28)) (* (- 1) (* x41 x28)) (* x13 x41) (* (- 1) (* x31 x39))) 0)) (>= (+ (* (- 1) (* x40 x28)) (* (- 1) (* x41 x28)) (* x13 x41) (* (- 1) (* x31 x39))) 0)) (>= (+ x40 x39 (* (- 1) (* x32 x39))) 0))) (and (and (not (<= (+ (* (- 1) x38) x2 (* x3 x2) (* x3 x3 x2)) 0)) (>= (+ (* (- 1) x38) x2 (* x3 x2) (* x3 x3 x2)) 0)) (>= (+ (* (- 1) x40) (* (- 1) x41) (* (- 1) x39) (* x3 x3 x3)) 0))) (and (and (not (<= (+ (* x40 x29) (* x41 x29) (* x31 x39) (* (- 1) (* x30 x41))) 0)) (>= (+ (* x40 x29) (* x41 x29) (* x31 x39) (* (- 1) (* x30 x41))) 0)) (>= (+ (* (- 1) x40) (* (- 1) x39) (* x32 x39)) 0))) (and (and (not (<= (+ x31 (* (- 1) x38) (* x31 x32)) 0)) (>= (+ x31 (* (- 1) x38) (* x31 x32)) 0)) (>= (+ (* (- 1) x40) (* (- 1) x41) (* (- 1) x39) (* x32 x32)) 0))) (and (and (not (<= (+ (* (- 1) (* x34 x8)) (* x14 x35)) 0)) (>= (+ (* (- 1) (* x34 x8)) (* x14 x35)) 0)) (>= (+ x34 (* (- 1) x35)) 0))) (and (and (not (<= (+ x2 (* (- 1) x33) (* x3 x2) (* x3 x3 x2) (* x3 x3 x3 x2)) 0)) (>= (+ x2 (* (- 1) x33) (* x3 x2) (* x3 x3 x2) (* x3 x3 x3 x2)) 0)) (>= (+ (* (- 1) x37) (* (- 1) x34) (* (- 1) x35) (* (- 1) x36) (* x3 x3 x3 x3)) 0))) (and (and (not (<= (+ (* x34 x19) (* (- 1) (* x20 x35))) 0)) (>= (+ (* x34 x19) (* (- 1) (* x20 x35))) 0)) (>= (+ (* (- 1) x34) x35) 0))) (and (and (not (<= (+ x31 (* (- 1) x33) (* x31 x32)) 0)) (>= (+ x31 (* (- 1) x33) (* x31 x32)) 0)) (>= (+ (* (- 1) x37) (* (- 1) x34) (* (- 1) x35) (* (- 1) x36) (* x32 x32)) 0))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (<= (+ x0 (* (- 1) x4) (* x1 x2)) 0)) (>= (+ x0 (* (- 1) x4) (* x1 x2)) 0)) (>= (+ (* (- 1) x5) (* x3 x1)) 0)) (and (and (not (<= (+ (* x10 x11) (* (- 1) (* x14 x9))) 0)) (>= (+ (* x10 x11) (* (- 1) (* x14 x9))) 0)) (>= (+ (* (- 1) x10) x9) 0))) (and (and (not (<= (+ (* (- 1) x17) x4 (* x15 x5)) 0)) (>= (+ (* (- 1) x17) x4 (* x15 x5)) 0)) (>= (+ (* (- 1) x18) (* x5 x16)) 0))) (and (and (not (<= (+ (* (- 1) x0) x4 (* x15 x5) (* (- 1) (* x1 x15)) (* (- 1) (* x1 x2 x16))) 0)) (>= (+ (* (- 1) x0) x4 (* x15 x5) (* (- 1) (* x1 x15)) (* (- 1) (* x1 x2 x16))) 0)) (>= (+ (* x5 x16) (* (- 1) (* x3 x1 x16))) 0))) (and (and (not (<= (+ (* (- 1) (* x10 x21)) (* x20 x9)) 0)) (>= (+ (* (- 1) (* x10 x21)) (* x20 x9)) 0)) (>= (+ x10 (* (- 1) x9)) 0))) (and (and (not (<= (+ (* (- 1) (* x23 x8)) (* x24 x14)) 0)) (>= (+ (* (- 1) (* x23 x8)) (* x24 x14)) 0)) (>= (+ x23 (* (- 1) x24)) 0))) (and (and (not (<= (+ x6 (* (- 1) x4) (* x13 x12)) 0)) (>= (+ x6 (* (- 1) x4) (* x13 x12)) 0)) (>= (+ x10 x7 (* (- 1) x5) x9) 0))) (and (and (not (<= (+ (* (- 1) (* x7 x26)) (* (- 1) (* x10 x28)) (* x13 x12) (* (- 1) (* x28 x9)) (* (- 1) (* x28 x12))) 0)) (>= (+ (* (- 1) (* x7 x26)) (* (- 1) (* x10 x28)) (* x13 x12) (* (- 1) (* x28 x9)) (* (- 1) (* x28 x12))) 0)) (>= (+ x10 x7 x9 (* (- 1) (* x27 x7))) 0))) (and (and (not (<= (+ (* x23 x19) (* (- 1) (* x20 x24))) 0)) (>= (+ (* x23 x19) (* (- 1) (* x20 x24))) 0)) (>= (+ (* (- 1) x23) x24) 0))) (and (and (not (<= (+ (* x7 x26) (* x10 x29) (* x12 x29) (* x29 x9) (* (- 1) (* x30 x12))) 0)) (>= (+ (* x7 x26) (* x10 x29) (* x12 x29) (* x29 x9) (* (- 1) (* x30 x12))) 0)) (>= (+ (* (- 1) x10) (* (- 1) x7) (* (- 1) x9) (* x27 x7)) 0))) (and (and (not (<= (+ (* (- 1) x0) x22 (* x13 x25)) 0)) (>= (+ (* (- 1) x0) x22 (* x13 x25)) 0)) (>= (+ x23 x24 (* (- 1) x1)) 0))) (and (and (not (<= (+ (* (- 1) (* x23 x31)) (* (- 1) (* x24 x28)) (* x13 x25) (* (- 1) (* x28 x25))) 0)) (>= (+ (* (- 1) (* x23 x31)) (* (- 1) (* x24 x28)) (* x13 x25) (* (- 1) (* x28 x25))) 0)) (>= (+ x23 x24 (* (- 1) (* x23 x32))) 0))) (and (and (not (<= (+ x17 (* (- 1) x22) (* x18 x2) (* x3 x18 x2)) 0)) (>= (+ x17 (* (- 1) x22) (* x18 x2) (* x3 x18 x2)) 0)) (>= (+ (* (- 1) x23) (* (- 1) x24) (* (- 1) x25) (* x3 x3 x18)) 0))) (and (and (not (<= (+ (* x23 x31) (* x24 x29) (* x25 x29) (* (- 1) (* x30 x25))) 0)) (>= (+ (* x23 x31) (* x24 x29) (* x25 x29) (* (- 1) (* x30 x25))) 0)) (>= (+ (* (- 1) x23) (* (- 1) x24) (* x23 x32)) 0))) (and (and (not (<= (+ x0 (* (- 1) x22) (* x31 x1)) 0)) (>= (+ x0 (* (- 1) x22) (* x31 x1)) 0)) (>= (+ (* (- 1) x23) (* (- 1) x24) (* (- 1) x25) (* x1 x32)) 0))) (and (and (not (<= (+ (* (- 1) (* x7 x8)) (* x14 x9)) 0)) (>= (+ (* (- 1) (* x7 x8)) (* x14 x9)) 0)) (>= (+ x7 (* (- 1) x9)) 0))) (and (and (not (<= (+ (* (- 1) x6) x17 (* x18 x2) (* x3 x18 x2) (* x3 x3 x18 x2)) 0)) (>= (+ (* (- 1) x6) x17 (* x18 x2) (* x3 x18 x2) (* x3 x3 x18 x2)) 0)) (>= (+ (* (- 1) x10) (* (- 1) x7) (* (- 1) x12) (* (- 1) x9) (* x3 x3 x3 x18)) 0))) (and (and (not (<= (+ (* x7 x19) (* (- 1) (* x20 x9))) 0)) (>= (+ (* x7 x19) (* (- 1) (* x20 x9))) 0)) (>= (+ (* (- 1) x7) x9) 0))) (and (and (not (<= (+ (* (- 1) x6) x0 (* x31 x1)) 0)) (>= (+ (* (- 1) x6) x0 (* x31 x1)) 0)) (>= (+ (* (- 1) x10) (* (- 1) x7) (* (- 1) x12) (* (- 1) x9) (* x1 x32)) 0)))))
(exit)
(check-sat)
