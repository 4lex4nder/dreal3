(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x6 () Real)
(declare-fun x23 () Real)
(declare-fun x40 () Real)
(declare-fun x13 () Real)
(declare-fun x30 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x37 () Real)
(declare-fun x10 () Real)
(declare-fun x27 () Real)
(declare-fun x44 () Real)
(declare-fun x0 () Real)
(declare-fun x17 () Real)
(declare-fun x34 () Real)
(declare-fun x7 () Real)
(declare-fun x24 () Real)
(declare-fun x41 () Real)
(declare-fun x14 () Real)
(declare-fun x31 () Real)
(declare-fun x4 () Real)
(declare-fun x21 () Real)
(declare-fun x38 () Real)
(declare-fun x11 () Real)
(declare-fun x28 () Real)
(declare-fun x45 () Real)
(declare-fun x1 () Real)
(declare-fun x18 () Real)
(declare-fun x35 () Real)
(declare-fun x8 () Real)
(declare-fun x25 () Real)
(declare-fun x42 () Real)
(declare-fun x15 () Real)
(declare-fun x32 () Real)
(declare-fun x5 () Real)
(declare-fun x22 () Real)
(declare-fun x39 () Real)
(declare-fun x12 () Real)
(declare-fun x29 () Real)
(declare-fun x46 () Real)
(declare-fun x2 () Real)
(declare-fun x19 () Real)
(declare-fun x36 () Real)
(declare-fun x9 () Real)
(declare-fun x26 () Real)
(declare-fun x43 () Real)
(declare-fun x16 () Real)
(declare-fun x33 () Real)
(assert (>= x6 0))
(assert (>= x23 0))
(assert (>= x40 0))
(assert (>= x13 0))
(assert (>= x30 0))
(assert (>= x3 0))
(assert (>= x20 0))
(assert (>= x37 0))
(assert (>= x10 0))
(assert (>= x27 0))
(assert (>= x44 0))
(assert (>= x0 0))
(assert (>= x17 0))
(assert (>= x34 0))
(assert (>= x7 0))
(assert (>= x24 0))
(assert (>= x41 0))
(assert (>= x14 0))
(assert (>= x31 0))
(assert (>= x4 0))
(assert (>= x21 0))
(assert (>= x38 0))
(assert (>= x11 0))
(assert (>= x28 0))
(assert (>= x45 0))
(assert (>= x1 0))
(assert (>= x18 0))
(assert (>= x35 0))
(assert (>= x8 0))
(assert (>= x25 0))
(assert (>= x42 0))
(assert (>= x15 0))
(assert (>= x32 0))
(assert (>= x5 0))
(assert (>= x22 0))
(assert (>= x39 0))
(assert (>= x12 0))
(assert (>= x29 0))
(assert (>= x46 0))
(assert (>= x2 0))
(assert (>= x19 0))
(assert (>= x36 0))
(assert (>= x9 0))
(assert (>= x26 0))
(assert (>= x43 0))
(assert (>= x16 0))
(assert (>= x33 0))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (<= (* x1 x2) 0)) (>= (* x1 x2) 0)) (>= (+ (* (- 1) x1) (* x3 x1)) 0)) (and (and (not (<= (* x6 x7) 0)) (>= (* x6 x7) 0)) (>= (+ (* (- 1) x6) (* x6 x9)) 0))) (and (and (and (not (<= (+ (* (- 1) x0) x11 (* x7 x12) (* x7 x12 x9)) 0)) (>= (+ (* (- 1) x0) x11 (* x7 x12) (* x7 x12 x9)) 0)) (>= (+ (* (- 1) x1) (* x8 x12)) 0)) (>= (+ (* (- 1) x4) (* x8 x12 x9)) 0))) (and (and (and (and (not (<= (+ (* x7 x12 x9) (* (- 1) (* x13 x8 x12))) 0)) (>= (+ (* x7 x12 x9) (* (- 1) (* x13 x8 x12))) 0)) (>= (+ (* x8 x12) (* (- 1) (* x14 x8 x12))) 0)) (>= (+ (* x8 x12 x9) (* (- 1) (* x8 x15 x12))) 0)) (>= (+ (* (- 1) (* x12 x9)) (* x12 x9 x9)) 0))) (and (and (and (and (not (<= (+ (* (- 1) (* x7 x12)) (* x12 x16) (* (- 1) (* x7 x12 x9)) (* x7 x18 x12) (* x7 x18 x12 x9)) 0)) (>= (+ (* (- 1) (* x7 x12)) (* x12 x16) (* (- 1) (* x7 x12 x9)) (* x7 x18 x12) (* x7 x18 x12 x9)) 0)) (>= (+ (* (- 1) (* x8 x12)) (* x18 x8 x12)) 0)) (>= (+ (* (- 1) (* x8 x12 x9)) (* x18 x8 x12 x9)) 0)) (>= (+ (* (- 1) (* x12 x9 x9)) (* x18 x12 x9 x9)) 0))) (and (and (and (and (and (not (<= (+ x11 (* (- 1) x5) (* x12 x16) (* (- 1) (* x10 x19)) (* x7 x18 x12) (* (- 1) (* x20 x10 x7)) (* x7 x18 x12 x9) (* (- 1) (* x20 x10 x7 x9))) 0)) (>= (+ x11 (* (- 1) x5) (* x12 x16) (* (- 1) (* x10 x19)) (* x7 x18 x12) (* (- 1) (* x20 x10 x7)) (* x7 x18 x12 x9) (* (- 1) (* x20 x10 x7 x9))) 0)) (>= (+ (* x18 x8 x12) (* (- 1) (* x20 x10 x8))) 0)) (>= (+ (* x18 x8 x12 x9) (* (- 1) (* x20 x10 x8 x9))) 0)) (>= (+ (* (- 1) x6) (* x17 x12)) 0)) (>= (+ (* x18 x12 x9 x9) (* (- 1) (* x20 x10 x9 x9))) 0))) (and (and (and (and (not (<= (+ (* x7 x18 x12) (* (- 1) (* x18 x12 x19)) (* x7 x18 x12 x9) (* (- 1) (* x20 x7 x18 x12)) (* (- 1) (* x20 x7 x18 x12 x9))) 0)) (>= (+ (* x7 x18 x12) (* (- 1) (* x18 x12 x19)) (* x7 x18 x12 x9) (* (- 1) (* x20 x7 x18 x12)) (* (- 1) (* x20 x7 x18 x12 x9))) 0)) (>= (+ (* x18 x8 x12) (* (- 1) (* x20 x18 x8 x12))) 0)) (>= (+ (* x18 x8 x12 x9) (* (- 1) (* x20 x18 x8 x12 x9))) 0)) (>= (+ (* x18 x12 x9 x9) (* (- 1) (* x20 x18 x12 x9 x9))) 0))) (and (and (and (not (<= (+ (* x22 x2) (* x23 x2)) 0)) (>= (+ (* x22 x2) (* x23 x2)) 0)) (>= (+ (* (- 1) x22) (* x3 x22)) 0)) (>= (+ (* (- 1) x23) (* x23 x3)) 0))) (and (and (and (not (<= (+ x24 (* (- 1) x21) (* x25 x2) (* x2 x26)) 0)) (>= (+ x24 (* (- 1) x21) (* x25 x2) (* x2 x26)) 0)) (>= (+ (* (- 1) x22) (* x3 x25)) 0)) (>= (+ (* (- 1) x23) (* x3 x26)) 0))) (and (and (and (not (<= (+ (* x25 x2) (* (- 1) (* x27 x25))) 0)) (>= (+ (* x25 x2) (* (- 1) (* x27 x25))) 0)) (>= (+ (* x3 x25) (* (- 1) (* x28 x25))) 0)) (>= (* (- 1) (* x25 x29)) 0))) (and (and (not (<= (* x7 x31) 0)) (>= (* x7 x31) 0)) (>= (+ (* (- 1) x31) (* x31 x9)) 0))) (and (and (not (<= (+ (* (- 1) x30) x32) 0)) (>= (+ (* (- 1) x30) x32) 0)) (>= (+ (* (- 1) x31) x33) 0))) (and (and (not (<= (+ (* (- 1) x11) x32) 0)) (>= (+ (* (- 1) x11) x32) 0)) (>= (+ (* (- 1) x12) x33) 0))) (and (and (not (<= (+ (* (- 1) x34) x32 (* (- 1) (* x35 x19))) 0)) (>= (+ (* (- 1) x34) x32 (* (- 1) (* x35 x19))) 0)) (>= (+ x33 (* (- 1) (* x20 x35))) 0))) (and (and (not (<= (+ (* (- 1) x24) x32 (* (- 1) (* x25 x36)) (* (- 1) (* x38 x26)) (* (- 1) (* x37 x25 x19))) 0)) (>= (+ (* (- 1) x24) x32 (* (- 1) (* x25 x36)) (* (- 1) (* x38 x26)) (* (- 1) (* x37 x25 x19))) 0)) (>= (+ x33 (* (- 1) (* x39 x26)) (* (- 1) (* x20 x37 x25))) 0))) (and (and (not (<= (+ x13 (* x40 x14)) 0)) (>= (+ x13 (* x40 x14)) 0)) (>= x15 1))) (and (and (not (<= (+ x13 (* (- 1) x2) (* x14 x2) (* (- 1) (* x13 x3))) 0)) (>= (+ x13 (* (- 1) x2) (* x14 x2) (* (- 1) (* x13 x3))) 0)) (>= (+ x15 (* (- 1) (* x3 x15))) 0))) (and (and (not (<= (+ x16 (* x17 x41)) 0)) (>= (+ x16 (* x17 x41)) 0)) (>= x18 1))) (and (and (and (not (<= (+ (* (- 1) x7) x16 (* (- 1) (* x9 x16)) (* x17 x7)) 0)) (>= (+ (* (- 1) x7) x16 (* (- 1) (* x9 x16)) (* x17 x7)) 0)) (>= (+ (* (- 1) x8) (* x17 x8)) 0)) (>= (+ x18 (* (- 1) (* x18 x9))) 0))) (and (and (not (<= (+ (* (- 1) x7) x19 (* x20 x7) (* (- 1) (* x41 x9)) (* x20 x41 x9)) 0)) (>= (+ (* (- 1) x7) x19 (* x20 x7) (* (- 1) (* x41 x9)) (* x20 x41 x9)) 0)) (>= (+ (* (- 1) x8) (* x20 x8)) 0))) (and (and (and (and (not (<= (+ (* x20 x7 x9) (* (- 1) (* x13 x20 x8))) 0)) (>= (+ (* x20 x7 x9) (* (- 1) (* x13 x20 x8))) 0)) (>= (+ (* x20 x8) (* (- 1) (* x20 x14 x8))) 0)) (>= (+ (* x20 x8 x9) (* (- 1) (* x20 x8 x15))) 0)) (>= (+ (* (- 1) (* x20 x9)) (* x20 x9 x9)) 0))) (and (and (and (and (not (<= (+ (* x20 x7 x18) (* (- 1) (* x20 x18 x19)) (* x20 x7 x18 x9) (* (- 1) (* x20 x20 x7 x18)) (* (- 1) (* x20 x20 x7 x18 x9))) 0)) (>= (+ (* x20 x7 x18) (* (- 1) (* x20 x18 x19)) (* x20 x7 x18 x9) (* (- 1) (* x20 x20 x7 x18)) (* (- 1) (* x20 x20 x7 x18 x9))) 0)) (>= (+ (* x20 x18 x8) (* (- 1) (* x20 x20 x18 x8))) 0)) (>= (+ (* x20 x18 x8 x9) (* (- 1) (* x20 x20 x18 x8 x9))) 0)) (>= (+ (* x20 x18 x9 x9) (* (- 1) (* x20 x20 x18 x9 x9))) 0))) (and (and (not (<= (+ x27 (* x40 x29)) 0)) (>= (+ x27 (* x40 x29)) 0)) (>= x28 1))) (and (not (<= (+ (* (- 1) x40) x27 (* x29 x2) (* x40 x28)) 0)) (>= (+ (* (- 1) x40) x27 (* x29 x2) (* x40 x28)) 0))) (and (and (and (not (<= (+ (* x29 x2) (* x28 x2)) 0)) (>= (+ (* x29 x2) (* x28 x2)) 0)) (>= (+ (* (- 1) x28) (* x3 x28)) 0)) (>= (+ (* (- 1) x29) (* x3 x29)) 0))) (and (not (<= (+ (* (- 1) x40) x42 (* x44 x2) (* x40 x43)) 0)) (>= (+ (* (- 1) x40) x42 (* x44 x2) (* x40 x43)) 0))) (and (and (and (not (<= (+ x42 (* (- 1) x2) (* x44 x2) (* x2 x43) (* (- 1) (* x3 x42)) (* (- 1) (* x3 x44 x2)) (* (- 1) (* x3 x27 x43))) 0)) (>= (+ x42 (* (- 1) x2) (* x44 x2) (* x2 x43) (* (- 1) (* x3 x42)) (* (- 1) (* x3 x44 x2)) (* (- 1) (* x3 x27 x43))) 0)) (>= (+ (* x3 x43) (* (- 1) (* x3 x28 x43))) 0)) (>= (+ (* x3 x44) (* (- 1) (* x3 x3 x44)) (* (- 1) (* x3 x29 x43))) 0))) (and (not (<= (+ (* (- 1) x40) x38 (* x41 x39)) 0)) (>= (+ (* (- 1) x40) x38 (* x41 x39)) 0))) (and (and (not (<= (+ x38 (* (- 1) x2) (* (- 1) (* x3 x38)) (* x7 x39)) 0)) (>= (+ x38 (* (- 1) x2) (* (- 1) (* x3 x38)) (* x7 x39)) 0)) (>= (+ (* x39 x9) (* (- 1) (* x3 x39))) 0))) (and (and (not (<= (+ x36 (* x37 x7)) 0)) (>= (+ x36 (* x37 x7)) 0)) (>= (* x37 x8) 1))) (and (and (not (<= (+ x45 (* (- 1) x42) (* (- 1) (* x44 x38)) (* (- 1) (* x36 x43)) (* (- 1) (* x37 x19 x43))) 0)) (>= (+ x45 (* (- 1) x42) (* (- 1) (* x44 x38)) (* (- 1) (* x36 x43)) (* (- 1) (* x37 x19 x43))) 0)) (>= (+ x46 (* (- 1) (* x44 x39)) (* (- 1) (* x20 x37 x43))) 0))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (<= (* x1 x2) 0)) (>= (* x1 x2) 0)) (>= (+ (* (- 1) x1) (* x3 x1)) 0)) (and (and (not (<= (* x6 x7) 0)) (>= (* x6 x7) 0)) (>= (+ (* (- 1) x6) (* x6 x9)) 0))) (and (and (and (not (<= (+ (* (- 1) x0) x11 (* x7 x12) (* x7 x12 x9)) 0)) (>= (+ (* (- 1) x0) x11 (* x7 x12) (* x7 x12 x9)) 0)) (>= (+ (* (- 1) x1) (* x8 x12)) 0)) (>= (+ (* (- 1) x4) (* x8 x12 x9)) 0))) (and (and (and (and (not (<= (+ (* x7 x12 x9) (* (- 1) (* x13 x8 x12))) 0)) (>= (+ (* x7 x12 x9) (* (- 1) (* x13 x8 x12))) 0)) (>= (+ (* x8 x12) (* (- 1) (* x14 x8 x12))) 0)) (>= (+ (* x8 x12 x9) (* (- 1) (* x8 x15 x12))) 0)) (>= (+ (* (- 1) (* x12 x9)) (* x12 x9 x9)) 0))) (and (and (and (and (not (<= (+ (* (- 1) (* x7 x12)) (* x12 x16) (* (- 1) (* x7 x12 x9)) (* x7 x18 x12) (* x7 x18 x12 x9)) 0)) (>= (+ (* (- 1) (* x7 x12)) (* x12 x16) (* (- 1) (* x7 x12 x9)) (* x7 x18 x12) (* x7 x18 x12 x9)) 0)) (>= (+ (* (- 1) (* x8 x12)) (* x18 x8 x12)) 0)) (>= (+ (* (- 1) (* x8 x12 x9)) (* x18 x8 x12 x9)) 0)) (>= (+ (* (- 1) (* x12 x9 x9)) (* x18 x12 x9 x9)) 0))) (and (and (and (and (and (not (<= (+ x11 (* (- 1) x5) (* x12 x16) (* (- 1) (* x10 x19)) (* x7 x18 x12) (* (- 1) (* x20 x10 x7)) (* x7 x18 x12 x9) (* (- 1) (* x20 x10 x7 x9))) 0)) (>= (+ x11 (* (- 1) x5) (* x12 x16) (* (- 1) (* x10 x19)) (* x7 x18 x12) (* (- 1) (* x20 x10 x7)) (* x7 x18 x12 x9) (* (- 1) (* x20 x10 x7 x9))) 0)) (>= (+ (* x18 x8 x12) (* (- 1) (* x20 x10 x8))) 0)) (>= (+ (* x18 x8 x12 x9) (* (- 1) (* x20 x10 x8 x9))) 0)) (>= (+ (* (- 1) x6) (* x17 x12)) 0)) (>= (+ (* x18 x12 x9 x9) (* (- 1) (* x20 x10 x9 x9))) 0))) (and (and (and (and (not (<= (+ (* x7 x18 x12) (* (- 1) (* x18 x12 x19)) (* x7 x18 x12 x9) (* (- 1) (* x20 x7 x18 x12)) (* (- 1) (* x20 x7 x18 x12 x9))) 0)) (>= (+ (* x7 x18 x12) (* (- 1) (* x18 x12 x19)) (* x7 x18 x12 x9) (* (- 1) (* x20 x7 x18 x12)) (* (- 1) (* x20 x7 x18 x12 x9))) 0)) (>= (+ (* x18 x8 x12) (* (- 1) (* x20 x18 x8 x12))) 0)) (>= (+ (* x18 x8 x12 x9) (* (- 1) (* x20 x18 x8 x12 x9))) 0)) (>= (+ (* x18 x12 x9 x9) (* (- 1) (* x20 x18 x12 x9 x9))) 0))) (and (and (and (not (<= (+ (* x22 x2) (* x23 x2)) 0)) (>= (+ (* x22 x2) (* x23 x2)) 0)) (>= (+ (* (- 1) x22) (* x3 x22)) 0)) (>= (+ (* (- 1) x23) (* x23 x3)) 0))) (and (and (and (not (<= (+ x24 (* (- 1) x21) (* x25 x2) (* x2 x26)) 0)) (>= (+ x24 (* (- 1) x21) (* x25 x2) (* x2 x26)) 0)) (>= (+ (* (- 1) x22) (* x3 x25)) 0)) (>= (+ (* (- 1) x23) (* x3 x26)) 0))) (and (and (and (not (<= (+ (* x25 x2) (* (- 1) (* x27 x25))) 0)) (>= (+ (* x25 x2) (* (- 1) (* x27 x25))) 0)) (>= (+ (* x3 x25) (* (- 1) (* x28 x25))) 0)) (>= (* (- 1) (* x25 x29)) 0))) (and (and (not (<= (* x7 x31) 0)) (>= (* x7 x31) 0)) (>= (+ (* (- 1) x31) (* x31 x9)) 0))) (and (and (not (<= (+ (* (- 1) x30) x32) 0)) (>= (+ (* (- 1) x30) x32) 0)) (>= (+ (* (- 1) x31) x33) 0))) (and (and (not (<= (+ (* (- 1) x11) x32) 0)) (>= (+ (* (- 1) x11) x32) 0)) (>= (+ (* (- 1) x12) x33) 0))) (and (and (not (<= (+ (* (- 1) x34) x32 (* (- 1) (* x35 x19))) 0)) (>= (+ (* (- 1) x34) x32 (* (- 1) (* x35 x19))) 0)) (>= (+ x33 (* (- 1) (* x20 x35))) 0))) (and (and (not (<= (+ (* (- 1) x24) x32 (* (- 1) (* x25 x36)) (* (- 1) (* x38 x26)) (* (- 1) (* x37 x25 x19))) 0)) (>= (+ (* (- 1) x24) x32 (* (- 1) (* x25 x36)) (* (- 1) (* x38 x26)) (* (- 1) (* x37 x25 x19))) 0)) (>= (+ x33 (* (- 1) (* x39 x26)) (* (- 1) (* x20 x37 x25))) 0)))))
(exit)
(check-sat)
