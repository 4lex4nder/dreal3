(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x6 () Real)
(declare-fun x3 () Real)
(declare-fun x10 () Real)
(declare-fun x0 () Real)
(declare-fun x7 () Real)
(declare-fun x4 () Real)
(declare-fun x1 () Real)
(declare-fun x8 () Real)
(declare-fun x5 () Real)
(declare-fun x2 () Real)
(declare-fun x9 () Real)
(assert (>= x6 0))
(assert (>= x3 0))
(assert (>= x10 0))
(assert (>= x0 0))
(assert (>= x7 0))
(assert (>= x4 0))
(assert (>= x1 0))
(assert (>= x8 0))
(assert (>= x5 0))
(assert (>= x2 0))
(assert (>= x9 0))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (<= (+ x0 (* (- 1) x5) (* x1 x2)) 0)) (>= (+ x0 (* (- 1) x5) (* x1 x2)) 0)) (>= (+ (* (- 1) x7) (* x3 x1)) 0)) (>= (+ (* (- 1) x6) (* x4 x1)) 0)) (and (and (not (<= (+ (* (- 1) x0) x5 (* x6 x2)) 0)) (>= (+ (* (- 1) x0) x5 (* x6 x2)) 0)) (>= (+ (* (- 1) x1) (* x6 x4)) 0))) (and (and (and (not (<= (+ (* x6 x2) (* (- 1) (* x7 x8))) 0)) (>= (+ (* x6 x2) (* (- 1) (* x7 x8))) 0)) (>= (+ (* x6 x4) (* (- 1) (* x7 x9))) 0)) (>= (+ (* (- 1) x6) x7) 0))) (and (and (and (and (not (<= (+ (* x6 x2) (* (- 1) (* x7 x2)) (* (- 1) (* x7 x4 x8))) 0)) (>= (+ (* x6 x2) (* (- 1) (* x7 x2)) (* (- 1) (* x7 x4 x8))) 0)) (>= (+ (* (- 1) x6) (* x6 x3)) 0)) (>= (+ (* x6 x4) (* (- 1) (* x7 x4 x9))) 0)) (>= (+ x7 (* (- 1) (* x3 x7))) 0))) (and (and (not (<= (+ (* (- 1) x0) x5 (* x6 x10)) 0)) (>= (+ (* (- 1) x0) x5 (* x6 x10)) 0)) (>= (+ x7 (* (- 1) x1)) 0))) (and (and (not (<= (+ (* (- 1) x0) x5 (* x7 x2) (* x7 x4 x8)) 0)) (>= (+ (* (- 1) x0) x5 (* x7 x2) (* x7 x4 x8)) 0)) (>= (+ (* (- 1) x1) (* x3 x7)) 0))) (and (and (not (<= (+ (* (- 1) x0) x5 (* x7 x2) (* x7 x4 x2) (* x3 x7 x4 x8)) 0)) (>= (+ (* (- 1) x0) x5 (* x7 x2) (* x7 x4 x2) (* x3 x7 x4 x8)) 0)) (>= (+ (* (- 1) x1) (* x7 x4 x4)) 0))) (and (and (and (not (<= (+ (* (- 1) (* x6 x8)) (* x7 x2) (* x7 x4 x2) (* x3 x7 x4 x8)) 0)) (>= (+ (* (- 1) (* x6 x8)) (* x7 x2) (* x7 x4 x2) (* x3 x7 x4 x8)) 0)) (>= (+ (* (- 1) x7) (* x3 x7)) 0)) (>= (+ (* (- 1) (* x6 x9)) (* x7 x4 x4)) 0))) (and (and (not (<= (+ (* (- 1) x0) x5 (* x6 x8) (* x7 x2)) 0)) (>= (+ (* (- 1) x0) x5 (* x6 x8) (* x7 x2)) 0)) (>= (+ (* (- 1) x1) (* x3 x7)) 0))) (and (and (not (<= (+ (* (- 1) x0) x5 (* x6 x8) (* x7 x2) (* x7 x4 x2)) 0)) (>= (+ (* (- 1) x0) x5 (* x6 x8) (* x7 x2) (* x7 x4 x2)) 0)) (>= (+ (* (- 1) x1) (* x7 x4 x4)) 0))) (and (and (and (not (<= (+ (* x7 x2) (* x7 x4 x2)) 0)) (>= (+ (* x7 x2) (* x7 x4 x2)) 0)) (>= (+ (* (- 1) x7) (* x3 x7)) 0)) (>= (+ (* (- 1) (* x6 x9)) (* x7 x4 x4)) 0))) (and (not (<= (+ (* (- 1) x10) x2) 0)) (>= (+ (* (- 1) x10) x2) 0))) (and (and (not (<= (+ x2 (* x10 x4)) 0)) (>= (+ x2 (* x10 x4)) 0)) (>= x3 1))) (and (and (and (not (<= (+ x8 (* (- 1) x2) (* x2 x9)) 0)) (>= (+ x8 (* (- 1) x2) (* x2 x9)) 0)) (>= (+ (* (- 1) x4) (* x3 x9)) 0)) (>= (+ (* (- 1) x3) (* x4 x9)) 0))) (and (and (and (and (not (<= (+ (* (- 1) (* x4 x2)) (* x3 x2) (* (- 1) (* x4 x4 x8))) 0)) (>= (+ (* (- 1) (* x4 x2)) (* x3 x2) (* (- 1) (* x4 x4 x8))) 0)) (>= (+ (* (- 1) x3) (* x3 x3)) 0)) (>= (+ (* x3 x4) (* (- 1) (* x4 x4 x9))) 0)) (>= (+ x4 (* (- 1) (* x3 x4))) 0))) (and (and (not (<= (+ (* (- 1) x8) x2 (* x3 x10)) 0)) (>= (+ (* (- 1) x8) x2 (* x3 x10)) 0)) (>= (+ x4 (* (- 1) x9)) 0))) (and (and (not (<= (+ x8 (* x8 x9)) 0)) (>= (+ x8 (* x8 x9)) 0)) (>= (* x9 x9) 1))) (and (not (<= (+ (* (- 1) x10) x8 (* x10 x9)) 0)) (>= (+ (* (- 1) x10) x8 (* x10 x9)) 0))) (and (and (not (<= (+ (* (- 1) x8) x2 (* x4 x2) (* x4 x4 x8)) 0)) (>= (+ (* (- 1) x8) x2 (* x4 x2) (* x4 x4 x8)) 0)) (>= (+ (* (- 1) x9) (* x3 x4)) 0))) (and (and (and (not (<= (+ (* (- 1) (* x3 x8)) (* x4 x2) (* x4 x4 x2) (* x3 x4 x4 x8)) 0)) (>= (+ (* (- 1) (* x3 x8)) (* x4 x2) (* x4 x4 x2) (* x3 x4 x4 x8)) 0)) (>= (+ (* (- 1) x4) (* x3 x4)) 0)) (>= (+ (* (- 1) (* x3 x9)) (* x4 x4 x4)) 0))) (and (and (not (<= (+ (* (- 1) x8) x2 (* x3 x8) (* x4 x2)) 0)) (>= (+ (* (- 1) x8) x2 (* x3 x8) (* x4 x2)) 0)) (>= (+ (* (- 1) x9) (* x3 x4)) 0))) (and (and (and (not (<= (+ (* x4 x2) (* x4 x4 x2)) 0)) (>= (+ (* x4 x2) (* x4 x4 x2)) 0)) (>= (+ (* (- 1) x4) (* x3 x4)) 0)) (>= (+ (* (- 1) (* x3 x9)) (* x4 x4 x4)) 0))) (and (and (and (and (and (and (and (and (and (and (and (and (and (not (<= (+ x0 (* (- 1) x5) (* x1 x2)) 0)) (>= (+ x0 (* (- 1) x5) (* x1 x2)) 0)) (>= (+ (* (- 1) x7) (* x3 x1)) 0)) (>= (+ (* (- 1) x6) (* x4 x1)) 0)) (and (and (not (<= (+ (* (- 1) x0) x5 (* x6 x2)) 0)) (>= (+ (* (- 1) x0) x5 (* x6 x2)) 0)) (>= (+ (* (- 1) x1) (* x6 x4)) 0))) (and (and (and (not (<= (+ (* x6 x2) (* (- 1) (* x7 x8))) 0)) (>= (+ (* x6 x2) (* (- 1) (* x7 x8))) 0)) (>= (+ (* x6 x4) (* (- 1) (* x7 x9))) 0)) (>= (+ (* (- 1) x6) x7) 0))) (and (and (and (and (not (<= (+ (* x6 x2) (* (- 1) (* x7 x2)) (* (- 1) (* x7 x4 x8))) 0)) (>= (+ (* x6 x2) (* (- 1) (* x7 x2)) (* (- 1) (* x7 x4 x8))) 0)) (>= (+ (* (- 1) x6) (* x6 x3)) 0)) (>= (+ (* x6 x4) (* (- 1) (* x7 x4 x9))) 0)) (>= (+ x7 (* (- 1) (* x3 x7))) 0))) (and (and (not (<= (+ (* (- 1) x0) x5 (* x6 x10)) 0)) (>= (+ (* (- 1) x0) x5 (* x6 x10)) 0)) (>= (+ x7 (* (- 1) x1)) 0))) (and (and (not (<= (+ (* (- 1) x0) x5 (* x7 x2) (* x7 x4 x8)) 0)) (>= (+ (* (- 1) x0) x5 (* x7 x2) (* x7 x4 x8)) 0)) (>= (+ (* (- 1) x1) (* x3 x7)) 0))) (and (and (not (<= (+ (* (- 1) x0) x5 (* x7 x2) (* x7 x4 x2) (* x3 x7 x4 x8)) 0)) (>= (+ (* (- 1) x0) x5 (* x7 x2) (* x7 x4 x2) (* x3 x7 x4 x8)) 0)) (>= (+ (* (- 1) x1) (* x7 x4 x4)) 0))) (and (and (and (not (<= (+ (* (- 1) (* x6 x8)) (* x7 x2) (* x7 x4 x2) (* x3 x7 x4 x8)) 0)) (>= (+ (* (- 1) (* x6 x8)) (* x7 x2) (* x7 x4 x2) (* x3 x7 x4 x8)) 0)) (>= (+ (* (- 1) x7) (* x3 x7)) 0)) (>= (+ (* (- 1) (* x6 x9)) (* x7 x4 x4)) 0))) (and (and (not (<= (+ (* (- 1) x0) x5 (* x6 x8) (* x7 x2)) 0)) (>= (+ (* (- 1) x0) x5 (* x6 x8) (* x7 x2)) 0)) (>= (+ (* (- 1) x1) (* x3 x7)) 0))) (and (and (not (<= (+ (* (- 1) x0) x5 (* x6 x8) (* x7 x2) (* x7 x4 x2)) 0)) (>= (+ (* (- 1) x0) x5 (* x6 x8) (* x7 x2) (* x7 x4 x2)) 0)) (>= (+ (* (- 1) x1) (* x7 x4 x4)) 0))) (and (and (and (not (<= (+ (* x7 x2) (* x7 x4 x2)) 0)) (>= (+ (* x7 x2) (* x7 x4 x2)) 0)) (>= (+ (* (- 1) x7) (* x3 x7)) 0)) (>= (+ (* (- 1) (* x6 x9)) (* x7 x4 x4)) 0)))))
(exit)
(check-sat)
