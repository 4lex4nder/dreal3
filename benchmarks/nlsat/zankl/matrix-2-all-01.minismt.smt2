(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun x6 () Real)
(declare-fun x23 () Real)
(declare-fun x40 () Real)
(declare-fun x13 () Real)
(declare-fun x30 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x37 () Real)
(declare-fun x10 () Real)
(declare-fun x27 () Real)
(declare-fun x44 () Real)
(declare-fun x0 () Real)
(declare-fun x17 () Real)
(declare-fun x34 () Real)
(declare-fun x7 () Real)
(declare-fun x24 () Real)
(declare-fun x41 () Real)
(declare-fun x14 () Real)
(declare-fun x31 () Real)
(declare-fun x4 () Real)
(declare-fun x21 () Real)
(declare-fun x38 () Real)
(declare-fun x11 () Real)
(declare-fun x28 () Real)
(declare-fun x1 () Real)
(declare-fun x18 () Real)
(declare-fun x35 () Real)
(declare-fun x8 () Real)
(declare-fun x25 () Real)
(declare-fun x42 () Real)
(declare-fun x15 () Real)
(declare-fun x32 () Real)
(declare-fun x5 () Real)
(declare-fun x22 () Real)
(declare-fun x39 () Real)
(declare-fun x12 () Real)
(declare-fun x29 () Real)
(declare-fun x2 () Real)
(declare-fun x19 () Real)
(declare-fun x36 () Real)
(declare-fun x9 () Real)
(declare-fun x26 () Real)
(declare-fun x43 () Real)
(declare-fun x16 () Real)
(declare-fun x33 () Real)
(assert (>= x6 0))
(assert (>= x23 0))
(assert (>= x40 0))
(assert (>= x13 0))
(assert (>= x30 0))
(assert (>= x3 0))
(assert (>= x20 0))
(assert (>= x37 0))
(assert (>= x10 0))
(assert (>= x27 0))
(assert (>= x44 0))
(assert (>= x0 0))
(assert (>= x17 0))
(assert (>= x34 0))
(assert (>= x7 0))
(assert (>= x24 0))
(assert (>= x41 0))
(assert (>= x14 0))
(assert (>= x31 0))
(assert (>= x4 0))
(assert (>= x21 0))
(assert (>= x38 0))
(assert (>= x11 0))
(assert (>= x28 0))
(assert (>= x1 0))
(assert (>= x18 0))
(assert (>= x35 0))
(assert (>= x8 0))
(assert (>= x25 0))
(assert (>= x42 0))
(assert (>= x15 0))
(assert (>= x32 0))
(assert (>= x5 0))
(assert (>= x22 0))
(assert (>= x39 0))
(assert (>= x12 0))
(assert (>= x29 0))
(assert (>= x2 0))
(assert (>= x19 0))
(assert (>= x36 0))
(assert (>= x9 0))
(assert (>= x26 0))
(assert (>= x43 0))
(assert (>= x16 0))
(assert (>= x33 0))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (not (<= (+ (* x3 x1) (* x4 x2)) 0)) (>= (+ (* x3 x1) (* x4 x2)) 0)) (and (>= (+ (* (- 1) x1) (* x1 x9) (* x11 x2)) 0) (>= (+ (* (- 1) x2) (* x10 x1) (* x12 x2)) 0))) (and (and (not (<= (+ (* x17 x4) (* x3 x16)) 0)) (>= (+ (* x17 x4) (* x3 x16)) 0)) (and (>= (+ (* (- 1) x16) (* x17 x11) (* x9 x16)) 0) (>= (+ (* (- 1) x17) (* x17 x12) (* x10 x16)) 0)))) (and (and (and (not (<= (+ (* (- 1) x0) x15 (* x17 x4) (* (- 1) (* x1 x18)) (* (- 1) (* x2 x19)) (* x3 x16) (* (- 1) (* x13 x3)) (* (- 1) (* x14 x4)) (* (- 1) (* x13 x10 x25)) (* (- 1) (* x13 x24 x9)) (* (- 1) (* x24 x14 x11)) (* (- 1) (* x14 x25 x12))) 0)) (>= (+ (* (- 1) x0) x15 (* x17 x4) (* (- 1) (* x1 x18)) (* (- 1) (* x2 x19)) (* x3 x16) (* (- 1) (* x13 x3)) (* (- 1) (* x14 x4)) (* (- 1) (* x13 x10 x25)) (* (- 1) (* x13 x24 x9)) (* (- 1) (* x24 x14 x11)) (* (- 1) (* x14 x25 x12))) 0)) (and (>= (+ (* x17 x11) (* x9 x16) (* (- 1) (* x20 x1)) (* (- 1) (* x22 x2))) 0) (>= (+ (* x17 x12) (* x10 x16) (* (- 1) (* x21 x1)) (* (- 1) (* x23 x2))) 0))) (and (>= (+ (* x17 x7) (* (- 1) (* x13 x5)) (* x5 x16) (* (- 1) (* x7 x14))) 0) (>= (+ (* x17 x8) (* (- 1) (* x14 x8)) (* x6 x16) (* (- 1) (* x6 x13))) 0)))) (and (and (not (<= (+ (* (- 1) x15) x26 (* x3 x27) (* x4 x28)) 0)) (>= (+ (* (- 1) x15) x26 (* x3 x27) (* x4 x28)) 0)) (and (>= (+ (* (- 1) x16) (* x27 x9) (* x11 x28)) 0) (>= (+ (* (- 1) x17) (* x28 x12) (* x10 x27)) 0)))) (and (and (not (<= (+ (* (- 1) (* x27 x18)) (* (- 1) (* x28 x19)) (* x3 x27) (* x4 x28)) 0)) (>= (+ (* (- 1) (* x27 x18)) (* (- 1) (* x28 x19)) (* x3 x27) (* x4 x28)) 0)) (and (>= (+ (* x27 x9) (* (- 1) (* x28 x22)) (* x11 x28) (* (- 1) (* x20 x27))) 0) (>= (+ (* x28 x12) (* (- 1) (* x27 x21)) (* x10 x27) (* (- 1) (* x23 x28))) 0)))) (and (and (not (<= (+ x29 (* x24 x31) (* x25 x32)) 0)) (and (>= (+ x29 (* x24 x31) (* x25 x32)) 0) (>= (+ x30 (* x34 x25) (* x24 x33)) 0))) (and (and (and (>= x35 1) (>= x36 0)) (>= x37 0)) (>= x38 1)))) (and (and (and (and (not (<= (+ (* (- 1) x3) x29 (* x3 x31) (* x4 x32) (* (- 1) (* x29 x9)) (* (- 1) (* x30 x10))) 0)) (and (>= (+ (* (- 1) x3) x29 (* x3 x31) (* x4 x32) (* (- 1) (* x29 x9)) (* (- 1) (* x30 x10))) 0) (>= (+ x30 (* (- 1) x4) (* x34 x4) (* (- 1) (* x11 x29)) (* x3 x33) (* (- 1) (* x30 x12))) 0))) (and (and (and (>= (+ (* (- 1) (* x10 x33)) (* x11 x32)) 0) (>= (+ (* x32 x12) (* (- 1) (* x10 x34)) (* x10 x31) (* (- 1) (* x32 x9))) 0)) (>= (+ (* x34 x11) (* (- 1) (* x12 x33)) (* x9 x33) (* (- 1) (* x31 x11))) 0)) (>= (+ (* x10 x33) (* (- 1) (* x11 x32))) 0))) (and (and (and (>= (+ x35 (* (- 1) (* x35 x9)) (* (- 1) (* x37 x10))) 0) (>= (+ x36 (* (- 1) (* x10 x38)) (* (- 1) (* x36 x9))) 0)) (>= (+ x37 (* (- 1) (* x11 x35)) (* (- 1) (* x37 x12))) 0)) (>= (+ x38 (* (- 1) (* x11 x36)) (* (- 1) (* x38 x12))) 0))) (and (and (and (>= (+ (* (- 1) x5) (* x31 x5) (* x7 x32)) 0) (>= (+ (* (- 1) x6) (* x6 x31) (* x8 x32)) 0)) (>= (+ (* (- 1) x7) (* x34 x7) (* x5 x33)) 0)) (>= (+ (* (- 1) x8) (* x34 x8) (* x6 x33)) 0)))) (and (not (<= (+ (* (- 1) x24) x18 (* x20 x24) (* x21 x25)) 0)) (and (>= (+ (* (- 1) x24) x18 (* x20 x24) (* x21 x25)) 0) (>= (+ (* (- 1) x25) x19 (* x23 x25) (* x24 x22)) 0)))) (and (and (and (not (<= (+ x18 (* (- 1) x29) (* (- 1) (* x31 x18)) (* (- 1) (* x32 x19)) (* x3 x20) (* x4 x21) (* (- 1) (* x3 x35)) (* (- 1) (* x4 x36)) (* (- 1) (* x10 x35 x25)) (* (- 1) (* x24 x35 x9)) (* (- 1) (* x24 x11 x36)) (* (- 1) (* x25 x12 x36))) 0)) (and (>= (+ x18 (* (- 1) x29) (* (- 1) (* x31 x18)) (* (- 1) (* x32 x19)) (* x3 x20) (* x4 x21) (* (- 1) (* x3 x35)) (* (- 1) (* x4 x36)) (* (- 1) (* x10 x35 x25)) (* (- 1) (* x24 x35 x9)) (* (- 1) (* x24 x11 x36)) (* (- 1) (* x25 x12 x36))) 0) (>= (+ (* (- 1) x30) x19 (* x23 x4) (* (- 1) (* x34 x19)) (* x3 x22) (* (- 1) (* x18 x33)) (* (- 1) (* x3 x37)) (* (- 1) (* x4 x38)) (* (- 1) (* x37 x10 x25)) (* (- 1) (* x37 x24 x9)) (* (- 1) (* x24 x38 x11)) (* (- 1) (* x38 x25 x12))) 0))) (and (and (and (>= (+ (* x20 x9) (* x21 x11) (* (- 1) (* x32 x22)) (* (- 1) (* x20 x31))) 0) (>= (+ (* x20 x10) (* x21 x12) (* (- 1) (* x31 x21)) (* (- 1) (* x23 x32))) 0)) (>= (+ (* x22 x9) (* x23 x11) (* (- 1) (* x34 x22)) (* (- 1) (* x20 x33))) 0)) (>= (+ (* x23 x12) (* x10 x22) (* (- 1) (* x21 x33)) (* (- 1) (* x23 x34))) 0))) (and (and (and (>= (+ (* x20 x5) (* (- 1) (* x35 x5)) (* x7 x21) (* (- 1) (* x7 x36))) 0) (>= (+ (* x21 x8) (* x6 x20) (* (- 1) (* x6 x35)) (* (- 1) (* x8 x36))) 0)) (>= (+ (* x23 x7) (* (- 1) (* x37 x5)) (* x5 x22) (* (- 1) (* x7 x38))) 0)) (>= (+ (* x23 x8) (* (- 1) (* x38 x8)) (* x6 x22) (* (- 1) (* x6 x37))) 0)))) (and (not (<= (+ (* (- 1) x24) x39 (* x24 x41) (* x25 x42)) 0)) (and (>= (+ (* (- 1) x24) x39 (* x24 x41) (* x25 x42)) 0) (>= (+ x40 (* (- 1) x25) (* x44 x25) (* x24 x43)) 0)))) (and (and (and (not (<= (+ (* (- 1) x3) x39 (* x3 x41) (* x4 x42) (* (- 1) (* x39 x9)) (* (- 1) (* x40 x10)) (* (- 1) (* x41 x18 x9)) (* (- 1) (* x42 x19 x9)) (* (- 1) (* x10 x44 x19)) (* (- 1) (* x10 x18 x43))) 0)) (and (>= (+ (* (- 1) x3) x39 (* x3 x41) (* x4 x42) (* (- 1) (* x39 x9)) (* (- 1) (* x40 x10)) (* (- 1) (* x41 x18 x9)) (* (- 1) (* x42 x19 x9)) (* (- 1) (* x10 x44 x19)) (* (- 1) (* x10 x18 x43))) 0) (>= (+ x40 (* (- 1) x4) (* x44 x4) (* x3 x43) (* (- 1) (* x11 x39)) (* (- 1) (* x40 x12)) (* (- 1) (* x41 x11 x18)) (* (- 1) (* x11 x42 x19)) (* (- 1) (* x44 x12 x19)) (* (- 1) (* x18 x12 x43))) 0))) (and (and (and (>= (+ (* x41 x9) (* x11 x42) (* (- 1) (* x42 x22 x9)) (* (- 1) (* x20 x41 x9)) (* (- 1) (* x10 x44 x22)) (* (- 1) (* x20 x10 x43))) 0) (>= (+ (* x42 x12) (* x10 x41) (* (- 1) (* x41 x21 x9)) (* (- 1) (* x23 x42 x9)) (* (- 1) (* x10 x21 x43)) (* (- 1) (* x23 x10 x44))) 0)) (>= (+ (* x44 x11) (* x9 x43) (* (- 1) (* x11 x42 x22)) (* (- 1) (* x20 x41 x11)) (* (- 1) (* x44 x22 x12)) (* (- 1) (* x20 x12 x43))) 0)) (>= (+ (* x44 x12) (* x10 x43) (* (- 1) (* x41 x21 x11)) (* (- 1) (* x23 x11 x42)) (* (- 1) (* x21 x12 x43)) (* (- 1) (* x23 x44 x12))) 0))) (and (and (and (>= (+ (* (- 1) x5) (* x41 x5) (* x7 x42)) 0) (>= (+ (* (- 1) x6) (* x6 x41) (* x8 x42)) 0)) (>= (+ (* (- 1) x7) (* x44 x7) (* x5 x43)) 0)) (>= (+ (* (- 1) x8) (* x44 x8) (* x6 x43)) 0)))) (and (and (and (and (and (and (not (<= (+ (* x3 x1) (* x4 x2)) 0)) (>= (+ (* x3 x1) (* x4 x2)) 0)) (and (>= (+ (* (- 1) x1) (* x1 x9) (* x11 x2)) 0) (>= (+ (* (- 1) x2) (* x10 x1) (* x12 x2)) 0))) (and (and (not (<= (+ (* x17 x4) (* x3 x16)) 0)) (>= (+ (* x17 x4) (* x3 x16)) 0)) (and (>= (+ (* (- 1) x16) (* x17 x11) (* x9 x16)) 0) (>= (+ (* (- 1) x17) (* x17 x12) (* x10 x16)) 0)))) (and (and (and (not (<= (+ (* (- 1) x0) x15 (* x17 x4) (* (- 1) (* x1 x18)) (* (- 1) (* x2 x19)) (* x3 x16) (* (- 1) (* x13 x3)) (* (- 1) (* x14 x4)) (* (- 1) (* x13 x10 x25)) (* (- 1) (* x13 x24 x9)) (* (- 1) (* x24 x14 x11)) (* (- 1) (* x14 x25 x12))) 0)) (>= (+ (* (- 1) x0) x15 (* x17 x4) (* (- 1) (* x1 x18)) (* (- 1) (* x2 x19)) (* x3 x16) (* (- 1) (* x13 x3)) (* (- 1) (* x14 x4)) (* (- 1) (* x13 x10 x25)) (* (- 1) (* x13 x24 x9)) (* (- 1) (* x24 x14 x11)) (* (- 1) (* x14 x25 x12))) 0)) (and (>= (+ (* x17 x11) (* x9 x16) (* (- 1) (* x20 x1)) (* (- 1) (* x22 x2))) 0) (>= (+ (* x17 x12) (* x10 x16) (* (- 1) (* x21 x1)) (* (- 1) (* x23 x2))) 0))) (and (>= (+ (* x17 x7) (* (- 1) (* x13 x5)) (* x5 x16) (* (- 1) (* x7 x14))) 0) (>= (+ (* x17 x8) (* (- 1) (* x14 x8)) (* x6 x16) (* (- 1) (* x6 x13))) 0)))) (and (and (not (<= (+ (* (- 1) x15) x26 (* x3 x27) (* x4 x28)) 0)) (>= (+ (* (- 1) x15) x26 (* x3 x27) (* x4 x28)) 0)) (and (>= (+ (* (- 1) x16) (* x27 x9) (* x11 x28)) 0) (>= (+ (* (- 1) x17) (* x28 x12) (* x10 x27)) 0)))) (and (and (not (<= (+ (* (- 1) (* x27 x18)) (* (- 1) (* x28 x19)) (* x3 x27) (* x4 x28)) 0)) (>= (+ (* (- 1) (* x27 x18)) (* (- 1) (* x28 x19)) (* x3 x27) (* x4 x28)) 0)) (and (>= (+ (* x27 x9) (* (- 1) (* x28 x22)) (* x11 x28) (* (- 1) (* x20 x27))) 0) (>= (+ (* x28 x12) (* (- 1) (* x27 x21)) (* x10 x27) (* (- 1) (* x23 x28))) 0))))))
(exit)
(check-sat)
