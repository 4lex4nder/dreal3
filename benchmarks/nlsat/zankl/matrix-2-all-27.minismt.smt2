(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x6 () Real)
(declare-fun x23 () Real)
(declare-fun x13 () Real)
(declare-fun x30 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x10 () Real)
(declare-fun x27 () Real)
(declare-fun x0 () Real)
(declare-fun x17 () Real)
(declare-fun x7 () Real)
(declare-fun x24 () Real)
(declare-fun x14 () Real)
(declare-fun x31 () Real)
(declare-fun x4 () Real)
(declare-fun x21 () Real)
(declare-fun x11 () Real)
(declare-fun x28 () Real)
(declare-fun x1 () Real)
(declare-fun x18 () Real)
(declare-fun x8 () Real)
(declare-fun x25 () Real)
(declare-fun x15 () Real)
(declare-fun x5 () Real)
(declare-fun x22 () Real)
(declare-fun x12 () Real)
(declare-fun x29 () Real)
(declare-fun x2 () Real)
(declare-fun x19 () Real)
(declare-fun x9 () Real)
(declare-fun x26 () Real)
(declare-fun x16 () Real)
(assert (>= x6 0))
(assert (>= x23 0))
(assert (>= x13 0))
(assert (>= x30 0))
(assert (>= x3 0))
(assert (>= x20 0))
(assert (>= x10 0))
(assert (>= x27 0))
(assert (>= x0 0))
(assert (>= x17 0))
(assert (>= x7 0))
(assert (>= x24 0))
(assert (>= x14 0))
(assert (>= x31 0))
(assert (>= x4 0))
(assert (>= x21 0))
(assert (>= x11 0))
(assert (>= x28 0))
(assert (>= x1 0))
(assert (>= x18 0))
(assert (>= x8 0))
(assert (>= x25 0))
(assert (>= x15 0))
(assert (>= x5 0))
(assert (>= x22 0))
(assert (>= x12 0))
(assert (>= x29 0))
(assert (>= x2 0))
(assert (>= x19 0))
(assert (>= x9 0))
(assert (>= x26 0))
(assert (>= x16 0))
(assert (and (and (and (and (and (and (and (and (and (and (and (not (<= (+ x0 (* (- 1) x5)) 0)) (>= (+ x0 (* (- 1) x5)) 0)) (and (>= (+ (* (- 1) x6) x3 x1) 0) (>= (+ (* (- 1) x7) x4 x2) 0))) (and (and (not (<= (+ x0 (* (- 1) x5) (* (- 1) (* x6 x8)) (* (- 1) (* x7 x9))) 0)) (>= (+ x0 (* (- 1) x5) (* (- 1) (* x6 x8)) (* (- 1) (* x7 x9))) 0)) (and (>= (+ x3 x1 (* (- 1) (* x6 x10)) (* (- 1) (* x7 x12))) 0) (>= (+ x4 x2 (* (- 1) (* x6 x11)) (* (- 1) (* x13 x7))) 0)))) (and (and (not (<= (+ (* (- 1) (* x14 x1)) (* (- 1) (* x15 x2)) (* (- 1) (* x3 x8)) (* (- 1) (* x4 x9)) (* (- 1) (* x3 x10 x8)) (* (- 1) (* x3 x11 x9)) (* (- 1) (* x13 x4 x9)) (* (- 1) (* x4 x8 x12))) 0)) (>= (+ (* (- 1) (* x14 x1)) (* (- 1) (* x15 x2)) (* (- 1) (* x3 x8)) (* (- 1) (* x4 x9)) (* (- 1) (* x3 x10 x8)) (* (- 1) (* x3 x11 x9)) (* (- 1) (* x13 x4 x9)) (* (- 1) (* x4 x8 x12))) 0)) (and (>= (+ x3 x1 (* (- 1) (* x1 x16)) (* (- 1) (* x18 x2)) (* (- 1) (* x3 x10 x10)) (* (- 1) (* x3 x11 x12)) (* (- 1) (* x13 x4 x12)) (* (- 1) (* x10 x4 x12))) 0) (>= (+ x4 x2 (* (- 1) (* x2 x19)) (* (- 1) (* x17 x1)) (* (- 1) (* x3 x10 x11)) (* (- 1) (* x13 x3 x11)) (* (- 1) (* x4 x11 x12)) (* (- 1) (* x13 x13 x4))) 0)))) (and (and (not (<= (+ (* x3 x14) (* x4 x15)) 0)) (>= (+ (* x3 x14) (* x4 x15)) 0)) (and (>= (+ (* (- 1) x3) (* x3 x16) (* x4 x18)) 0) (>= (+ (* (- 1) x4) (* x3 x17) (* x4 x19)) 0)))) (and (and (not (<= (+ (* (- 1) (* x23 x15)) (* (- 1) (* x14 x22)) (* (- 1) (* x8 x26)) (* (- 1) (* x27 x9)) (* (- 1) (* x10 x8 x26)) (* (- 1) (* x11 x9 x26)) (* (- 1) (* x13 x27 x9)) (* (- 1) (* x27 x8 x12))) 0)) (and (>= (+ (* (- 1) (* x23 x15)) (* (- 1) (* x14 x22)) (* (- 1) (* x8 x26)) (* (- 1) (* x27 x9)) (* (- 1) (* x10 x8 x26)) (* (- 1) (* x11 x9 x26)) (* (- 1) (* x13 x27 x9)) (* (- 1) (* x27 x8 x12))) 0) (>= (+ (* (- 1) (* x24 x14)) (* (- 1) (* x25 x15)) (* (- 1) (* x28 x8)) (* (- 1) (* x29 x9)) (* (- 1) (* x10 x28 x8)) (* (- 1) (* x11 x28 x9)) (* (- 1) (* x13 x29 x9)) (* (- 1) (* x8 x12 x29))) 0))) (and (and (and (>= (+ x22 x26 (* (- 1) (* x22 x16)) (* (- 1) (* x23 x18)) (* (- 1) (* x10 x10 x26)) (* (- 1) (* x11 x12 x26)) (* (- 1) (* x13 x27 x12)) (* (- 1) (* x10 x27 x12))) 0) (>= (+ x23 x27 (* (- 1) (* x23 x19)) (* (- 1) (* x17 x22)) (* (- 1) (* x10 x11 x26)) (* (- 1) (* x13 x11 x26)) (* (- 1) (* x27 x11 x12)) (* (- 1) (* x13 x13 x27))) 0)) (>= (+ x24 x28 (* (- 1) (* x24 x16)) (* (- 1) (* x18 x25)) (* (- 1) (* x10 x10 x28)) (* (- 1) (* x11 x28 x12)) (* (- 1) (* x13 x12 x29)) (* (- 1) (* x10 x12 x29))) 0)) (>= (+ x25 x29 (* (- 1) (* x25 x19)) (* (- 1) (* x17 x24)) (* (- 1) (* x10 x11 x28)) (* (- 1) (* x13 x11 x28)) (* (- 1) (* x11 x12 x29)) (* (- 1) (* x13 x13 x29))) 0)))) (and (and (not (<= x20 0)) (and (>= x20 0) (>= x21 0))) (and (and (and (>= x22 1) (>= x23 0)) (>= x24 0)) (>= x25 1)))) (and (and (not (<= (+ (* (- 1) x14) x8) 0)) (and (>= (+ (* (- 1) x14) x8) 0) (>= (+ (* (- 1) x15) x9) 0))) (and (and (and (>= (+ x10 (* (- 1) x16)) 0) (>= (+ (* (- 1) x17) x11) 0)) (>= (+ (* (- 1) x18) x12) 0)) (>= (+ x13 (* (- 1) x19)) 0)))) (and (and (not (<= (+ (* x27 x15) (* x14 x26)) 0)) (and (>= (+ (* x27 x15) (* x14 x26)) 0) (>= (+ (* x14 x28) (* x15 x29)) 0))) (and (and (and (>= (+ (* (- 1) x26) (* x26 x16) (* x27 x18)) 0) (>= (+ (* (- 1) x27) (* x27 x19) (* x17 x26)) 0)) (>= (+ (* (- 1) x28) (* x28 x16) (* x18 x29)) 0)) (>= (+ (* (- 1) x29) (* x29 x19) (* x17 x28)) 0)))) (and (not (<= (+ (* (- 1) x30) x20 (* x23 x15) (* x27 x15) (* x14 x22) (* x14 x26) (* x17 x9 x26) (* x8 x26 x16) (* x27 x18 x8) (* x27 x19 x9)) 0)) (and (>= (+ (* (- 1) x30) x20 (* x23 x15) (* x27 x15) (* x14 x22) (* x14 x26) (* x17 x9 x26) (* x8 x26 x16) (* x27 x18 x8) (* x27 x19 x9)) 0) (>= (+ (* (- 1) x31) x21 (* x24 x14) (* x25 x15) (* x14 x28) (* x15 x29) (* x17 x28 x9) (* x28 x8 x16) (* x18 x8 x29) (* x29 x19 x9)) 0)))) (and (and (and (and (and (not (<= (+ x0 (* (- 1) x5)) 0)) (>= (+ x0 (* (- 1) x5)) 0)) (and (>= (+ (* (- 1) x6) x3 x1) 0) (>= (+ (* (- 1) x7) x4 x2) 0))) (and (and (not (<= (+ x0 (* (- 1) x5) (* (- 1) (* x6 x8)) (* (- 1) (* x7 x9))) 0)) (>= (+ x0 (* (- 1) x5) (* (- 1) (* x6 x8)) (* (- 1) (* x7 x9))) 0)) (and (>= (+ x3 x1 (* (- 1) (* x6 x10)) (* (- 1) (* x7 x12))) 0) (>= (+ x4 x2 (* (- 1) (* x6 x11)) (* (- 1) (* x13 x7))) 0)))) (and (and (not (<= (+ (* (- 1) (* x14 x1)) (* (- 1) (* x15 x2)) (* (- 1) (* x3 x8)) (* (- 1) (* x4 x9)) (* (- 1) (* x3 x10 x8)) (* (- 1) (* x3 x11 x9)) (* (- 1) (* x13 x4 x9)) (* (- 1) (* x4 x8 x12))) 0)) (>= (+ (* (- 1) (* x14 x1)) (* (- 1) (* x15 x2)) (* (- 1) (* x3 x8)) (* (- 1) (* x4 x9)) (* (- 1) (* x3 x10 x8)) (* (- 1) (* x3 x11 x9)) (* (- 1) (* x13 x4 x9)) (* (- 1) (* x4 x8 x12))) 0)) (and (>= (+ x3 x1 (* (- 1) (* x1 x16)) (* (- 1) (* x18 x2)) (* (- 1) (* x3 x10 x10)) (* (- 1) (* x3 x11 x12)) (* (- 1) (* x13 x4 x12)) (* (- 1) (* x10 x4 x12))) 0) (>= (+ x4 x2 (* (- 1) (* x2 x19)) (* (- 1) (* x17 x1)) (* (- 1) (* x3 x10 x11)) (* (- 1) (* x13 x3 x11)) (* (- 1) (* x4 x11 x12)) (* (- 1) (* x13 x13 x4))) 0)))) (and (and (not (<= (+ (* x3 x14) (* x4 x15)) 0)) (>= (+ (* x3 x14) (* x4 x15)) 0)) (and (>= (+ (* (- 1) x3) (* x3 x16) (* x4 x18)) 0) (>= (+ (* (- 1) x4) (* x3 x17) (* x4 x19)) 0))))))
(exit)
(check-sat)
