(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun x6 () Real)
(declare-fun x23 () Real)
(declare-fun x40 () Real)
(declare-fun x13 () Real)
(declare-fun x30 () Real)
(declare-fun x47 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x37 () Real)
(declare-fun x54 () Real)
(declare-fun x10 () Real)
(declare-fun x27 () Real)
(declare-fun x44 () Real)
(declare-fun x0 () Real)
(declare-fun x17 () Real)
(declare-fun x34 () Real)
(declare-fun x51 () Real)
(declare-fun x7 () Real)
(declare-fun x24 () Real)
(declare-fun x41 () Real)
(declare-fun x14 () Real)
(declare-fun x31 () Real)
(declare-fun x48 () Real)
(declare-fun x4 () Real)
(declare-fun x21 () Real)
(declare-fun x38 () Real)
(declare-fun x55 () Real)
(declare-fun x11 () Real)
(declare-fun x28 () Real)
(declare-fun x45 () Real)
(declare-fun x1 () Real)
(declare-fun x18 () Real)
(declare-fun x35 () Real)
(declare-fun x52 () Real)
(declare-fun x8 () Real)
(declare-fun x25 () Real)
(declare-fun x42 () Real)
(declare-fun x15 () Real)
(declare-fun x32 () Real)
(declare-fun x49 () Real)
(declare-fun x5 () Real)
(declare-fun x22 () Real)
(declare-fun x39 () Real)
(declare-fun x56 () Real)
(declare-fun x12 () Real)
(declare-fun x29 () Real)
(declare-fun x46 () Real)
(declare-fun x2 () Real)
(declare-fun x19 () Real)
(declare-fun x36 () Real)
(declare-fun x53 () Real)
(declare-fun x9 () Real)
(declare-fun x26 () Real)
(declare-fun x43 () Real)
(declare-fun x16 () Real)
(declare-fun x33 () Real)
(declare-fun x50 () Real)
(assert (>= x6 0))
(assert (>= x23 0))
(assert (>= x40 0))
(assert (>= x13 0))
(assert (>= x30 0))
(assert (>= x47 0))
(assert (>= x3 0))
(assert (>= x20 0))
(assert (>= x37 0))
(assert (>= x54 0))
(assert (>= x10 0))
(assert (>= x27 0))
(assert (>= x44 0))
(assert (>= x0 0))
(assert (>= x17 0))
(assert (>= x34 0))
(assert (>= x51 0))
(assert (>= x7 0))
(assert (>= x24 0))
(assert (>= x41 0))
(assert (>= x14 0))
(assert (>= x31 0))
(assert (>= x48 0))
(assert (>= x4 0))
(assert (>= x21 0))
(assert (>= x38 0))
(assert (>= x55 0))
(assert (>= x11 0))
(assert (>= x28 0))
(assert (>= x45 0))
(assert (>= x1 0))
(assert (>= x18 0))
(assert (>= x35 0))
(assert (>= x52 0))
(assert (>= x8 0))
(assert (>= x25 0))
(assert (>= x42 0))
(assert (>= x15 0))
(assert (>= x32 0))
(assert (>= x49 0))
(assert (>= x5 0))
(assert (>= x22 0))
(assert (>= x39 0))
(assert (>= x56 0))
(assert (>= x12 0))
(assert (>= x29 0))
(assert (>= x46 0))
(assert (>= x2 0))
(assert (>= x19 0))
(assert (>= x36 0))
(assert (>= x53 0))
(assert (>= x9 0))
(assert (>= x26 0))
(assert (>= x43 0))
(assert (>= x16 0))
(assert (>= x33 0))
(assert (>= x50 0))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (not (<= (+ x0 (* (- 1) x9) (* x3 x1) (* x4 x2)) 0)) (>= (+ x0 (* (- 1) x9) (* x3 x1) (* x4 x2)) 0)) (and (>= (+ (* (- 1) x10) x5) 0) (>= (+ x6 (* (- 1) x11)) 0))) (and (and (and (not (<= (+ x0 (* (- 1) x12) (* x3 x1) (* x4 x2)) 0)) (>= (+ x0 (* (- 1) x12) (* x3 x1) (* x4 x2)) 0)) (and (>= (+ (* (- 1) x13) x5) 0) (>= (+ x6 (* (- 1) x14)) 0))) (and (>= (+ x7 (* (- 1) x15)) 0) (>= (+ x8 (* (- 1) x16)) 0)))) (and (and (and (not (<= (+ (* (- 1) (* x6 x28)) (* (- 1) (* x7 x33)) (* x3 x1) (* x4 x2) (* (- 1) (* x17 x1)) (* (- 1) (* x18 x2)) (* (- 1) (* x27 x5)) (* (- 1) (* x34 x8))) 0)) (>= (+ (* (- 1) (* x6 x28)) (* (- 1) (* x7 x33)) (* x3 x1) (* x4 x2) (* (- 1) (* x17 x1)) (* (- 1) (* x18 x2)) (* (- 1) (* x27 x5)) (* (- 1) (* x34 x8))) 0)) (and (>= (+ x5 (* (- 1) (* x1 x19)) (* (- 1) (* x5 x29)) (* (- 1) (* x6 x31)) (* (- 1) (* x21 x2))) 0) (>= (+ x6 (* (- 1) (* x6 x32)) (* (- 1) (* x20 x1)) (* (- 1) (* x22 x2)) (* (- 1) (* x30 x5))) 0))) (and (>= (+ x7 (* (- 1) (* x7 x35)) (* (- 1) (* x23 x1)) (* (- 1) (* x25 x2)) (* (- 1) (* x37 x8))) 0) (>= (+ x8 (* (- 1) (* x2 x26)) (* (- 1) (* x7 x36)) (* (- 1) (* x24 x1)) (* (- 1) (* x38 x8))) 0)))) (and (and (and (not (<= (+ (* x13 x33) (* x15 x33) (* x34 x14) (* x34 x16)) 0)) (>= (+ (* x13 x33) (* x15 x33) (* x34 x14) (* x34 x16)) 0)) (and (>= (+ (* (- 1) x13) (* x13 x35) (* x37 x14)) 0) (>= (+ (* (- 1) x14) (* x13 x36) (* x14 x38)) 0))) (and (>= (+ (* (- 1) x15) (* x35 x15) (* x37 x16)) 0) (>= (+ (* (- 1) x16) (* x15 x36) (* x38 x16)) 0)))) (and (and (and (not (<= (+ (* (- 1) (* x49 x33)) (* x3 x41) (* x4 x42) (* (- 1) (* x17 x41)) (* (- 1) (* x18 x42)) (* (- 1) (* x27 x45)) (* (- 1) (* x28 x46)) (* (- 1) (* x34 x50))) 0)) (and (>= (+ (* (- 1) (* x49 x33)) (* x3 x41) (* x4 x42) (* (- 1) (* x17 x41)) (* (- 1) (* x18 x42)) (* (- 1) (* x27 x45)) (* (- 1) (* x28 x46)) (* (- 1) (* x34 x50))) 0) (>= (+ (* x44 x4) (* (- 1) (* x44 x18)) (* (- 1) (* x47 x27)) (* (- 1) (* x48 x28)) (* (- 1) (* x51 x33)) (* x3 x43) (* (- 1) (* x17 x43)) (* (- 1) (* x34 x52))) 0))) (and (and (and (>= (+ x45 (* (- 1) (* x41 x19)) (* (- 1) (* x45 x29)) (* (- 1) (* x21 x42)) (* (- 1) (* x31 x46))) 0) (>= (+ x46 (* (- 1) (* x42 x22)) (* (- 1) (* x20 x41)) (* (- 1) (* x30 x45)) (* (- 1) (* x32 x46))) 0)) (>= (+ x47 (* (- 1) (* x44 x21)) (* (- 1) (* x47 x29)) (* (- 1) (* x19 x43)) (* (- 1) (* x31 x48))) 0)) (>= (+ x48 (* (- 1) (* x44 x22)) (* (- 1) (* x48 x32)) (* (- 1) (* x20 x43)) (* (- 1) (* x30 x47))) 0))) (and (and (and (>= (+ x49 (* (- 1) (* x23 x41)) (* (- 1) (* x25 x42)) (* (- 1) (* x35 x49)) (* (- 1) (* x37 x50))) 0) (>= (+ x50 (* (- 1) (* x42 x26)) (* (- 1) (* x49 x36)) (* (- 1) (* x24 x41)) (* (- 1) (* x38 x50))) 0)) (>= (+ x51 (* (- 1) (* x44 x25)) (* (- 1) (* x51 x35)) (* (- 1) (* x23 x43)) (* (- 1) (* x37 x52))) 0)) (>= (+ x52 (* (- 1) (* x44 x26)) (* (- 1) (* x51 x36)) (* (- 1) (* x24 x43)) (* (- 1) (* x38 x52))) 0)))) (and (not (<= (+ x17 (* (- 1) x55) (* x19 x53) (* x20 x54)) 0)) (and (>= (+ x17 (* (- 1) x55) (* x19 x53) (* x20 x54)) 0) (>= (+ x18 (* (- 1) x56) (* x21 x53) (* x54 x22)) 0)))) (and (not (<= (+ (* (- 1) x3) x17 (* x19 x33) (* x20 x34) (* x23 x53) (* x54 x24)) 0)) (and (>= (+ (* (- 1) x3) x17 (* x19 x33) (* x20 x34) (* x23 x53) (* x54 x24)) 0) (>= (+ (* (- 1) x4) x18 (* x21 x33) (* x25 x53) (* x34 x22) (* x54 x26)) 0)))) (and (and (and (not (<= (+ (* x19 x33) (* x20 x34) (* x23 x33) (* x34 x24)) 0)) (and (>= (+ (* x19 x33) (* x20 x34) (* x23 x33) (* x34 x24)) 0) (>= (+ (* x21 x33) (* x25 x33) (* x34 x22) (* x34 x26)) 0))) (and (and (and (>= (+ (* (- 1) x19) (* x20 x37) (* x35 x19)) 0) (>= (+ (* (- 1) x20) (* x19 x36) (* x20 x38)) 0)) (>= (+ (* (- 1) x21) (* x21 x35) (* x37 x22)) 0)) (>= (+ (* (- 1) x22) (* x21 x36) (* x38 x22)) 0))) (and (and (and (>= (+ (* (- 1) x23) (* x23 x35) (* x37 x24)) 0) (>= (+ (* (- 1) x24) (* x23 x36) (* x24 x38)) 0)) (>= (+ (* (- 1) x25) (* x35 x25) (* x37 x26)) 0)) (>= (+ (* (- 1) x26) (* x25 x36) (* x38 x26)) 0)))) (and (not (<= (+ x27 (* (- 1) x53) (* x29 x53) (* x30 x54)) 0)) (and (>= (+ x27 (* (- 1) x53) (* x29 x53) (* x30 x54)) 0) (>= (+ (* (- 1) x54) x28 (* x31 x53) (* x54 x32)) 0)))) (and (and (not (<= (+ x27 (* x29 x33) (* x30 x34)) 0)) (and (>= (+ x27 (* x29 x33) (* x30 x34)) 0) (>= (+ x28 (* x31 x33) (* x34 x32)) 0))) (and (and (and (>= (+ (* x30 x37) (* x35 x29)) 1) (>= (+ (* x29 x36) (* x30 x38)) 0)) (>= (+ (* x31 x35) (* x37 x32)) 0)) (>= (+ (* x31 x36) (* x38 x32)) 1)))) (and (and (and (and (and (not (<= (+ x0 (* (- 1) x9) (* x3 x1) (* x4 x2)) 0)) (>= (+ x0 (* (- 1) x9) (* x3 x1) (* x4 x2)) 0)) (and (>= (+ (* (- 1) x10) x5) 0) (>= (+ x6 (* (- 1) x11)) 0))) (and (and (and (not (<= (+ x0 (* (- 1) x12) (* x3 x1) (* x4 x2)) 0)) (>= (+ x0 (* (- 1) x12) (* x3 x1) (* x4 x2)) 0)) (and (>= (+ (* (- 1) x13) x5) 0) (>= (+ x6 (* (- 1) x14)) 0))) (and (>= (+ x7 (* (- 1) x15)) 0) (>= (+ x8 (* (- 1) x16)) 0)))) (and (and (and (not (<= (+ (* (- 1) (* x6 x28)) (* (- 1) (* x7 x33)) (* x3 x1) (* x4 x2) (* (- 1) (* x17 x1)) (* (- 1) (* x18 x2)) (* (- 1) (* x27 x5)) (* (- 1) (* x34 x8))) 0)) (>= (+ (* (- 1) (* x6 x28)) (* (- 1) (* x7 x33)) (* x3 x1) (* x4 x2) (* (- 1) (* x17 x1)) (* (- 1) (* x18 x2)) (* (- 1) (* x27 x5)) (* (- 1) (* x34 x8))) 0)) (and (>= (+ x5 (* (- 1) (* x1 x19)) (* (- 1) (* x5 x29)) (* (- 1) (* x6 x31)) (* (- 1) (* x21 x2))) 0) (>= (+ x6 (* (- 1) (* x6 x32)) (* (- 1) (* x20 x1)) (* (- 1) (* x22 x2)) (* (- 1) (* x30 x5))) 0))) (and (>= (+ x7 (* (- 1) (* x7 x35)) (* (- 1) (* x23 x1)) (* (- 1) (* x25 x2)) (* (- 1) (* x37 x8))) 0) (>= (+ x8 (* (- 1) (* x2 x26)) (* (- 1) (* x7 x36)) (* (- 1) (* x24 x1)) (* (- 1) (* x38 x8))) 0)))) (and (and (and (not (<= (+ (* x13 x33) (* x15 x33) (* x34 x14) (* x34 x16)) 0)) (>= (+ (* x13 x33) (* x15 x33) (* x34 x14) (* x34 x16)) 0)) (and (>= (+ (* (- 1) x13) (* x13 x35) (* x37 x14)) 0) (>= (+ (* (- 1) x14) (* x13 x36) (* x14 x38)) 0))) (and (>= (+ (* (- 1) x15) (* x35 x15) (* x37 x16)) 0) (>= (+ (* (- 1) x16) (* x15 x36) (* x38 x16)) 0))))))
(exit)
(check-sat)
