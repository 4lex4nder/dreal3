(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun x6 () Real)
(declare-fun x23 () Real)
(declare-fun x40 () Real)
(declare-fun x13 () Real)
(declare-fun x30 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x37 () Real)
(declare-fun x10 () Real)
(declare-fun x27 () Real)
(declare-fun x44 () Real)
(declare-fun x0 () Real)
(declare-fun x17 () Real)
(declare-fun x34 () Real)
(declare-fun x7 () Real)
(declare-fun x24 () Real)
(declare-fun x41 () Real)
(declare-fun x14 () Real)
(declare-fun x31 () Real)
(declare-fun x4 () Real)
(declare-fun x21 () Real)
(declare-fun x38 () Real)
(declare-fun x11 () Real)
(declare-fun x28 () Real)
(declare-fun x1 () Real)
(declare-fun x18 () Real)
(declare-fun x35 () Real)
(declare-fun x8 () Real)
(declare-fun x25 () Real)
(declare-fun x42 () Real)
(declare-fun x15 () Real)
(declare-fun x32 () Real)
(declare-fun x5 () Real)
(declare-fun x22 () Real)
(declare-fun x39 () Real)
(declare-fun x12 () Real)
(declare-fun x29 () Real)
(declare-fun x2 () Real)
(declare-fun x19 () Real)
(declare-fun x36 () Real)
(declare-fun x9 () Real)
(declare-fun x26 () Real)
(declare-fun x43 () Real)
(declare-fun x16 () Real)
(declare-fun x33 () Real)
(assert (>= x6 0))
(assert (>= x23 0))
(assert (>= x40 0))
(assert (>= x13 0))
(assert (>= x30 0))
(assert (>= x3 0))
(assert (>= x20 0))
(assert (>= x37 0))
(assert (>= x10 0))
(assert (>= x27 0))
(assert (>= x44 0))
(assert (>= x0 0))
(assert (>= x17 0))
(assert (>= x34 0))
(assert (>= x7 0))
(assert (>= x24 0))
(assert (>= x41 0))
(assert (>= x14 0))
(assert (>= x31 0))
(assert (>= x4 0))
(assert (>= x21 0))
(assert (>= x38 0))
(assert (>= x11 0))
(assert (>= x28 0))
(assert (>= x1 0))
(assert (>= x18 0))
(assert (>= x35 0))
(assert (>= x8 0))
(assert (>= x25 0))
(assert (>= x42 0))
(assert (>= x15 0))
(assert (>= x32 0))
(assert (>= x5 0))
(assert (>= x22 0))
(assert (>= x39 0))
(assert (>= x12 0))
(assert (>= x29 0))
(assert (>= x2 0))
(assert (>= x19 0))
(assert (>= x36 0))
(assert (>= x9 0))
(assert (>= x26 0))
(assert (>= x43 0))
(assert (>= x16 0))
(assert (>= x33 0))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (not (<= (+ x0 (* (- 1) x7) (* x3 x1) (* x4 x2)) 0)) (>= (+ x0 (* (- 1) x7) (* x3 x1) (* x4 x2)) 0)) (and (>= (+ (* (- 1) x8) x5) 0) (>= (+ x6 (* (- 1) x9)) 0))) (and (and (not (<= (+ (* (- 1) x10) x0 (* x3 x1) (* x4 x2)) 0)) (>= (+ (* (- 1) x10) x0 (* x3 x1) (* x4 x2)) 0)) (and (>= (+ (* (- 1) x11) x5) 0) (>= (+ x6 (* (- 1) x12)) 0)))) (and (and (not (<= (+ (* (- 1) (* x5 x19)) (* (- 1) (* x6 x20)) (* x3 x1) (* x4 x2) (* (- 1) (* x13 x1)) (* (- 1) (* x14 x2))) 0)) (>= (+ (* (- 1) (* x5 x19)) (* (- 1) (* x6 x20)) (* x3 x1) (* x4 x2) (* (- 1) (* x13 x1)) (* (- 1) (* x14 x2))) 0)) (and (>= (+ x5 (* (- 1) (* x1 x15)) (* (- 1) (* x6 x23)) (* (- 1) (* x17 x2)) (* (- 1) (* x21 x5))) 0) (>= (+ x6 (* (- 1) (* x1 x16)) (* (- 1) (* x5 x22)) (* (- 1) (* x6 x24)) (* (- 1) (* x18 x2))) 0)))) (and (and (not (<= (+ (* x11 x25) (* x12 x26) (* x27 x11 x25) (* x11 x28 x26) (* x30 x12 x26) (* x25 x12 x29)) 0)) (>= (+ (* x11 x25) (* x12 x26) (* x27 x11 x25) (* x11 x28 x26) (* x30 x12 x26) (* x25 x12 x29)) 0)) (and (>= (+ (* (- 1) x11) (* x27 x27 x11) (* x11 x28 x29) (* x30 x12 x29) (* x27 x12 x29)) 0) (>= (+ (* (- 1) x12) (* x27 x11 x28) (* x30 x11 x28) (* x28 x12 x29) (* x30 x30 x12)) 0)))) (and (and (not (<= (+ (* (- 1) (* x34 x14)) (* (- 1) (* x37 x19)) (* x34 x4) (* x3 x33) (* (- 1) (* x13 x33)) (* (- 1) (* x20 x38))) 0)) (and (>= (+ (* (- 1) (* x34 x14)) (* (- 1) (* x37 x19)) (* x34 x4) (* x3 x33) (* (- 1) (* x13 x33)) (* (- 1) (* x20 x38))) 0) (>= (+ (* (- 1) (* x39 x19)) (* (- 1) (* x40 x20)) (* x3 x35) (* x4 x36) (* (- 1) (* x13 x35)) (* (- 1) (* x14 x36))) 0))) (and (and (and (>= (+ x37 (* (- 1) (* x37 x21)) (* (- 1) (* x15 x33)) (* (- 1) (* x17 x34)) (* (- 1) (* x23 x38))) 0) (>= (+ x38 (* (- 1) (* x34 x18)) (* (- 1) (* x37 x22)) (* (- 1) (* x16 x33)) (* (- 1) (* x24 x38))) 0)) (>= (+ x39 (* (- 1) (* x35 x15)) (* (- 1) (* x17 x36)) (* (- 1) (* x21 x39)) (* (- 1) (* x23 x40))) 0)) (>= (+ x40 (* (- 1) (* x35 x16)) (* (- 1) (* x40 x24)) (* (- 1) (* x18 x36)) (* (- 1) (* x22 x39))) 0)))) (and (not (<= (+ x13 (* (- 1) x43) (* x41 x15) (* x42 x16)) 0)) (and (>= (+ x13 (* (- 1) x43) (* x41 x15) (* x42 x16)) 0) (>= (+ (* (- 1) x44) x14 (* x17 x41) (* x18 x42)) 0)))) (and (not (<= (+ x13 (* (- 1) x3) (* x25 x15) (* x26 x16) (* x27 x41 x15) (* x28 x42 x15) (* x30 x42 x16) (* x41 x29 x16)) 0)) (and (>= (+ x13 (* (- 1) x3) (* x25 x15) (* x26 x16) (* x27 x41 x15) (* x28 x42 x15) (* x30 x42 x16) (* x41 x29 x16)) 0) (>= (+ x14 (* (- 1) x4) (* x17 x25) (* x18 x26) (* x27 x17 x41) (* x17 x28 x42) (* x30 x18 x42) (* x41 x18 x29)) 0)))) (and (and (not (<= (+ (* x25 x15) (* x26 x16) (* x27 x25 x15) (* x28 x15 x26) (* x30 x26 x16) (* x25 x29 x16)) 0)) (and (>= (+ (* x25 x15) (* x26 x16) (* x27 x25 x15) (* x28 x15 x26) (* x30 x26 x16) (* x25 x29 x16)) 0) (>= (+ (* x17 x25) (* x18 x26) (* x27 x17 x25) (* x17 x28 x26) (* x30 x18 x26) (* x18 x25 x29)) 0))) (and (and (and (>= (+ (* (- 1) x15) (* x27 x27 x15) (* x28 x15 x29) (* x30 x29 x16) (* x27 x29 x16)) 0) (>= (+ (* (- 1) x16) (* x27 x28 x15) (* x30 x28 x15) (* x28 x29 x16) (* x30 x30 x16)) 0)) (>= (+ (* (- 1) x17) (* x27 x27 x17) (* x17 x28 x29) (* x30 x18 x29) (* x27 x18 x29)) 0)) (>= (+ (* (- 1) x18) (* x27 x17 x28) (* x30 x17 x28) (* x28 x18 x29) (* x30 x30 x18)) 0)))) (and (not (<= (+ (* (- 1) x41) x19 (* x41 x21) (* x42 x22)) 0)) (and (>= (+ (* (- 1) x41) x19 (* x41 x21) (* x42 x22)) 0) (>= (+ x20 (* (- 1) x42) (* x23 x41) (* x24 x42)) 0)))) (and (and (not (<= (+ x19 (* x21 x25) (* x22 x26)) 0)) (and (>= (+ x19 (* x21 x25) (* x22 x26)) 0) (>= (+ x20 (* x23 x25) (* x24 x26)) 0))) (and (and (and (>= (+ (* x22 x29) (* x27 x21)) 1) (>= (+ (* x21 x28) (* x30 x22)) 0)) (>= (+ (* x23 x27) (* x24 x29)) 0)) (>= (+ (* x23 x28) (* x30 x24)) 1)))) (and (and (and (and (and (not (<= (+ x0 (* (- 1) x7) (* x3 x1) (* x4 x2)) 0)) (>= (+ x0 (* (- 1) x7) (* x3 x1) (* x4 x2)) 0)) (and (>= (+ (* (- 1) x8) x5) 0) (>= (+ x6 (* (- 1) x9)) 0))) (and (and (not (<= (+ (* (- 1) x10) x0 (* x3 x1) (* x4 x2)) 0)) (>= (+ (* (- 1) x10) x0 (* x3 x1) (* x4 x2)) 0)) (and (>= (+ (* (- 1) x11) x5) 0) (>= (+ x6 (* (- 1) x12)) 0)))) (and (and (not (<= (+ (* (- 1) (* x5 x19)) (* (- 1) (* x6 x20)) (* x3 x1) (* x4 x2) (* (- 1) (* x13 x1)) (* (- 1) (* x14 x2))) 0)) (>= (+ (* (- 1) (* x5 x19)) (* (- 1) (* x6 x20)) (* x3 x1) (* x4 x2) (* (- 1) (* x13 x1)) (* (- 1) (* x14 x2))) 0)) (and (>= (+ x5 (* (- 1) (* x1 x15)) (* (- 1) (* x6 x23)) (* (- 1) (* x17 x2)) (* (- 1) (* x21 x5))) 0) (>= (+ x6 (* (- 1) (* x1 x16)) (* (- 1) (* x5 x22)) (* (- 1) (* x6 x24)) (* (- 1) (* x18 x2))) 0)))) (and (and (not (<= (+ (* x11 x25) (* x12 x26) (* x27 x11 x25) (* x11 x28 x26) (* x30 x12 x26) (* x25 x12 x29)) 0)) (>= (+ (* x11 x25) (* x12 x26) (* x27 x11 x25) (* x11 x28 x26) (* x30 x12 x26) (* x25 x12 x29)) 0)) (and (>= (+ (* (- 1) x11) (* x27 x27 x11) (* x11 x28 x29) (* x30 x12 x29) (* x27 x12 x29)) 0) (>= (+ (* (- 1) x12) (* x27 x11 x28) (* x30 x11 x28) (* x28 x12 x29) (* x30 x30 x12)) 0))))))
(exit)
(check-sat)
