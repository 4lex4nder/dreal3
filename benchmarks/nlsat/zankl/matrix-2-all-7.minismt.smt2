(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x6 () Real)
(declare-fun x13 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x10 () Real)
(declare-fun x0 () Real)
(declare-fun x17 () Real)
(declare-fun x7 () Real)
(declare-fun x14 () Real)
(declare-fun x4 () Real)
(declare-fun x11 () Real)
(declare-fun x1 () Real)
(declare-fun x18 () Real)
(declare-fun x8 () Real)
(declare-fun x15 () Real)
(declare-fun x5 () Real)
(declare-fun x12 () Real)
(declare-fun x2 () Real)
(declare-fun x19 () Real)
(declare-fun x9 () Real)
(declare-fun x16 () Real)
(assert (>= x6 0))
(assert (>= x13 0))
(assert (>= x3 0))
(assert (>= x20 0))
(assert (>= x10 0))
(assert (>= x0 0))
(assert (>= x17 0))
(assert (>= x7 0))
(assert (>= x14 0))
(assert (>= x4 0))
(assert (>= x11 0))
(assert (>= x1 0))
(assert (>= x18 0))
(assert (>= x8 0))
(assert (>= x15 0))
(assert (>= x5 0))
(assert (>= x12 0))
(assert (>= x2 0))
(assert (>= x19 0))
(assert (>= x9 0))
(assert (>= x16 0))
(assert (and (and (and (and (and (and (and (and (and (and (not (<= (+ (* x3 x1) (* x4 x2)) 0)) (>= (+ (* x3 x1) (* x4 x2)) 0)) (and (>= (+ (* (- 1) x1) (* x1 x9) (* x11 x2)) 0) (>= (+ (* (- 1) x2) (* x10 x1) (* x12 x2)) 0))) (and (and (and (and (not (<= (+ (* (- 1) (* x13 x3)) (* (- 1) (* x14 x4)) (* x3 x1) (* x4 x2)) 0)) (>= (+ (* (- 1) (* x13 x3)) (* (- 1) (* x14 x4)) (* x3 x1) (* x4 x2)) 0)) (and (>= (+ (* (- 1) x1) (* x1 x5) (* x7 x2)) 0) (>= (+ (* (- 1) x2) (* x6 x1) (* x8 x2)) 0))) (and (>= (+ (* x1 x9) (* (- 1) (* x13 x5)) (* x11 x2) (* (- 1) (* x7 x14))) 0) (>= (+ (* (- 1) (* x14 x8)) (* x10 x1) (* x12 x2) (* (- 1) (* x6 x13))) 0))) (and (>= (+ x13 (* (- 1) (* x13 x9)) (* (- 1) (* x14 x11))) 0) (>= (+ x14 (* (- 1) (* x13 x10)) (* (- 1) (* x14 x12))) 0)))) (and (and (and (not (<= (+ (* x1 x15) (* x2 x16) (* x13 x15) (* x14 x16)) 0)) (>= (+ (* x1 x15) (* x2 x16) (* x13 x15) (* x14 x16)) 0)) (and (>= (+ (* (- 1) x1) (* x2 x19) (* x17 x1)) 0) (>= (+ (* (- 1) x2) (* x1 x18) (* x20 x2)) 0))) (and (>= (+ (* (- 1) x13) (* x13 x17) (* x14 x19)) 0) (>= (+ (* (- 1) x14) (* x13 x18) (* x20 x14)) 0)))) (and (and (and (not (<= (+ (* x13 x3) (* x14 x4) (* x1 x15) (* x2 x16) (* x6 x13 x16) (* x13 x15 x5) (* x7 x14 x15) (* x14 x8 x16)) 0)) (>= (+ (* x13 x3) (* x14 x4) (* x1 x15) (* x2 x16) (* x6 x13 x16) (* x13 x15 x5) (* x7 x14 x15) (* x14 x8 x16)) 0)) (and (>= (+ (* (- 1) x1) (* x2 x19) (* x17 x1)) 0) (>= (+ (* (- 1) x2) (* x1 x18) (* x20 x2)) 0))) (and (>= (+ (* (- 1) x13) (* x6 x13 x19) (* x13 x17 x5) (* x14 x8 x19) (* x17 x7 x14)) 0) (>= (+ (* (- 1) x14) (* x6 x13 x20) (* x13 x18 x5) (* x7 x14 x18) (* x20 x14 x8)) 0)))) (and (and (and (and (not (<= (+ (* x13 x3) (* x14 x4) (* x6 x13 x16) (* x13 x15 x5) (* x7 x14 x15) (* x14 x8 x16) (* (- 1) (* x3 x17 x1)) (* (- 1) (* x4 x1 x18)) (* (- 1) (* x20 x4 x2)) (* (- 1) (* x3 x2 x19))) 0)) (>= (+ (* x13 x3) (* x14 x4) (* x6 x13 x16) (* x13 x15 x5) (* x7 x14 x15) (* x14 x8 x16) (* (- 1) (* x3 x17 x1)) (* (- 1) (* x4 x1 x18)) (* (- 1) (* x20 x4 x2)) (* (- 1) (* x3 x2 x19))) 0)) (and (>= (+ (* x2 x19) (* x17 x1) (* (- 1) (* x7 x1 x18)) (* (- 1) (* x17 x1 x5)) (* (- 1) (* x20 x7 x2)) (* (- 1) (* x5 x2 x19))) 0) (>= (+ (* x1 x18) (* x20 x2) (* (- 1) (* x1 x18 x8)) (* (- 1) (* x6 x17 x1)) (* (- 1) (* x6 x2 x19)) (* (- 1) (* x20 x8 x2))) 0))) (and (>= (+ (* x6 x13 x19) (* x13 x17 x5) (* x14 x8 x19) (* x17 x7 x14) (* (- 1) (* x17 x1 x9)) (* (- 1) (* x11 x1 x18)) (* (- 1) (* x2 x19 x9)) (* (- 1) (* x20 x11 x2))) 0) (>= (+ (* x6 x13 x20) (* x13 x18 x5) (* x7 x14 x18) (* x20 x14 x8) (* (- 1) (* x1 x18 x12)) (* (- 1) (* x10 x17 x1)) (* (- 1) (* x20 x12 x2)) (* (- 1) (* x10 x2 x19))) 0))) (and (>= (+ (* (- 1) x13) (* x13 x9) (* x14 x11)) 0) (>= (+ (* (- 1) x14) (* x13 x10) (* x14 x12)) 0)))) (and (and (and (and (not (<= (+ (* (- 1) (* x10 x4)) (* x6 x4) (* x3 x5) (* (- 1) (* x3 x9))) 0)) (and (>= (+ (* (- 1) (* x10 x4)) (* x6 x4) (* x3 x5) (* (- 1) (* x3 x9))) 0) (>= (+ (* x3 x7) (* x4 x8) (* (- 1) (* x3 x11)) (* (- 1) (* x4 x12))) 0))) (and (and (and (>= (+ (* (- 1) x5) (* x5 x5) (* x6 x7)) 0) (>= (+ (* (- 1) x6) (* x6 x8) (* x6 x5)) 0)) (>= (+ (* (- 1) x7) (* x7 x5) (* x7 x8)) 0)) (>= (+ (* (- 1) x8) (* x6 x7) (* x8 x8)) 0))) (and (and (and (>= (+ (* x6 x11) (* (- 1) (* x10 x7))) 0) (>= (+ (* x6 x12) (* (- 1) (* x10 x8)) (* x10 x5) (* (- 1) (* x6 x9))) 0)) (>= (+ (* x7 x9) (* (- 1) (* x11 x5)) (* x11 x8) (* (- 1) (* x7 x12))) 0)) (>= (+ (* (- 1) (* x6 x11)) (* x10 x7)) 0))) (and (and (and (>= (+ x9 (* (- 1) (* x9 x9)) (* (- 1) (* x10 x11))) 0) (>= (+ x10 (* (- 1) (* x10 x12)) (* (- 1) (* x10 x9))) 0)) (>= (+ x11 (* (- 1) (* x11 x9)) (* (- 1) (* x11 x12))) 0)) (>= (+ x12 (* (- 1) (* x10 x11)) (* (- 1) (* x12 x12))) 0)))) (and (and (and (not (<= (+ x3 (* (- 1) x15) (* x6 x16) (* x10 x16) (* x15 x5) (* (- 1) (* x3 x17)) (* (- 1) (* x4 x18)) (* x15 x9)) 0)) (and (>= (+ x3 (* (- 1) x15) (* x6 x16) (* x10 x16) (* x15 x5) (* (- 1) (* x3 x17)) (* (- 1) (* x4 x18)) (* x15 x9)) 0) (>= (+ x4 (* (- 1) x16) (* x7 x15) (* x8 x16) (* (- 1) (* x20 x4)) (* x11 x15) (* x12 x16) (* (- 1) (* x3 x19))) 0))) (and (and (and (>= (+ (* x6 x19) (* (- 1) (* x7 x18))) 0) (>= (+ (* x6 x20) (* (- 1) (* x18 x8)) (* x18 x5) (* (- 1) (* x6 x17))) 0)) (>= (+ (* x8 x19) (* (- 1) (* x20 x7)) (* x17 x7) (* (- 1) (* x5 x19))) 0)) (>= (+ (* (- 1) (* x6 x19)) (* x7 x18)) 0))) (and (and (and (>= (+ (* x10 x19) (* (- 1) (* x11 x18))) 0) (>= (+ (* (- 1) (* x18 x12)) (* (- 1) (* x10 x17)) (* x18 x9) (* x20 x10)) 0)) (>= (+ (* (- 1) (* x19 x9)) (* (- 1) (* x20 x11)) (* x12 x19) (* x17 x11)) 0)) (>= (+ (* (- 1) (* x10 x19)) (* x11 x18)) 0)))) (and (and (and (and (not (<= (+ (* x10 x4) (* x3 x9) (* x6 x9 x16) (* x15 x5 x9) (* x10 x7 x15) (* x10 x8 x16) (* (- 1) (* x3 x17 x5)) (* (- 1) (* x4 x18 x5)) (* (- 1) (* x6 x20 x4)) (* (- 1) (* x6 x3 x19))) 0)) (and (>= (+ (* x10 x4) (* x3 x9) (* x6 x9 x16) (* x15 x5 x9) (* x10 x7 x15) (* x10 x8 x16) (* (- 1) (* x3 x17 x5)) (* (- 1) (* x4 x18 x5)) (* (- 1) (* x6 x20 x4)) (* (- 1) (* x6 x3 x19))) 0) (>= (+ (* x3 x11) (* x4 x12) (* x6 x11 x16) (* x11 x15 x5) (* x7 x15 x12) (* x8 x12 x16) (* (- 1) (* x3 x17 x7)) (* (- 1) (* x7 x4 x18)) (* (- 1) (* x20 x4 x8)) (* (- 1) (* x3 x8 x19))) 0))) (and (and (and (>= (+ (* x6 x19) (* x17 x5) (* (- 1) (* x7 x18 x5)) (* (- 1) (* x17 x5 x5)) (* (- 1) (* x6 x20 x7)) (* (- 1) (* x6 x5 x19))) 0) (>= (+ (* x6 x20) (* x18 x5) (* (- 1) (* x18 x8 x5)) (* (- 1) (* x6 x17 x5)) (* (- 1) (* x6 x6 x19)) (* (- 1) (* x6 x20 x8))) 0)) (>= (+ (* x8 x19) (* x17 x7) (* (- 1) (* x7 x7 x18)) (* (- 1) (* x17 x7 x5)) (* (- 1) (* x20 x7 x8)) (* (- 1) (* x8 x5 x19))) 0)) (>= (+ (* x7 x18) (* x20 x8) (* (- 1) (* x7 x18 x8)) (* (- 1) (* x6 x17 x7)) (* (- 1) (* x6 x8 x19)) (* (- 1) (* x20 x8 x8))) 0))) (and (and (and (>= (+ (* x10 x8 x19) (* x10 x17 x7) (* (- 1) (* x11 x18 x5)) (* (- 1) (* x6 x20 x11))) 0) (>= (+ (* x6 x20 x9) (* x18 x5 x9) (* x10 x7 x18) (* x20 x10 x8) (* (- 1) (* x18 x5 x12)) (* (- 1) (* x10 x17 x5)) (* (- 1) (* x6 x20 x12)) (* (- 1) (* x6 x10 x19))) 0)) (>= (+ (* x6 x11 x19) (* x17 x11 x5) (* x8 x12 x19) (* x17 x7 x12) (* (- 1) (* x17 x7 x9)) (* (- 1) (* x7 x11 x18)) (* (- 1) (* x8 x19 x9)) (* (- 1) (* x20 x11 x8))) 0)) (>= (+ (* (- 1) (* x10 x8 x19)) (* (- 1) (* x10 x17 x7)) (* x11 x18 x5) (* x6 x20 x11)) 0))) (and (and (and (>= (+ (* (- 1) x9) (* x9 x9) (* x10 x11)) 0) (>= (+ (* (- 1) x10) (* x10 x12) (* x10 x9)) 0)) (>= (+ (* (- 1) x11) (* x11 x9) (* x11 x12)) 0)) (>= (+ (* (- 1) x12) (* x10 x11) (* x12 x12)) 0)))) (and (and (and (and (and (and (not (<= (+ (* x3 x1) (* x4 x2)) 0)) (>= (+ (* x3 x1) (* x4 x2)) 0)) (and (>= (+ (* (- 1) x1) (* x1 x9) (* x11 x2)) 0) (>= (+ (* (- 1) x2) (* x10 x1) (* x12 x2)) 0))) (and (and (and (and (not (<= (+ (* (- 1) (* x13 x3)) (* (- 1) (* x14 x4)) (* x3 x1) (* x4 x2)) 0)) (>= (+ (* (- 1) (* x13 x3)) (* (- 1) (* x14 x4)) (* x3 x1) (* x4 x2)) 0)) (and (>= (+ (* (- 1) x1) (* x1 x5) (* x7 x2)) 0) (>= (+ (* (- 1) x2) (* x6 x1) (* x8 x2)) 0))) (and (>= (+ (* x1 x9) (* (- 1) (* x13 x5)) (* x11 x2) (* (- 1) (* x7 x14))) 0) (>= (+ (* (- 1) (* x14 x8)) (* x10 x1) (* x12 x2) (* (- 1) (* x6 x13))) 0))) (and (>= (+ x13 (* (- 1) (* x13 x9)) (* (- 1) (* x14 x11))) 0) (>= (+ x14 (* (- 1) (* x13 x10)) (* (- 1) (* x14 x12))) 0)))) (and (and (and (not (<= (+ (* x1 x15) (* x2 x16) (* x13 x15) (* x14 x16)) 0)) (>= (+ (* x1 x15) (* x2 x16) (* x13 x15) (* x14 x16)) 0)) (and (>= (+ (* (- 1) x1) (* x2 x19) (* x17 x1)) 0) (>= (+ (* (- 1) x2) (* x1 x18) (* x20 x2)) 0))) (and (>= (+ (* (- 1) x13) (* x13 x17) (* x14 x19)) 0) (>= (+ (* (- 1) x14) (* x13 x18) (* x20 x14)) 0)))) (and (and (and (not (<= (+ (* x13 x3) (* x14 x4) (* x1 x15) (* x2 x16) (* x6 x13 x16) (* x13 x15 x5) (* x7 x14 x15) (* x14 x8 x16)) 0)) (>= (+ (* x13 x3) (* x14 x4) (* x1 x15) (* x2 x16) (* x6 x13 x16) (* x13 x15 x5) (* x7 x14 x15) (* x14 x8 x16)) 0)) (and (>= (+ (* (- 1) x1) (* x2 x19) (* x17 x1)) 0) (>= (+ (* (- 1) x2) (* x1 x18) (* x20 x2)) 0))) (and (>= (+ (* (- 1) x13) (* x6 x13 x19) (* x13 x17 x5) (* x14 x8 x19) (* x17 x7 x14)) 0) (>= (+ (* (- 1) x14) (* x6 x13 x20) (* x13 x18 x5) (* x7 x14 x18) (* x20 x14 x8)) 0)))) (and (and (and (and (not (<= (+ (* x13 x3) (* x14 x4) (* x6 x13 x16) (* x13 x15 x5) (* x7 x14 x15) (* x14 x8 x16) (* (- 1) (* x3 x17 x1)) (* (- 1) (* x4 x1 x18)) (* (- 1) (* x20 x4 x2)) (* (- 1) (* x3 x2 x19))) 0)) (>= (+ (* x13 x3) (* x14 x4) (* x6 x13 x16) (* x13 x15 x5) (* x7 x14 x15) (* x14 x8 x16) (* (- 1) (* x3 x17 x1)) (* (- 1) (* x4 x1 x18)) (* (- 1) (* x20 x4 x2)) (* (- 1) (* x3 x2 x19))) 0)) (and (>= (+ (* x2 x19) (* x17 x1) (* (- 1) (* x7 x1 x18)) (* (- 1) (* x17 x1 x5)) (* (- 1) (* x20 x7 x2)) (* (- 1) (* x5 x2 x19))) 0) (>= (+ (* x1 x18) (* x20 x2) (* (- 1) (* x1 x18 x8)) (* (- 1) (* x6 x17 x1)) (* (- 1) (* x6 x2 x19)) (* (- 1) (* x20 x8 x2))) 0))) (and (>= (+ (* x6 x13 x19) (* x13 x17 x5) (* x14 x8 x19) (* x17 x7 x14) (* (- 1) (* x17 x1 x9)) (* (- 1) (* x11 x1 x18)) (* (- 1) (* x2 x19 x9)) (* (- 1) (* x20 x11 x2))) 0) (>= (+ (* x6 x13 x20) (* x13 x18 x5) (* x7 x14 x18) (* x20 x14 x8) (* (- 1) (* x1 x18 x12)) (* (- 1) (* x10 x17 x1)) (* (- 1) (* x20 x12 x2)) (* (- 1) (* x10 x2 x19))) 0))) (and (>= (+ (* (- 1) x13) (* x13 x9) (* x14 x11)) 0) (>= (+ (* (- 1) x14) (* x13 x10) (* x14 x12)) 0))))))
(exit)
(check-sat)
