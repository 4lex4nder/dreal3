(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x6 () Real)
(declare-fun x23 () Real)
(declare-fun x40 () Real)
(declare-fun x57 () Real)
(declare-fun x13 () Real)
(declare-fun x30 () Real)
(declare-fun x47 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x37 () Real)
(declare-fun x54 () Real)
(declare-fun x10 () Real)
(declare-fun x27 () Real)
(declare-fun x44 () Real)
(declare-fun x0 () Real)
(declare-fun x17 () Real)
(declare-fun x34 () Real)
(declare-fun x51 () Real)
(declare-fun x7 () Real)
(declare-fun x24 () Real)
(declare-fun x41 () Real)
(declare-fun x58 () Real)
(declare-fun x14 () Real)
(declare-fun x31 () Real)
(declare-fun x48 () Real)
(declare-fun x4 () Real)
(declare-fun x21 () Real)
(declare-fun x38 () Real)
(declare-fun x55 () Real)
(declare-fun x11 () Real)
(declare-fun x28 () Real)
(declare-fun x45 () Real)
(declare-fun x1 () Real)
(declare-fun x18 () Real)
(declare-fun x35 () Real)
(declare-fun x52 () Real)
(declare-fun x8 () Real)
(declare-fun x25 () Real)
(declare-fun x42 () Real)
(declare-fun x15 () Real)
(declare-fun x32 () Real)
(declare-fun x49 () Real)
(declare-fun x5 () Real)
(declare-fun x22 () Real)
(declare-fun x39 () Real)
(declare-fun x56 () Real)
(declare-fun x12 () Real)
(declare-fun x29 () Real)
(declare-fun x46 () Real)
(declare-fun x2 () Real)
(declare-fun x19 () Real)
(declare-fun x36 () Real)
(declare-fun x53 () Real)
(declare-fun x9 () Real)
(declare-fun x26 () Real)
(declare-fun x43 () Real)
(declare-fun x16 () Real)
(declare-fun x33 () Real)
(declare-fun x50 () Real)
(assert (>= x6 0))
(assert (>= x23 0))
(assert (>= x40 0))
(assert (>= x57 0))
(assert (>= x13 0))
(assert (>= x30 0))
(assert (>= x47 0))
(assert (>= x3 0))
(assert (>= x20 0))
(assert (>= x37 0))
(assert (>= x54 0))
(assert (>= x10 0))
(assert (>= x27 0))
(assert (>= x44 0))
(assert (>= x0 0))
(assert (>= x17 0))
(assert (>= x34 0))
(assert (>= x51 0))
(assert (>= x7 0))
(assert (>= x24 0))
(assert (>= x41 0))
(assert (>= x58 0))
(assert (>= x14 0))
(assert (>= x31 0))
(assert (>= x48 0))
(assert (>= x4 0))
(assert (>= x21 0))
(assert (>= x38 0))
(assert (>= x55 0))
(assert (>= x11 0))
(assert (>= x28 0))
(assert (>= x45 0))
(assert (>= x1 0))
(assert (>= x18 0))
(assert (>= x35 0))
(assert (>= x52 0))
(assert (>= x8 0))
(assert (>= x25 0))
(assert (>= x42 0))
(assert (>= x15 0))
(assert (>= x32 0))
(assert (>= x49 0))
(assert (>= x5 0))
(assert (>= x22 0))
(assert (>= x39 0))
(assert (>= x56 0))
(assert (>= x12 0))
(assert (>= x29 0))
(assert (>= x46 0))
(assert (>= x2 0))
(assert (>= x19 0))
(assert (>= x36 0))
(assert (>= x53 0))
(assert (>= x9 0))
(assert (>= x26 0))
(assert (>= x43 0))
(assert (>= x16 0))
(assert (>= x33 0))
(assert (>= x50 0))
(assert (and (and (and (and (and (and (not (<= (+ (* (- 1) (* x4 x1)) (* (- 1) (* x5 x2)) (* (- 1) (* x6 x3))) 0)) (>= (+ (* (- 1) (* x4 x1)) (* (- 1) (* x5 x2)) (* (- 1) (* x6 x3))) 0)) (and (and (>= (+ x1 (* (- 1) (* x7 x1)) (* (- 1) (* x10 x2)) (* (- 1) (* x13 x3))) 0) (>= (+ x2 (* (- 1) (* x1 x8)) (* (- 1) (* x3 x14)) (* (- 1) (* x11 x2))) 0)) (>= (+ x3 (* (- 1) (* x1 x9)) (* (- 1) (* x3 x15)) (* (- 1) (* x12 x2))) 0))) (and (and (not (<= (+ x0 (* (- 1) x16) (* (- 1) (* x23 x20)) (* (- 1) (* x24 x21)) (* (- 1) (* x25 x22)) (* (- 1) (* x20 x27 x5)) (* (- 1) (* x20 x4 x26)) (* (- 1) (* x6 x20 x28)) (* (- 1) (* x30 x21 x5)) (* (- 1) (* x4 x21 x29)) (* (- 1) (* x6 x31 x21)) (* (- 1) (* x4 x32 x22)) (* (- 1) (* x5 x22 x33)) (* (- 1) (* x6 x34 x22))) 0)) (>= (+ x0 (* (- 1) x16) (* (- 1) (* x23 x20)) (* (- 1) (* x24 x21)) (* (- 1) (* x25 x22)) (* (- 1) (* x20 x27 x5)) (* (- 1) (* x20 x4 x26)) (* (- 1) (* x6 x20 x28)) (* (- 1) (* x30 x21 x5)) (* (- 1) (* x4 x21 x29)) (* (- 1) (* x6 x31 x21)) (* (- 1) (* x4 x32 x22)) (* (- 1) (* x5 x22 x33)) (* (- 1) (* x6 x34 x22))) 0)) (and (and (>= (+ (* (- 1) x17) x1 (* (- 1) (* x20 x7 x26)) (* (- 1) (* x20 x10 x27)) (* (- 1) (* x13 x20 x28)) (* (- 1) (* x30 x10 x21)) (* (- 1) (* x7 x21 x29)) (* (- 1) (* x13 x31 x21)) (* (- 1) (* x7 x32 x22)) (* (- 1) (* x10 x22 x33)) (* (- 1) (* x13 x34 x22))) 0) (>= (+ (* (- 1) x18) x2 (* (- 1) (* x20 x27 x11)) (* (- 1) (* x20 x8 x26)) (* (- 1) (* x20 x14 x28)) (* (- 1) (* x30 x21 x11)) (* (- 1) (* x21 x8 x29)) (* (- 1) (* x14 x31 x21)) (* (- 1) (* x34 x14 x22)) (* (- 1) (* x8 x32 x22)) (* (- 1) (* x11 x22 x33))) 0)) (>= (+ x3 (* (- 1) x19) (* (- 1) (* x20 x27 x12)) (* (- 1) (* x20 x28 x15)) (* (- 1) (* x20 x9 x26)) (* (- 1) (* x21 x29 x9)) (* (- 1) (* x30 x21 x12)) (* (- 1) (* x31 x21 x15)) (* (- 1) (* x32 x22 x9)) (* (- 1) (* x34 x15 x22)) (* (- 1) (* x22 x12 x33))) 0)))) (and (not (<= (+ x35 (* (- 1) x56) (* x47 x35) (* x48 x36) (* x37 x49)) 0)) (and (and (>= (+ x35 (* (- 1) x56) (* x47 x35) (* x48 x36) (* x37 x49)) 0) (>= (+ (* (- 1) x57) x36 (* x51 x36) (* x35 x50) (* x37 x52)) 0)) (>= (+ x37 (* (- 1) x58) (* x54 x36) (* x35 x53) (* x37 x55)) 0)))) (and (and (not (<= (+ x23 (* (- 1) x35) (* (- 1) (* x23 x47)) (* (- 1) (* x24 x48)) (* (- 1) (* x25 x49)) (* (- 1) (* x47 x27 x5)) (* (- 1) (* x47 x4 x26)) (* (- 1) (* x6 x47 x28)) (* (- 1) (* x30 x48 x5)) (* (- 1) (* x48 x4 x29)) (* (- 1) (* x6 x31 x48)) (* (- 1) (* x4 x32 x49)) (* (- 1) (* x49 x5 x33)) (* (- 1) (* x6 x34 x49))) 0)) (and (and (>= (+ x23 (* (- 1) x35) (* (- 1) (* x23 x47)) (* (- 1) (* x24 x48)) (* (- 1) (* x25 x49)) (* (- 1) (* x47 x27 x5)) (* (- 1) (* x47 x4 x26)) (* (- 1) (* x6 x47 x28)) (* (- 1) (* x30 x48 x5)) (* (- 1) (* x48 x4 x29)) (* (- 1) (* x6 x31 x48)) (* (- 1) (* x4 x32 x49)) (* (- 1) (* x49 x5 x33)) (* (- 1) (* x6 x34 x49))) 0) (>= (+ x24 (* (- 1) x36) (* (- 1) (* x23 x50)) (* (- 1) (* x51 x24)) (* (- 1) (* x52 x25)) (* (- 1) (* x27 x5 x50)) (* (- 1) (* x4 x26 x50)) (* (- 1) (* x6 x28 x50)) (* (- 1) (* x30 x51 x5)) (* (- 1) (* x51 x4 x29)) (* (- 1) (* x6 x51 x31)) (* (- 1) (* x4 x52 x32)) (* (- 1) (* x52 x5 x33)) (* (- 1) (* x6 x34 x52))) 0)) (>= (+ (* (- 1) x37) x25 (* (- 1) (* x23 x53)) (* (- 1) (* x54 x24)) (* (- 1) (* x55 x25)) (* (- 1) (* x27 x5 x53)) (* (- 1) (* x4 x53 x26)) (* (- 1) (* x6 x28 x53)) (* (- 1) (* x30 x54 x5)) (* (- 1) (* x54 x4 x29)) (* (- 1) (* x6 x54 x31)) (* (- 1) (* x4 x55 x32)) (* (- 1) (* x55 x5 x33)) (* (- 1) (* x6 x34 x55))) 0))) (and (and (and (and (and (and (and (and (>= (+ (* (- 1) x38) x26 (* (- 1) (* x47 x7 x26)) (* (- 1) (* x47 x10 x27)) (* (- 1) (* x13 x47 x28)) (* (- 1) (* x30 x10 x48)) (* (- 1) (* x7 x48 x29)) (* (- 1) (* x13 x31 x48)) (* (- 1) (* x7 x32 x49)) (* (- 1) (* x10 x49 x33)) (* (- 1) (* x13 x34 x49))) 0) (>= (+ x27 (* (- 1) x39) (* (- 1) (* x47 x27 x11)) (* (- 1) (* x47 x8 x26)) (* (- 1) (* x47 x14 x28)) (* (- 1) (* x30 x48 x11)) (* (- 1) (* x48 x8 x29)) (* (- 1) (* x14 x31 x48)) (* (- 1) (* x34 x14 x49)) (* (- 1) (* x8 x32 x49)) (* (- 1) (* x11 x49 x33))) 0)) (>= (+ (* (- 1) x40) x28 (* (- 1) (* x47 x27 x12)) (* (- 1) (* x47 x28 x15)) (* (- 1) (* x47 x9 x26)) (* (- 1) (* x48 x29 x9)) (* (- 1) (* x30 x48 x12)) (* (- 1) (* x31 x48 x15)) (* (- 1) (* x32 x49 x9)) (* (- 1) (* x34 x15 x49)) (* (- 1) (* x49 x12 x33))) 0)) (>= (+ (* (- 1) x41) x29 (* (- 1) (* x7 x26 x50)) (* (- 1) (* x10 x27 x50)) (* (- 1) (* x13 x28 x50)) (* (- 1) (* x30 x10 x51)) (* (- 1) (* x51 x7 x29)) (* (- 1) (* x13 x51 x31)) (* (- 1) (* x7 x52 x32)) (* (- 1) (* x10 x52 x33)) (* (- 1) (* x13 x34 x52))) 0)) (>= (+ x30 (* (- 1) x42) (* (- 1) (* x27 x11 x50)) (* (- 1) (* x8 x26 x50)) (* (- 1) (* x14 x28 x50)) (* (- 1) (* x30 x51 x11)) (* (- 1) (* x51 x8 x29)) (* (- 1) (* x51 x14 x31)) (* (- 1) (* x34 x14 x52)) (* (- 1) (* x52 x8 x32)) (* (- 1) (* x11 x52 x33))) 0)) (>= (+ x31 (* (- 1) x43) (* (- 1) (* x27 x12 x50)) (* (- 1) (* x28 x15 x50)) (* (- 1) (* x9 x26 x50)) (* (- 1) (* x51 x29 x9)) (* (- 1) (* x30 x51 x12)) (* (- 1) (* x51 x31 x15)) (* (- 1) (* x52 x32 x9)) (* (- 1) (* x34 x52 x15)) (* (- 1) (* x52 x12 x33))) 0)) (>= (+ (* (- 1) x44) x32 (* (- 1) (* x7 x53 x26)) (* (- 1) (* x10 x27 x53)) (* (- 1) (* x13 x28 x53)) (* (- 1) (* x30 x54 x10)) (* (- 1) (* x54 x7 x29)) (* (- 1) (* x13 x54 x31)) (* (- 1) (* x7 x55 x32)) (* (- 1) (* x10 x55 x33)) (* (- 1) (* x13 x34 x55))) 0)) (>= (+ (* (- 1) x45) x33 (* (- 1) (* x27 x11 x53)) (* (- 1) (* x8 x53 x26)) (* (- 1) (* x14 x28 x53)) (* (- 1) (* x30 x54 x11)) (* (- 1) (* x54 x8 x29)) (* (- 1) (* x54 x14 x31)) (* (- 1) (* x34 x14 x55)) (* (- 1) (* x55 x8 x32)) (* (- 1) (* x55 x11 x33))) 0)) (>= (+ x34 (* (- 1) x46) (* (- 1) (* x27 x12 x53)) (* (- 1) (* x28 x15 x53)) (* (- 1) (* x53 x9 x26)) (* (- 1) (* x54 x29 x9)) (* (- 1) (* x30 x54 x12)) (* (- 1) (* x54 x31 x15)) (* (- 1) (* x55 x32 x9)) (* (- 1) (* x34 x55 x15)) (* (- 1) (* x55 x12 x33))) 0)))) (and (and (and (not (<= (+ (* (- 1) (* x4 x1)) (* (- 1) (* x5 x2)) (* (- 1) (* x6 x3))) 0)) (>= (+ (* (- 1) (* x4 x1)) (* (- 1) (* x5 x2)) (* (- 1) (* x6 x3))) 0)) (and (and (>= (+ x1 (* (- 1) (* x7 x1)) (* (- 1) (* x10 x2)) (* (- 1) (* x13 x3))) 0) (>= (+ x2 (* (- 1) (* x1 x8)) (* (- 1) (* x3 x14)) (* (- 1) (* x11 x2))) 0)) (>= (+ x3 (* (- 1) (* x1 x9)) (* (- 1) (* x3 x15)) (* (- 1) (* x12 x2))) 0))) (and (and (not (<= (+ x0 (* (- 1) x16) (* (- 1) (* x23 x20)) (* (- 1) (* x24 x21)) (* (- 1) (* x25 x22)) (* (- 1) (* x20 x27 x5)) (* (- 1) (* x20 x4 x26)) (* (- 1) (* x6 x20 x28)) (* (- 1) (* x30 x21 x5)) (* (- 1) (* x4 x21 x29)) (* (- 1) (* x6 x31 x21)) (* (- 1) (* x4 x32 x22)) (* (- 1) (* x5 x22 x33)) (* (- 1) (* x6 x34 x22))) 0)) (>= (+ x0 (* (- 1) x16) (* (- 1) (* x23 x20)) (* (- 1) (* x24 x21)) (* (- 1) (* x25 x22)) (* (- 1) (* x20 x27 x5)) (* (- 1) (* x20 x4 x26)) (* (- 1) (* x6 x20 x28)) (* (- 1) (* x30 x21 x5)) (* (- 1) (* x4 x21 x29)) (* (- 1) (* x6 x31 x21)) (* (- 1) (* x4 x32 x22)) (* (- 1) (* x5 x22 x33)) (* (- 1) (* x6 x34 x22))) 0)) (and (and (>= (+ (* (- 1) x17) x1 (* (- 1) (* x20 x7 x26)) (* (- 1) (* x20 x10 x27)) (* (- 1) (* x13 x20 x28)) (* (- 1) (* x30 x10 x21)) (* (- 1) (* x7 x21 x29)) (* (- 1) (* x13 x31 x21)) (* (- 1) (* x7 x32 x22)) (* (- 1) (* x10 x22 x33)) (* (- 1) (* x13 x34 x22))) 0) (>= (+ (* (- 1) x18) x2 (* (- 1) (* x20 x27 x11)) (* (- 1) (* x20 x8 x26)) (* (- 1) (* x20 x14 x28)) (* (- 1) (* x30 x21 x11)) (* (- 1) (* x21 x8 x29)) (* (- 1) (* x14 x31 x21)) (* (- 1) (* x34 x14 x22)) (* (- 1) (* x8 x32 x22)) (* (- 1) (* x11 x22 x33))) 0)) (>= (+ x3 (* (- 1) x19) (* (- 1) (* x20 x27 x12)) (* (- 1) (* x20 x28 x15)) (* (- 1) (* x20 x9 x26)) (* (- 1) (* x21 x29 x9)) (* (- 1) (* x30 x21 x12)) (* (- 1) (* x31 x21 x15)) (* (- 1) (* x32 x22 x9)) (* (- 1) (* x34 x15 x22)) (* (- 1) (* x22 x12 x33))) 0))))))
(exit)
(check-sat)
