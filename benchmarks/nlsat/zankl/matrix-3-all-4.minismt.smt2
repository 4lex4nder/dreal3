(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x6 () Real)
(declare-fun x84 () Real)
(declare-fun x23 () Real)
(declare-fun x101 () Real)
(declare-fun x40 () Real)
(declare-fun x57 () Real)
(declare-fun x74 () Real)
(declare-fun x13 () Real)
(declare-fun x91 () Real)
(declare-fun x30 () Real)
(declare-fun x47 () Real)
(declare-fun x64 () Real)
(declare-fun x3 () Real)
(declare-fun x81 () Real)
(declare-fun x20 () Real)
(declare-fun x98 () Real)
(declare-fun x37 () Real)
(declare-fun x54 () Real)
(declare-fun x71 () Real)
(declare-fun x10 () Real)
(declare-fun x88 () Real)
(declare-fun x27 () Real)
(declare-fun x44 () Real)
(declare-fun x61 () Real)
(declare-fun x0 () Real)
(declare-fun x78 () Real)
(declare-fun x17 () Real)
(declare-fun x95 () Real)
(declare-fun x34 () Real)
(declare-fun x51 () Real)
(declare-fun x68 () Real)
(declare-fun x7 () Real)
(declare-fun x85 () Real)
(declare-fun x24 () Real)
(declare-fun x102 () Real)
(declare-fun x41 () Real)
(declare-fun x58 () Real)
(declare-fun x75 () Real)
(declare-fun x14 () Real)
(declare-fun x92 () Real)
(declare-fun x31 () Real)
(declare-fun x48 () Real)
(declare-fun x65 () Real)
(declare-fun x4 () Real)
(declare-fun x82 () Real)
(declare-fun x21 () Real)
(declare-fun x99 () Real)
(declare-fun x38 () Real)
(declare-fun x55 () Real)
(declare-fun x72 () Real)
(declare-fun x11 () Real)
(declare-fun x89 () Real)
(declare-fun x28 () Real)
(declare-fun x45 () Real)
(declare-fun x62 () Real)
(declare-fun x1 () Real)
(declare-fun x79 () Real)
(declare-fun x18 () Real)
(declare-fun x96 () Real)
(declare-fun x35 () Real)
(declare-fun x52 () Real)
(declare-fun x69 () Real)
(declare-fun x8 () Real)
(declare-fun x86 () Real)
(declare-fun x25 () Real)
(declare-fun x103 () Real)
(declare-fun x42 () Real)
(declare-fun x59 () Real)
(declare-fun x76 () Real)
(declare-fun x15 () Real)
(declare-fun x93 () Real)
(declare-fun x32 () Real)
(declare-fun x49 () Real)
(declare-fun x66 () Real)
(declare-fun x5 () Real)
(declare-fun x83 () Real)
(declare-fun x22 () Real)
(declare-fun x100 () Real)
(declare-fun x39 () Real)
(declare-fun x56 () Real)
(declare-fun x73 () Real)
(declare-fun x12 () Real)
(declare-fun x90 () Real)
(declare-fun x29 () Real)
(declare-fun x46 () Real)
(declare-fun x63 () Real)
(declare-fun x2 () Real)
(declare-fun x80 () Real)
(declare-fun x19 () Real)
(declare-fun x97 () Real)
(declare-fun x36 () Real)
(declare-fun x53 () Real)
(declare-fun x70 () Real)
(declare-fun x9 () Real)
(declare-fun x87 () Real)
(declare-fun x26 () Real)
(declare-fun x104 () Real)
(declare-fun x43 () Real)
(declare-fun x60 () Real)
(declare-fun x77 () Real)
(declare-fun x16 () Real)
(declare-fun x94 () Real)
(declare-fun x33 () Real)
(declare-fun x50 () Real)
(declare-fun x67 () Real)
(assert (>= x6 0))
(assert (>= x84 0))
(assert (>= x23 0))
(assert (>= x101 0))
(assert (>= x40 0))
(assert (>= x57 0))
(assert (>= x74 0))
(assert (>= x13 0))
(assert (>= x91 0))
(assert (>= x30 0))
(assert (>= x47 0))
(assert (>= x64 0))
(assert (>= x3 0))
(assert (>= x81 0))
(assert (>= x20 0))
(assert (>= x98 0))
(assert (>= x37 0))
(assert (>= x54 0))
(assert (>= x71 0))
(assert (>= x10 0))
(assert (>= x88 0))
(assert (>= x27 0))
(assert (>= x44 0))
(assert (>= x61 0))
(assert (>= x0 0))
(assert (>= x78 0))
(assert (>= x17 0))
(assert (>= x95 0))
(assert (>= x34 0))
(assert (>= x51 0))
(assert (>= x68 0))
(assert (>= x7 0))
(assert (>= x85 0))
(assert (>= x24 0))
(assert (>= x102 0))
(assert (>= x41 0))
(assert (>= x58 0))
(assert (>= x75 0))
(assert (>= x14 0))
(assert (>= x92 0))
(assert (>= x31 0))
(assert (>= x48 0))
(assert (>= x65 0))
(assert (>= x4 0))
(assert (>= x82 0))
(assert (>= x21 0))
(assert (>= x99 0))
(assert (>= x38 0))
(assert (>= x55 0))
(assert (>= x72 0))
(assert (>= x11 0))
(assert (>= x89 0))
(assert (>= x28 0))
(assert (>= x45 0))
(assert (>= x62 0))
(assert (>= x1 0))
(assert (>= x79 0))
(assert (>= x18 0))
(assert (>= x96 0))
(assert (>= x35 0))
(assert (>= x52 0))
(assert (>= x69 0))
(assert (>= x8 0))
(assert (>= x86 0))
(assert (>= x25 0))
(assert (>= x103 0))
(assert (>= x42 0))
(assert (>= x59 0))
(assert (>= x76 0))
(assert (>= x15 0))
(assert (>= x93 0))
(assert (>= x32 0))
(assert (>= x49 0))
(assert (>= x66 0))
(assert (>= x5 0))
(assert (>= x83 0))
(assert (>= x22 0))
(assert (>= x100 0))
(assert (>= x39 0))
(assert (>= x56 0))
(assert (>= x73 0))
(assert (>= x12 0))
(assert (>= x90 0))
(assert (>= x29 0))
(assert (>= x46 0))
(assert (>= x63 0))
(assert (>= x2 0))
(assert (>= x80 0))
(assert (>= x19 0))
(assert (>= x97 0))
(assert (>= x36 0))
(assert (>= x53 0))
(assert (>= x70 0))
(assert (>= x9 0))
(assert (>= x87 0))
(assert (>= x26 0))
(assert (>= x104 0))
(assert (>= x43 0))
(assert (>= x60 0))
(assert (>= x77 0))
(assert (>= x16 0))
(assert (>= x94 0))
(assert (>= x33 0))
(assert (>= x50 0))
(assert (>= x67 0))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (not (<= (+ (* (- 1) x13) x0 (* x4 x1) (* x5 x2) (* x6 x3)) 0)) (>= (+ (* (- 1) x13) x0 (* x4 x1) (* x5 x2) (* x6 x3)) 0)) (and (and (>= (+ x7 (* (- 1) x14)) 0) (>= (+ x8 (* (- 1) x15)) 0)) (>= (+ x9 (* (- 1) x16)) 0))) (and (and (and (not (<= (+ x0 (* (- 1) x17) (* x4 x1) (* x5 x2) (* x6 x3)) 0)) (>= (+ x0 (* (- 1) x17) (* x4 x1) (* x5 x2) (* x6 x3)) 0)) (and (and (>= (+ x7 (* (- 1) x18)) 0) (>= (+ x8 (* (- 1) x19)) 0)) (>= (+ (* (- 1) x20) x9) 0))) (and (and (>= (+ x10 (* (- 1) x21)) 0) (>= (+ x11 (* (- 1) x22)) 0)) (>= (+ (* (- 1) x23) x12) 0)))) (and (and (and (not (<= (+ (* (- 1) (* x3 x26)) (* (- 1) (* x7 x45)) (* (- 1) (* x8 x46)) (* x4 x1) (* x5 x2) (* x6 x3) (* (- 1) (* x24 x1)) (* (- 1) (* x25 x2)) (* (- 1) (* x47 x9)) (* (- 1) (* x57 x10)) (* (- 1) (* x58 x11)) (* (- 1) (* x59 x12))) 0)) (>= (+ (* (- 1) (* x3 x26)) (* (- 1) (* x7 x45)) (* (- 1) (* x8 x46)) (* x4 x1) (* x5 x2) (* x6 x3) (* (- 1) (* x24 x1)) (* (- 1) (* x25 x2)) (* (- 1) (* x47 x9)) (* (- 1) (* x57 x10)) (* (- 1) (* x58 x11)) (* (- 1) (* x59 x12))) 0)) (and (and (>= (+ x7 (* (- 1) (* x3 x33)) (* (- 1) (* x7 x48)) (* (- 1) (* x27 x1)) (* (- 1) (* x30 x2)) (* (- 1) (* x51 x8)) (* (- 1) (* x54 x9))) 0) (>= (+ x8 (* (- 1) (* x3 x34)) (* (- 1) (* x7 x49)) (* (- 1) (* x28 x1)) (* (- 1) (* x31 x2)) (* (- 1) (* x52 x8)) (* (- 1) (* x55 x9))) 0)) (>= (+ x9 (* (- 1) (* x1 x29)) (* (- 1) (* x3 x35)) (* (- 1) (* x7 x50)) (* (- 1) (* x8 x53)) (* (- 1) (* x32 x2)) (* (- 1) (* x56 x9))) 0))) (and (and (>= (+ x10 (* (- 1) (* x1 x36)) (* (- 1) (* x3 x42)) (* (- 1) (* x10 x60)) (* (- 1) (* x11 x63)) (* (- 1) (* x39 x2)) (* (- 1) (* x66 x12))) 0) (>= (+ x11 (* (- 1) (* x3 x43)) (* (- 1) (* x10 x61)) (* (- 1) (* x12 x67)) (* (- 1) (* x37 x1)) (* (- 1) (* x40 x2)) (* (- 1) (* x64 x11))) 0)) (>= (+ x12 (* (- 1) (* x3 x44)) (* (- 1) (* x10 x62)) (* (- 1) (* x38 x1)) (* (- 1) (* x41 x2)) (* (- 1) (* x65 x11)) (* (- 1) (* x68 x12))) 0)))) (and (and (and (not (<= (+ (* x20 x59) (* x23 x59) (* x57 x18) (* x58 x19) (* x57 x21) (* x58 x22)) 0)) (>= (+ (* x20 x59) (* x23 x59) (* x57 x18) (* x58 x19) (* x57 x21) (* x58 x22)) 0)) (and (and (>= (+ (* (- 1) x18) (* x18 x60) (* x20 x66) (* x63 x19)) 0) (>= (+ (* (- 1) x19) (* x20 x67) (* x61 x18) (* x64 x19)) 0)) (>= (+ (* (- 1) x20) (* x20 x68) (* x62 x18) (* x65 x19)) 0))) (and (and (>= (+ (* (- 1) x21) (* x21 x60) (* x22 x63) (* x23 x66)) 0) (>= (+ (* (- 1) x22) (* x23 x67) (* x61 x21) (* x64 x22)) 0)) (>= (+ (* (- 1) x23) (* x21 x62) (* x23 x68) (* x65 x22)) 0)))) (and (and (and (not (<= (+ (* (- 1) (* x74 x26)) (* (- 1) (* x81 x45)) (* (- 1) (* x82 x46)) (* (- 1) (* x91 x58)) (* (- 1) (* x92 x59)) (* x4 x72) (* x5 x73) (* x6 x74) (* (- 1) (* x24 x72)) (* (- 1) (* x25 x73)) (* (- 1) (* x47 x83)) (* (- 1) (* x57 x90))) 0)) (and (and (>= (+ (* (- 1) (* x74 x26)) (* (- 1) (* x81 x45)) (* (- 1) (* x82 x46)) (* (- 1) (* x91 x58)) (* (- 1) (* x92 x59)) (* x4 x72) (* x5 x73) (* x6 x74) (* (- 1) (* x24 x72)) (* (- 1) (* x25 x73)) (* (- 1) (* x47 x83)) (* (- 1) (* x57 x90))) 0) (>= (+ (* x75 x4) (* x76 x5) (* (- 1) (* x84 x45)) (* (- 1) (* x85 x46)) (* (- 1) (* x95 x59)) (* x6 x77) (* (- 1) (* x24 x75)) (* (- 1) (* x25 x76)) (* (- 1) (* x26 x77)) (* (- 1) (* x47 x86)) (* (- 1) (* x57 x93)) (* (- 1) (* x58 x94))) 0)) (>= (+ (* x78 x4) (* x79 x5) (* (- 1) (* x78 x24)) (* (- 1) (* x79 x25)) (* (- 1) (* x80 x26)) (* (- 1) (* x88 x46)) (* (- 1) (* x98 x59)) (* x6 x80) (* (- 1) (* x45 x87)) (* (- 1) (* x47 x89)) (* (- 1) (* x57 x96)) (* (- 1) (* x58 x97))) 0))) (and (and (and (and (and (and (and (and (>= (+ x81 (* (- 1) (* x74 x33)) (* (- 1) (* x81 x48)) (* (- 1) (* x27 x72)) (* (- 1) (* x30 x73)) (* (- 1) (* x51 x82)) (* (- 1) (* x54 x83))) 0) (>= (+ x82 (* (- 1) (* x72 x28)) (* (- 1) (* x74 x34)) (* (- 1) (* x81 x49)) (* (- 1) (* x82 x52)) (* (- 1) (* x31 x73)) (* (- 1) (* x55 x83))) 0)) (>= (+ x83 (* (- 1) (* x72 x29)) (* (- 1) (* x74 x35)) (* (- 1) (* x81 x50)) (* (- 1) (* x82 x53)) (* (- 1) (* x83 x56)) (* (- 1) (* x32 x73))) 0)) (>= (+ x84 (* (- 1) (* x77 x33)) (* (- 1) (* x84 x48)) (* (- 1) (* x27 x75)) (* (- 1) (* x30 x76)) (* (- 1) (* x51 x85)) (* (- 1) (* x54 x86))) 0)) (>= (+ x85 (* (- 1) (* x75 x28)) (* (- 1) (* x84 x49)) (* (- 1) (* x85 x52)) (* (- 1) (* x31 x76)) (* (- 1) (* x34 x77)) (* (- 1) (* x55 x86))) 0)) (>= (+ x86 (* (- 1) (* x75 x29)) (* (- 1) (* x76 x32)) (* (- 1) (* x84 x50)) (* (- 1) (* x85 x53)) (* (- 1) (* x86 x56)) (* (- 1) (* x35 x77))) 0)) (>= (+ x87 (* (- 1) (* x80 x33)) (* (- 1) (* x88 x51)) (* (- 1) (* x27 x78)) (* (- 1) (* x30 x79)) (* (- 1) (* x48 x87)) (* (- 1) (* x54 x89))) 0)) (>= (+ x88 (* (- 1) (* x78 x28)) (* (- 1) (* x88 x52)) (* (- 1) (* x31 x79)) (* (- 1) (* x34 x80)) (* (- 1) (* x49 x87)) (* (- 1) (* x55 x89))) 0)) (>= (+ x89 (* (- 1) (* x78 x29)) (* (- 1) (* x79 x32)) (* (- 1) (* x87 x50)) (* (- 1) (* x88 x53)) (* (- 1) (* x89 x56)) (* (- 1) (* x35 x80))) 0))) (and (and (and (and (and (and (and (and (>= (+ x90 (* (- 1) (* x72 x36)) (* (- 1) (* x74 x42)) (* (- 1) (* x90 x60)) (* (- 1) (* x91 x63)) (* (- 1) (* x92 x66)) (* (- 1) (* x39 x73))) 0) (>= (+ x91 (* (- 1) (* x74 x43)) (* (- 1) (* x91 x64)) (* (- 1) (* x92 x67)) (* (- 1) (* x37 x72)) (* (- 1) (* x40 x73)) (* (- 1) (* x61 x90))) 0)) (>= (+ x92 (* (- 1) (* x74 x44)) (* (- 1) (* x91 x65)) (* (- 1) (* x38 x72)) (* (- 1) (* x41 x73)) (* (- 1) (* x62 x90)) (* (- 1) (* x68 x92))) 0)) (>= (+ x93 (* (- 1) (* x75 x36)) (* (- 1) (* x76 x39)) (* (- 1) (* x93 x60)) (* (- 1) (* x95 x66)) (* (- 1) (* x42 x77)) (* (- 1) (* x63 x94))) 0)) (>= (+ x94 (* (- 1) (* x95 x67)) (* (- 1) (* x37 x75)) (* (- 1) (* x40 x76)) (* (- 1) (* x43 x77)) (* (- 1) (* x61 x93)) (* (- 1) (* x64 x94))) 0)) (>= (+ x95 (* (- 1) (* x75 x38)) (* (- 1) (* x95 x68)) (* (- 1) (* x41 x76)) (* (- 1) (* x44 x77)) (* (- 1) (* x62 x93)) (* (- 1) (* x65 x94))) 0)) (>= (+ x96 (* (- 1) (* x78 x36)) (* (- 1) (* x79 x39)) (* (- 1) (* x96 x60)) (* (- 1) (* x98 x66)) (* (- 1) (* x42 x80)) (* (- 1) (* x63 x97))) 0)) (>= (+ x97 (* (- 1) (* x80 x43)) (* (- 1) (* x98 x67)) (* (- 1) (* x37 x78)) (* (- 1) (* x40 x79)) (* (- 1) (* x61 x96)) (* (- 1) (* x64 x97))) 0)) (>= (+ x98 (* (- 1) (* x78 x38)) (* (- 1) (* x98 x68)) (* (- 1) (* x41 x79)) (* (- 1) (* x44 x80)) (* (- 1) (* x62 x96)) (* (- 1) (* x65 x97))) 0)))) (and (not (<= (+ x24 (* (- 1) x102) (* x27 x99) (* x28 x100) (* x101 x29)) 0)) (and (and (>= (+ x24 (* (- 1) x102) (* x27 x99) (* x28 x100) (* x101 x29)) 0) (>= (+ x25 (* (- 1) x103) (* x30 x99) (* x31 x100) (* x101 x32)) 0)) (>= (+ x26 (* (- 1) x104) (* x34 x100) (* x99 x33) (* x101 x35)) 0)))) (and (not (<= (+ x24 (* (- 1) x4) (* x37 x100) (* x57 x27) (* x58 x28) (* x59 x29) (* x99 x36) (* x101 x38)) 0)) (and (and (>= (+ x24 (* (- 1) x4) (* x37 x100) (* x57 x27) (* x58 x28) (* x59 x29) (* x99 x36) (* x101 x38)) 0) (>= (+ x25 (* (- 1) x5) (* x40 x100) (* x57 x30) (* x58 x31) (* x59 x32) (* x99 x39) (* x101 x41)) 0)) (>= (+ (* (- 1) x6) x26 (* x34 x58) (* x35 x59) (* x57 x33) (* x99 x42) (* x100 x43) (* x101 x44)) 0)))) (and (and (and (not (<= (+ (* x37 x58) (* x38 x59) (* x57 x27) (* x58 x28) (* x59 x29) (* x57 x36)) 0)) (and (and (>= (+ (* x37 x58) (* x38 x59) (* x57 x27) (* x58 x28) (* x59 x29) (* x57 x36)) 0) (>= (+ (* x40 x58) (* x41 x59) (* x57 x30) (* x58 x31) (* x59 x32) (* x57 x39)) 0)) (>= (+ (* x34 x58) (* x35 x59) (* x44 x59) (* x57 x33) (* x57 x42) (* x58 x43)) 0))) (and (and (and (and (and (and (and (and (>= (+ (* (- 1) x27) (* x27 x60) (* x28 x63) (* x66 x29)) 0) (>= (+ (* (- 1) x28) (* x27 x61) (* x29 x67) (* x64 x28)) 0)) (>= (+ (* (- 1) x29) (* x27 x62) (* x65 x28) (* x68 x29)) 0)) (>= (+ (* (- 1) x30) (* x30 x60) (* x31 x63) (* x32 x66)) 0)) (>= (+ (* (- 1) x31) (* x30 x61) (* x32 x67) (* x64 x31)) 0)) (>= (+ (* (- 1) x32) (* x30 x62) (* x31 x65) (* x68 x32)) 0)) (>= (+ (* (- 1) x33) (* x34 x63) (* x35 x66) (* x60 x33)) 0)) (>= (+ (* (- 1) x34) (* x35 x67) (* x61 x33) (* x64 x34)) 0)) (>= (+ (* (- 1) x35) (* x34 x65) (* x62 x33) (* x68 x35)) 0))) (and (and (and (and (and (and (and (and (>= (+ (* (- 1) x36) (* x36 x60) (* x37 x63) (* x38 x66)) 0) (>= (+ (* (- 1) x37) (* x38 x67) (* x61 x36) (* x64 x37)) 0)) (>= (+ (* (- 1) x38) (* x37 x65) (* x62 x36) (* x68 x38)) 0)) (>= (+ (* (- 1) x39) (* x39 x60) (* x40 x63) (* x41 x66)) 0)) (>= (+ (* (- 1) x40) (* x40 x64) (* x41 x67) (* x61 x39)) 0)) (>= (+ (* (- 1) x41) (* x40 x65) (* x62 x39) (* x68 x41)) 0)) (>= (+ (* (- 1) x42) (* x42 x60) (* x44 x66) (* x63 x43)) 0)) (>= (+ (* (- 1) x43) (* x44 x67) (* x61 x42) (* x64 x43)) 0)) (>= (+ (* (- 1) x44) (* x44 x68) (* x62 x42) (* x65 x43)) 0)))) (and (not (<= (+ (* (- 1) x99) x45 (* x48 x99) (* x49 x100) (* x101 x50)) 0)) (and (and (>= (+ (* (- 1) x99) x45 (* x48 x99) (* x49 x100) (* x101 x50)) 0) (>= (+ (* (- 1) x100) x46 (* x51 x99) (* x52 x100) (* x101 x53)) 0)) (>= (+ (* (- 1) x101) x47 (* x54 x99) (* x55 x100) (* x101 x56)) 0)))) (and (and (not (<= (+ x45 (* x57 x48) (* x58 x49) (* x59 x50)) 0)) (and (and (>= (+ x45 (* x57 x48) (* x58 x49) (* x59 x50)) 0) (>= (+ x46 (* x57 x51) (* x58 x52) (* x59 x53)) 0)) (>= (+ x47 (* x57 x54) (* x58 x55) (* x59 x56)) 0))) (and (and (and (and (and (and (and (and (>= (+ (* x48 x60) (* x49 x63) (* x66 x50)) 1) (>= (+ (* x50 x67) (* x61 x48) (* x64 x49)) 0)) (>= (+ (* x48 x62) (* x65 x49) (* x68 x50)) 0)) (>= (+ (* x51 x60) (* x52 x63) (* x66 x53)) 0)) (>= (+ (* x53 x67) (* x61 x51) (* x64 x52)) 1)) (>= (+ (* x51 x62) (* x65 x52) (* x68 x53)) 0)) (>= (+ (* x54 x60) (* x55 x63) (* x66 x56)) 0)) (>= (+ (* x54 x61) (* x56 x67) (* x64 x55)) 0)) (>= (+ (* x54 x62) (* x65 x55) (* x68 x56)) 1)))) (and (and (and (and (and (not (<= (+ (* (- 1) x13) x0 (* x4 x1) (* x5 x2) (* x6 x3)) 0)) (>= (+ (* (- 1) x13) x0 (* x4 x1) (* x5 x2) (* x6 x3)) 0)) (and (and (>= (+ x7 (* (- 1) x14)) 0) (>= (+ x8 (* (- 1) x15)) 0)) (>= (+ x9 (* (- 1) x16)) 0))) (and (and (and (not (<= (+ x0 (* (- 1) x17) (* x4 x1) (* x5 x2) (* x6 x3)) 0)) (>= (+ x0 (* (- 1) x17) (* x4 x1) (* x5 x2) (* x6 x3)) 0)) (and (and (>= (+ x7 (* (- 1) x18)) 0) (>= (+ x8 (* (- 1) x19)) 0)) (>= (+ (* (- 1) x20) x9) 0))) (and (and (>= (+ x10 (* (- 1) x21)) 0) (>= (+ x11 (* (- 1) x22)) 0)) (>= (+ (* (- 1) x23) x12) 0)))) (and (and (and (not (<= (+ (* (- 1) (* x3 x26)) (* (- 1) (* x7 x45)) (* (- 1) (* x8 x46)) (* x4 x1) (* x5 x2) (* x6 x3) (* (- 1) (* x24 x1)) (* (- 1) (* x25 x2)) (* (- 1) (* x47 x9)) (* (- 1) (* x57 x10)) (* (- 1) (* x58 x11)) (* (- 1) (* x59 x12))) 0)) (>= (+ (* (- 1) (* x3 x26)) (* (- 1) (* x7 x45)) (* (- 1) (* x8 x46)) (* x4 x1) (* x5 x2) (* x6 x3) (* (- 1) (* x24 x1)) (* (- 1) (* x25 x2)) (* (- 1) (* x47 x9)) (* (- 1) (* x57 x10)) (* (- 1) (* x58 x11)) (* (- 1) (* x59 x12))) 0)) (and (and (>= (+ x7 (* (- 1) (* x3 x33)) (* (- 1) (* x7 x48)) (* (- 1) (* x27 x1)) (* (- 1) (* x30 x2)) (* (- 1) (* x51 x8)) (* (- 1) (* x54 x9))) 0) (>= (+ x8 (* (- 1) (* x3 x34)) (* (- 1) (* x7 x49)) (* (- 1) (* x28 x1)) (* (- 1) (* x31 x2)) (* (- 1) (* x52 x8)) (* (- 1) (* x55 x9))) 0)) (>= (+ x9 (* (- 1) (* x1 x29)) (* (- 1) (* x3 x35)) (* (- 1) (* x7 x50)) (* (- 1) (* x8 x53)) (* (- 1) (* x32 x2)) (* (- 1) (* x56 x9))) 0))) (and (and (>= (+ x10 (* (- 1) (* x1 x36)) (* (- 1) (* x3 x42)) (* (- 1) (* x10 x60)) (* (- 1) (* x11 x63)) (* (- 1) (* x39 x2)) (* (- 1) (* x66 x12))) 0) (>= (+ x11 (* (- 1) (* x3 x43)) (* (- 1) (* x10 x61)) (* (- 1) (* x12 x67)) (* (- 1) (* x37 x1)) (* (- 1) (* x40 x2)) (* (- 1) (* x64 x11))) 0)) (>= (+ x12 (* (- 1) (* x3 x44)) (* (- 1) (* x10 x62)) (* (- 1) (* x38 x1)) (* (- 1) (* x41 x2)) (* (- 1) (* x65 x11)) (* (- 1) (* x68 x12))) 0)))) (and (and (and (not (<= (+ (* x20 x59) (* x23 x59) (* x57 x18) (* x58 x19) (* x57 x21) (* x58 x22)) 0)) (>= (+ (* x20 x59) (* x23 x59) (* x57 x18) (* x58 x19) (* x57 x21) (* x58 x22)) 0)) (and (and (>= (+ (* (- 1) x18) (* x18 x60) (* x20 x66) (* x63 x19)) 0) (>= (+ (* (- 1) x19) (* x20 x67) (* x61 x18) (* x64 x19)) 0)) (>= (+ (* (- 1) x20) (* x20 x68) (* x62 x18) (* x65 x19)) 0))) (and (and (>= (+ (* (- 1) x21) (* x21 x60) (* x22 x63) (* x23 x66)) 0) (>= (+ (* (- 1) x22) (* x23 x67) (* x61 x21) (* x64 x22)) 0)) (>= (+ (* (- 1) x23) (* x21 x62) (* x23 x68) (* x65 x22)) 0))))))
(exit)
(check-sat)
