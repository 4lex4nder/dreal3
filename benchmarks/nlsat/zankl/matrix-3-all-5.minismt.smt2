(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun x6 () Real)
(declare-fun x23 () Real)
(declare-fun x40 () Real)
(declare-fun x57 () Real)
(declare-fun x74 () Real)
(declare-fun x13 () Real)
(declare-fun x30 () Real)
(declare-fun x47 () Real)
(declare-fun x64 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x37 () Real)
(declare-fun x54 () Real)
(declare-fun x71 () Real)
(declare-fun x10 () Real)
(declare-fun x27 () Real)
(declare-fun x44 () Real)
(declare-fun x61 () Real)
(declare-fun x0 () Real)
(declare-fun x78 () Real)
(declare-fun x17 () Real)
(declare-fun x34 () Real)
(declare-fun x51 () Real)
(declare-fun x68 () Real)
(declare-fun x7 () Real)
(declare-fun x24 () Real)
(declare-fun x41 () Real)
(declare-fun x58 () Real)
(declare-fun x75 () Real)
(declare-fun x14 () Real)
(declare-fun x31 () Real)
(declare-fun x48 () Real)
(declare-fun x65 () Real)
(declare-fun x4 () Real)
(declare-fun x21 () Real)
(declare-fun x38 () Real)
(declare-fun x55 () Real)
(declare-fun x72 () Real)
(declare-fun x11 () Real)
(declare-fun x28 () Real)
(declare-fun x45 () Real)
(declare-fun x62 () Real)
(declare-fun x1 () Real)
(declare-fun x79 () Real)
(declare-fun x18 () Real)
(declare-fun x35 () Real)
(declare-fun x52 () Real)
(declare-fun x69 () Real)
(declare-fun x8 () Real)
(declare-fun x25 () Real)
(declare-fun x42 () Real)
(declare-fun x59 () Real)
(declare-fun x76 () Real)
(declare-fun x15 () Real)
(declare-fun x32 () Real)
(declare-fun x49 () Real)
(declare-fun x66 () Real)
(declare-fun x5 () Real)
(declare-fun x22 () Real)
(declare-fun x39 () Real)
(declare-fun x56 () Real)
(declare-fun x73 () Real)
(declare-fun x12 () Real)
(declare-fun x29 () Real)
(declare-fun x46 () Real)
(declare-fun x63 () Real)
(declare-fun x2 () Real)
(declare-fun x80 () Real)
(declare-fun x19 () Real)
(declare-fun x36 () Real)
(declare-fun x53 () Real)
(declare-fun x70 () Real)
(declare-fun x9 () Real)
(declare-fun x26 () Real)
(declare-fun x43 () Real)
(declare-fun x60 () Real)
(declare-fun x77 () Real)
(declare-fun x16 () Real)
(declare-fun x33 () Real)
(declare-fun x50 () Real)
(declare-fun x67 () Real)
(assert (>= x6 0))
(assert (>= x23 0))
(assert (>= x40 0))
(assert (>= x57 0))
(assert (>= x74 0))
(assert (>= x13 0))
(assert (>= x30 0))
(assert (>= x47 0))
(assert (>= x64 0))
(assert (>= x3 0))
(assert (>= x20 0))
(assert (>= x37 0))
(assert (>= x54 0))
(assert (>= x71 0))
(assert (>= x10 0))
(assert (>= x27 0))
(assert (>= x44 0))
(assert (>= x61 0))
(assert (>= x0 0))
(assert (>= x78 0))
(assert (>= x17 0))
(assert (>= x34 0))
(assert (>= x51 0))
(assert (>= x68 0))
(assert (>= x7 0))
(assert (>= x24 0))
(assert (>= x41 0))
(assert (>= x58 0))
(assert (>= x75 0))
(assert (>= x14 0))
(assert (>= x31 0))
(assert (>= x48 0))
(assert (>= x65 0))
(assert (>= x4 0))
(assert (>= x21 0))
(assert (>= x38 0))
(assert (>= x55 0))
(assert (>= x72 0))
(assert (>= x11 0))
(assert (>= x28 0))
(assert (>= x45 0))
(assert (>= x62 0))
(assert (>= x1 0))
(assert (>= x79 0))
(assert (>= x18 0))
(assert (>= x35 0))
(assert (>= x52 0))
(assert (>= x69 0))
(assert (>= x8 0))
(assert (>= x25 0))
(assert (>= x42 0))
(assert (>= x59 0))
(assert (>= x76 0))
(assert (>= x15 0))
(assert (>= x32 0))
(assert (>= x49 0))
(assert (>= x66 0))
(assert (>= x5 0))
(assert (>= x22 0))
(assert (>= x39 0))
(assert (>= x56 0))
(assert (>= x73 0))
(assert (>= x12 0))
(assert (>= x29 0))
(assert (>= x46 0))
(assert (>= x63 0))
(assert (>= x2 0))
(assert (>= x80 0))
(assert (>= x19 0))
(assert (>= x36 0))
(assert (>= x53 0))
(assert (>= x70 0))
(assert (>= x9 0))
(assert (>= x26 0))
(assert (>= x43 0))
(assert (>= x60 0))
(assert (>= x77 0))
(assert (>= x16 0))
(assert (>= x33 0))
(assert (>= x50 0))
(assert (>= x67 0))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (not (<= (+ (* (- 1) x10) x0 (* x4 x1) (* x5 x2) (* x6 x3)) 0)) (>= (+ (* (- 1) x10) x0 (* x4 x1) (* x5 x2) (* x6 x3)) 0)) (and (and (>= (+ x7 (* (- 1) x11)) 0) (>= (+ x8 (* (- 1) x12)) 0)) (>= (+ (* (- 1) x13) x9) 0))) (and (and (not (<= (+ x0 (* (- 1) x14) (* x4 x1) (* x5 x2) (* x6 x3)) 0)) (>= (+ x0 (* (- 1) x14) (* x4 x1) (* x5 x2) (* x6 x3)) 0)) (and (and (>= (+ x7 (* (- 1) x15)) 0) (>= (+ x8 (* (- 1) x16)) 0)) (>= (+ (* (- 1) x17) x9) 0)))) (and (and (not (<= (+ (* (- 1) (* x1 x18)) (* (- 1) (* x2 x19)) (* (- 1) (* x3 x20)) (* x4 x1) (* x5 x2) (* x6 x3) (* (- 1) (* x30 x7)) (* (- 1) (* x31 x8)) (* (- 1) (* x32 x9))) 0)) (>= (+ (* (- 1) (* x1 x18)) (* (- 1) (* x2 x19)) (* (- 1) (* x3 x20)) (* x4 x1) (* x5 x2) (* x6 x3) (* (- 1) (* x30 x7)) (* (- 1) (* x31 x8)) (* (- 1) (* x32 x9))) 0)) (and (and (>= (+ x7 (* (- 1) (* x3 x27)) (* (- 1) (* x7 x33)) (* (- 1) (* x8 x36)) (* (- 1) (* x21 x1)) (* (- 1) (* x24 x2)) (* (- 1) (* x39 x9))) 0) (>= (+ x8 (* (- 1) (* x1 x22)) (* (- 1) (* x3 x28)) (* (- 1) (* x25 x2)) (* (- 1) (* x34 x7)) (* (- 1) (* x37 x8)) (* (- 1) (* x40 x9))) 0)) (>= (+ x9 (* (- 1) (* x2 x26)) (* (- 1) (* x3 x29)) (* (- 1) (* x7 x35)) (* (- 1) (* x23 x1)) (* (- 1) (* x38 x8)) (* (- 1) (* x41 x9))) 0)))) (and (and (not (<= (+ (* x42 x15) (* x43 x16) (* x44 x17) (* x45 x42 x15) (* x15 x46 x43) (* x47 x44 x15) (* x48 x42 x16) (* x49 x43 x16) (* x44 x16 x50) (* x17 x51 x42) (* x17 x52 x43) (* x44 x17 x53)) 0)) (>= (+ (* x42 x15) (* x43 x16) (* x44 x17) (* x45 x42 x15) (* x15 x46 x43) (* x47 x44 x15) (* x48 x42 x16) (* x49 x43 x16) (* x44 x16 x50) (* x17 x51 x42) (* x17 x52 x43) (* x44 x17 x53)) 0)) (and (and (>= (+ (* (- 1) x15) (* x45 x45 x15) (* x47 x51 x15) (* x48 x15 x46) (* x48 x45 x16) (* x48 x49 x16) (* x51 x16 x50) (* x17 x51 x45) (* x17 x48 x52) (* x17 x51 x53)) 0) (>= (+ (* (- 1) x16) (* x45 x15 x46) (* x47 x52 x15) (* x15 x49 x46) (* x48 x46 x16) (* x49 x49 x16) (* x52 x16 x50) (* x17 x51 x46) (* x17 x52 x49) (* x17 x52 x53)) 0)) (>= (+ (* (- 1) x17) (* x15 x46 x50) (* x47 x15 x53) (* x47 x45 x15) (* x49 x16 x50) (* x47 x48 x16) (* x53 x16 x50) (* x47 x17 x51) (* x17 x52 x50) (* x17 x53 x53)) 0)))) (and (and (not (<= (+ (* (- 1) (* x57 x18)) (* (- 1) (* x58 x19)) (* (- 1) (* x68 x32)) (* x57 x4) (* x58 x5) (* x6 x59) (* (- 1) (* x20 x59)) (* (- 1) (* x30 x66)) (* (- 1) (* x31 x67))) 0)) (and (and (>= (+ (* (- 1) (* x57 x18)) (* (- 1) (* x58 x19)) (* (- 1) (* x68 x32)) (* x57 x4) (* x58 x5) (* x6 x59) (* (- 1) (* x20 x59)) (* (- 1) (* x30 x66)) (* (- 1) (* x31 x67))) 0) (>= (+ (* x61 x5) (* (- 1) (* x61 x19)) (* (- 1) (* x71 x32)) (* x4 x60) (* x6 x62) (* (- 1) (* x18 x60)) (* (- 1) (* x20 x62)) (* (- 1) (* x30 x69)) (* (- 1) (* x31 x70))) 0)) (>= (+ (* x64 x5) (* (- 1) (* x64 x19)) (* (- 1) (* x74 x32)) (* x4 x63) (* x6 x65) (* (- 1) (* x18 x63)) (* (- 1) (* x20 x65)) (* (- 1) (* x30 x72)) (* (- 1) (* x31 x73))) 0))) (and (and (and (and (and (and (and (and (>= (+ x66 (* (- 1) (* x57 x21)) (* (- 1) (* x66 x33)) (* (- 1) (* x68 x39)) (* (- 1) (* x24 x58)) (* (- 1) (* x27 x59)) (* (- 1) (* x36 x67))) 0) (>= (+ x67 (* (- 1) (* x57 x22)) (* (- 1) (* x58 x25)) (* (- 1) (* x28 x59)) (* (- 1) (* x34 x66)) (* (- 1) (* x37 x67)) (* (- 1) (* x40 x68))) 0)) (>= (+ x68 (* (- 1) (* x58 x26)) (* (- 1) (* x59 x29)) (* (- 1) (* x68 x41)) (* (- 1) (* x23 x57)) (* (- 1) (* x35 x66)) (* (- 1) (* x38 x67))) 0)) (>= (+ x69 (* (- 1) (* x61 x24)) (* (- 1) (* x69 x33)) (* (- 1) (* x71 x39)) (* (- 1) (* x21 x60)) (* (- 1) (* x27 x62)) (* (- 1) (* x36 x70))) 0)) (>= (+ x70 (* (- 1) (* x61 x25)) (* (- 1) (* x22 x60)) (* (- 1) (* x28 x62)) (* (- 1) (* x34 x69)) (* (- 1) (* x37 x70)) (* (- 1) (* x40 x71))) 0)) (>= (+ x71 (* (- 1) (* x61 x26)) (* (- 1) (* x62 x29)) (* (- 1) (* x71 x41)) (* (- 1) (* x23 x60)) (* (- 1) (* x35 x69)) (* (- 1) (* x38 x70))) 0)) (>= (+ x72 (* (- 1) (* x64 x24)) (* (- 1) (* x72 x33)) (* (- 1) (* x73 x36)) (* (- 1) (* x74 x39)) (* (- 1) (* x21 x63)) (* (- 1) (* x27 x65))) 0)) (>= (+ x73 (* (- 1) (* x64 x25)) (* (- 1) (* x65 x28)) (* (- 1) (* x22 x63)) (* (- 1) (* x34 x72)) (* (- 1) (* x37 x73)) (* (- 1) (* x40 x74))) 0)) (>= (+ x74 (* (- 1) (* x64 x26)) (* (- 1) (* x65 x29)) (* (- 1) (* x72 x35)) (* (- 1) (* x74 x41)) (* (- 1) (* x23 x63)) (* (- 1) (* x38 x73))) 0)))) (and (not (<= (+ (* (- 1) x78) x18 (* x23 x77) (* x75 x21) (* x76 x22)) 0)) (and (and (>= (+ (* (- 1) x78) x18 (* x23 x77) (* x75 x21) (* x76 x22)) 0) (>= (+ (* (- 1) x79) x19 (* x24 x75) (* x25 x76) (* x26 x77)) 0)) (>= (+ x20 (* (- 1) x80) (* x27 x75) (* x28 x76) (* x29 x77)) 0)))) (and (not (<= (+ (* (- 1) x4) x18 (* x21 x42) (* x22 x43) (* x23 x44) (* x47 x21 x77) (* x75 x21 x45) (* x21 x76 x46) (* x75 x48 x22) (* x76 x49 x22) (* x22 x77 x50) (* x23 x51 x75) (* x23 x52 x76) (* x23 x53 x77)) 0)) (and (and (>= (+ (* (- 1) x4) x18 (* x21 x42) (* x22 x43) (* x23 x44) (* x47 x21 x77) (* x75 x21 x45) (* x21 x76 x46) (* x75 x48 x22) (* x76 x49 x22) (* x22 x77 x50) (* x23 x51 x75) (* x23 x52 x76) (* x23 x53 x77)) 0) (>= (+ (* (- 1) x5) x19 (* x24 x42) (* x25 x43) (* x44 x26) (* x47 x24 x77) (* x24 x75 x45) (* x24 x76 x46) (* x75 x48 x25) (* x25 x76 x49) (* x25 x77 x50) (* x51 x75 x26) (* x52 x76 x26) (* x53 x26 x77)) 0)) (>= (+ (* (- 1) x6) x20 (* x27 x42) (* x28 x43) (* x44 x29) (* x47 x27 x77) (* x27 x75 x45) (* x27 x76 x46) (* x75 x48 x28) (* x28 x76 x49) (* x28 x77 x50) (* x51 x75 x29) (* x52 x76 x29) (* x29 x53 x77)) 0)))) (and (and (not (<= (+ (* x21 x42) (* x22 x43) (* x23 x44) (* x21 x45 x42) (* x21 x46 x43) (* x47 x44 x21) (* x48 x42 x22) (* x49 x22 x43) (* x44 x22 x50) (* x23 x51 x42) (* x23 x52 x43) (* x23 x44 x53)) 0)) (and (and (>= (+ (* x21 x42) (* x22 x43) (* x23 x44) (* x21 x45 x42) (* x21 x46 x43) (* x47 x44 x21) (* x48 x42 x22) (* x49 x22 x43) (* x44 x22 x50) (* x23 x51 x42) (* x23 x52 x43) (* x23 x44 x53)) 0) (>= (+ (* x24 x42) (* x25 x43) (* x44 x26) (* x24 x45 x42) (* x24 x46 x43) (* x47 x44 x24) (* x48 x25 x42) (* x25 x49 x43) (* x44 x25 x50) (* x51 x42 x26) (* x52 x26 x43) (* x44 x53 x26)) 0)) (>= (+ (* x27 x42) (* x28 x43) (* x44 x29) (* x27 x45 x42) (* x27 x46 x43) (* x47 x27 x44) (* x48 x28 x42) (* x28 x49 x43) (* x44 x28 x50) (* x51 x42 x29) (* x52 x29 x43) (* x44 x29 x53)) 0))) (and (and (and (and (and (and (and (and (>= (+ (* (- 1) x21) (* x21 x45 x45) (* x47 x51 x21) (* x48 x21 x46) (* x48 x45 x22) (* x48 x49 x22) (* x51 x22 x50) (* x23 x51 x45) (* x23 x48 x52) (* x23 x51 x53)) 0) (>= (+ (* (- 1) x22) (* x21 x45 x46) (* x47 x21 x52) (* x21 x49 x46) (* x48 x22 x46) (* x49 x49 x22) (* x52 x22 x50) (* x23 x51 x46) (* x23 x52 x49) (* x23 x52 x53)) 0)) (>= (+ (* (- 1) x23) (* x21 x46 x50) (* x47 x21 x53) (* x47 x21 x45) (* x49 x22 x50) (* x47 x48 x22) (* x22 x53 x50) (* x23 x47 x51) (* x23 x52 x50) (* x23 x53 x53)) 0)) (>= (+ (* (- 1) x24) (* x24 x45 x45) (* x47 x51 x24) (* x24 x48 x46) (* x48 x45 x25) (* x48 x25 x49) (* x51 x25 x50) (* x51 x45 x26) (* x48 x52 x26) (* x51 x53 x26)) 0)) (>= (+ (* (- 1) x25) (* x24 x45 x46) (* x47 x24 x52) (* x24 x49 x46) (* x48 x25 x46) (* x25 x49 x49) (* x52 x25 x50) (* x51 x46 x26) (* x52 x49 x26) (* x52 x53 x26)) 0)) (>= (+ (* (- 1) x26) (* x24 x46 x50) (* x47 x24 x53) (* x47 x24 x45) (* x25 x49 x50) (* x47 x48 x25) (* x25 x53 x50) (* x47 x51 x26) (* x52 x26 x50) (* x53 x53 x26)) 0)) (>= (+ (* (- 1) x27) (* x27 x45 x45) (* x47 x27 x51) (* x27 x48 x46) (* x48 x28 x45) (* x48 x28 x49) (* x51 x28 x50) (* x51 x45 x29) (* x48 x52 x29) (* x51 x29 x53)) 0)) (>= (+ (* (- 1) x28) (* x27 x45 x46) (* x47 x27 x52) (* x27 x49 x46) (* x48 x28 x46) (* x28 x49 x49) (* x28 x52 x50) (* x51 x29 x46) (* x52 x49 x29) (* x52 x29 x53)) 0)) (>= (+ (* (- 1) x29) (* x27 x46 x50) (* x47 x27 x53) (* x47 x27 x45) (* x28 x49 x50) (* x47 x48 x28) (* x28 x53 x50) (* x47 x51 x29) (* x52 x29 x50) (* x29 x53 x53)) 0)))) (and (not (<= (+ x30 (* (- 1) x75) (* x34 x76) (* x35 x77) (* x75 x33)) 0)) (and (and (>= (+ x30 (* (- 1) x75) (* x34 x76) (* x35 x77) (* x75 x33)) 0) (>= (+ x31 (* (- 1) x76) (* x37 x76) (* x38 x77) (* x75 x36)) 0)) (>= (+ x32 (* (- 1) x77) (* x40 x76) (* x41 x77) (* x75 x39)) 0)))) (and (and (not (<= (+ x30 (* x34 x43) (* x42 x33) (* x44 x35)) 0)) (and (and (>= (+ x30 (* x34 x43) (* x42 x33) (* x44 x35)) 0) (>= (+ x31 (* x37 x43) (* x42 x36) (* x44 x38)) 0)) (>= (+ x32 (* x40 x43) (* x42 x39) (* x44 x41)) 0))) (and (and (and (and (and (and (and (and (>= (+ (* x34 x48) (* x45 x33) (* x51 x35)) 1) (>= (+ (* x34 x49) (* x35 x52) (* x46 x33)) 0)) (>= (+ (* x34 x50) (* x35 x53) (* x47 x33)) 0)) (>= (+ (* x37 x48) (* x45 x36) (* x51 x38)) 0)) (>= (+ (* x37 x49) (* x38 x52) (* x46 x36)) 1)) (>= (+ (* x37 x50) (* x38 x53) (* x47 x36)) 0)) (>= (+ (* x40 x48) (* x45 x39) (* x51 x41)) 0)) (>= (+ (* x39 x46) (* x40 x49) (* x41 x52)) 0)) (>= (+ (* x40 x50) (* x41 x53) (* x47 x39)) 1)))) (and (and (and (and (and (not (<= (+ (* (- 1) x10) x0 (* x4 x1) (* x5 x2) (* x6 x3)) 0)) (>= (+ (* (- 1) x10) x0 (* x4 x1) (* x5 x2) (* x6 x3)) 0)) (and (and (>= (+ x7 (* (- 1) x11)) 0) (>= (+ x8 (* (- 1) x12)) 0)) (>= (+ (* (- 1) x13) x9) 0))) (and (and (not (<= (+ x0 (* (- 1) x14) (* x4 x1) (* x5 x2) (* x6 x3)) 0)) (>= (+ x0 (* (- 1) x14) (* x4 x1) (* x5 x2) (* x6 x3)) 0)) (and (and (>= (+ x7 (* (- 1) x15)) 0) (>= (+ x8 (* (- 1) x16)) 0)) (>= (+ (* (- 1) x17) x9) 0)))) (and (and (not (<= (+ (* (- 1) (* x1 x18)) (* (- 1) (* x2 x19)) (* (- 1) (* x3 x20)) (* x4 x1) (* x5 x2) (* x6 x3) (* (- 1) (* x30 x7)) (* (- 1) (* x31 x8)) (* (- 1) (* x32 x9))) 0)) (>= (+ (* (- 1) (* x1 x18)) (* (- 1) (* x2 x19)) (* (- 1) (* x3 x20)) (* x4 x1) (* x5 x2) (* x6 x3) (* (- 1) (* x30 x7)) (* (- 1) (* x31 x8)) (* (- 1) (* x32 x9))) 0)) (and (and (>= (+ x7 (* (- 1) (* x3 x27)) (* (- 1) (* x7 x33)) (* (- 1) (* x8 x36)) (* (- 1) (* x21 x1)) (* (- 1) (* x24 x2)) (* (- 1) (* x39 x9))) 0) (>= (+ x8 (* (- 1) (* x1 x22)) (* (- 1) (* x3 x28)) (* (- 1) (* x25 x2)) (* (- 1) (* x34 x7)) (* (- 1) (* x37 x8)) (* (- 1) (* x40 x9))) 0)) (>= (+ x9 (* (- 1) (* x2 x26)) (* (- 1) (* x3 x29)) (* (- 1) (* x7 x35)) (* (- 1) (* x23 x1)) (* (- 1) (* x38 x8)) (* (- 1) (* x41 x9))) 0)))) (and (and (not (<= (+ (* x42 x15) (* x43 x16) (* x44 x17) (* x45 x42 x15) (* x15 x46 x43) (* x47 x44 x15) (* x48 x42 x16) (* x49 x43 x16) (* x44 x16 x50) (* x17 x51 x42) (* x17 x52 x43) (* x44 x17 x53)) 0)) (>= (+ (* x42 x15) (* x43 x16) (* x44 x17) (* x45 x42 x15) (* x15 x46 x43) (* x47 x44 x15) (* x48 x42 x16) (* x49 x43 x16) (* x44 x16 x50) (* x17 x51 x42) (* x17 x52 x43) (* x44 x17 x53)) 0)) (and (and (>= (+ (* (- 1) x15) (* x45 x45 x15) (* x47 x51 x15) (* x48 x15 x46) (* x48 x45 x16) (* x48 x49 x16) (* x51 x16 x50) (* x17 x51 x45) (* x17 x48 x52) (* x17 x51 x53)) 0) (>= (+ (* (- 1) x16) (* x45 x15 x46) (* x47 x52 x15) (* x15 x49 x46) (* x48 x46 x16) (* x49 x49 x16) (* x52 x16 x50) (* x17 x51 x46) (* x17 x52 x49) (* x17 x52 x53)) 0)) (>= (+ (* (- 1) x17) (* x15 x46 x50) (* x47 x15 x53) (* x47 x45 x15) (* x49 x16 x50) (* x47 x48 x16) (* x53 x16 x50) (* x47 x17 x51) (* x17 x52 x50) (* x17 x53 x53)) 0))))))
(exit)
(check-sat)
