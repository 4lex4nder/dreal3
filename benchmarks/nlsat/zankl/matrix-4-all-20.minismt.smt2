(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x6 () Real)
(declare-fun x84 () Real)
(declare-fun x23 () Real)
(declare-fun x101 () Real)
(declare-fun x40 () Real)
(declare-fun x118 () Real)
(declare-fun x57 () Real)
(declare-fun x74 () Real)
(declare-fun x13 () Real)
(declare-fun x91 () Real)
(declare-fun x30 () Real)
(declare-fun x47 () Real)
(declare-fun x125 () Real)
(declare-fun x64 () Real)
(declare-fun x3 () Real)
(declare-fun x81 () Real)
(declare-fun x20 () Real)
(declare-fun x98 () Real)
(declare-fun x37 () Real)
(declare-fun x54 () Real)
(declare-fun x132 () Real)
(declare-fun x71 () Real)
(declare-fun x10 () Real)
(declare-fun x88 () Real)
(declare-fun x27 () Real)
(declare-fun x44 () Real)
(declare-fun x122 () Real)
(declare-fun x61 () Real)
(declare-fun x0 () Real)
(declare-fun x78 () Real)
(declare-fun x17 () Real)
(declare-fun x95 () Real)
(declare-fun x34 () Real)
(declare-fun x51 () Real)
(declare-fun x129 () Real)
(declare-fun x68 () Real)
(declare-fun x7 () Real)
(declare-fun x85 () Real)
(declare-fun x24 () Real)
(declare-fun x41 () Real)
(declare-fun x119 () Real)
(declare-fun x58 () Real)
(declare-fun x75 () Real)
(declare-fun x14 () Real)
(declare-fun x92 () Real)
(declare-fun x31 () Real)
(declare-fun x48 () Real)
(declare-fun x126 () Real)
(declare-fun x65 () Real)
(declare-fun x4 () Real)
(declare-fun x82 () Real)
(declare-fun x21 () Real)
(declare-fun x99 () Real)
(declare-fun x38 () Real)
(declare-fun x55 () Real)
(declare-fun x133 () Real)
(declare-fun x72 () Real)
(declare-fun x11 () Real)
(declare-fun x89 () Real)
(declare-fun x28 () Real)
(declare-fun x45 () Real)
(declare-fun x123 () Real)
(declare-fun x62 () Real)
(declare-fun x1 () Real)
(declare-fun x79 () Real)
(declare-fun x18 () Real)
(declare-fun x96 () Real)
(declare-fun x35 () Real)
(declare-fun x52 () Real)
(declare-fun x130 () Real)
(declare-fun x69 () Real)
(declare-fun x8 () Real)
(declare-fun x86 () Real)
(declare-fun x25 () Real)
(declare-fun x42 () Real)
(declare-fun x120 () Real)
(declare-fun x59 () Real)
(declare-fun x76 () Real)
(declare-fun x15 () Real)
(declare-fun x93 () Real)
(declare-fun x32 () Real)
(declare-fun x49 () Real)
(declare-fun x127 () Real)
(declare-fun x66 () Real)
(declare-fun x5 () Real)
(declare-fun x83 () Real)
(declare-fun x22 () Real)
(declare-fun x100 () Real)
(declare-fun x39 () Real)
(declare-fun x56 () Real)
(declare-fun x73 () Real)
(declare-fun x12 () Real)
(declare-fun x90 () Real)
(declare-fun x29 () Real)
(declare-fun x46 () Real)
(declare-fun x124 () Real)
(declare-fun x63 () Real)
(declare-fun x2 () Real)
(declare-fun x80 () Real)
(declare-fun x19 () Real)
(declare-fun x97 () Real)
(declare-fun x36 () Real)
(declare-fun x53 () Real)
(declare-fun x131 () Real)
(declare-fun x70 () Real)
(declare-fun x9 () Real)
(declare-fun x87 () Real)
(declare-fun x26 () Real)
(declare-fun x43 () Real)
(declare-fun x121 () Real)
(declare-fun x60 () Real)
(declare-fun x77 () Real)
(declare-fun x16 () Real)
(declare-fun x94 () Real)
(declare-fun x33 () Real)
(declare-fun x50 () Real)
(declare-fun x128 () Real)
(declare-fun x67 () Real)
(assert (>= x6 0))
(assert (>= x84 0))
(assert (>= x23 0))
(assert (>= x101 0))
(assert (>= x40 0))
(assert (>= x118 0))
(assert (>= x57 0))
(assert (>= x74 0))
(assert (>= x13 0))
(assert (>= x91 0))
(assert (>= x30 0))
(assert (>= x47 0))
(assert (>= x125 0))
(assert (>= x64 0))
(assert (>= x3 0))
(assert (>= x81 0))
(assert (>= x20 0))
(assert (>= x98 0))
(assert (>= x37 0))
(assert (>= x54 0))
(assert (>= x132 0))
(assert (>= x71 0))
(assert (>= x10 0))
(assert (>= x88 0))
(assert (>= x27 0))
(assert (>= x44 0))
(assert (>= x122 0))
(assert (>= x61 0))
(assert (>= x0 0))
(assert (>= x78 0))
(assert (>= x17 0))
(assert (>= x95 0))
(assert (>= x34 0))
(assert (>= x51 0))
(assert (>= x129 0))
(assert (>= x68 0))
(assert (>= x7 0))
(assert (>= x85 0))
(assert (>= x24 0))
(assert (>= x41 0))
(assert (>= x119 0))
(assert (>= x58 0))
(assert (>= x75 0))
(assert (>= x14 0))
(assert (>= x92 0))
(assert (>= x31 0))
(assert (>= x48 0))
(assert (>= x126 0))
(assert (>= x65 0))
(assert (>= x4 0))
(assert (>= x82 0))
(assert (>= x21 0))
(assert (>= x99 0))
(assert (>= x38 0))
(assert (>= x55 0))
(assert (>= x133 0))
(assert (>= x72 0))
(assert (>= x11 0))
(assert (>= x89 0))
(assert (>= x28 0))
(assert (>= x45 0))
(assert (>= x123 0))
(assert (>= x62 0))
(assert (>= x1 0))
(assert (>= x79 0))
(assert (>= x18 0))
(assert (>= x96 0))
(assert (>= x35 0))
(assert (>= x52 0))
(assert (>= x130 0))
(assert (>= x69 0))
(assert (>= x8 0))
(assert (>= x86 0))
(assert (>= x25 0))
(assert (>= x42 0))
(assert (>= x120 0))
(assert (>= x59 0))
(assert (>= x76 0))
(assert (>= x15 0))
(assert (>= x93 0))
(assert (>= x32 0))
(assert (>= x49 0))
(assert (>= x127 0))
(assert (>= x66 0))
(assert (>= x5 0))
(assert (>= x83 0))
(assert (>= x22 0))
(assert (>= x100 0))
(assert (>= x39 0))
(assert (>= x56 0))
(assert (>= x73 0))
(assert (>= x12 0))
(assert (>= x90 0))
(assert (>= x29 0))
(assert (>= x46 0))
(assert (>= x124 0))
(assert (>= x63 0))
(assert (>= x2 0))
(assert (>= x80 0))
(assert (>= x19 0))
(assert (>= x97 0))
(assert (>= x36 0))
(assert (>= x53 0))
(assert (>= x131 0))
(assert (>= x70 0))
(assert (>= x9 0))
(assert (>= x87 0))
(assert (>= x26 0))
(assert (>= x43 0))
(assert (>= x121 0))
(assert (>= x60 0))
(assert (>= x77 0))
(assert (>= x16 0))
(assert (>= x94 0))
(assert (>= x33 0))
(assert (>= x50 0))
(assert (>= x128 0))
(assert (>= x67 0))
(assert (and (and (and (and (and (and (and (not (<= (+ x0 (* (- 1) x21) (* x1 x5) (* x3 x7) (* x4 x8) (* x10 x14) (* x11 x15) (* x12 x16) (* x6 x2) (* x13 x9)) 0)) (>= (+ x0 (* (- 1) x21) (* x1 x5) (* x3 x7) (* x4 x8) (* x10 x14) (* x11 x15) (* x12 x16) (* x6 x2) (* x13 x9)) 0)) (and (and (and (>= (+ x17 (* (- 1) x22)) 0) (>= (+ (* (- 1) x23) x18) 0)) (>= (+ (* (- 1) x24) x19) 0)) (>= (+ x20 (* (- 1) x25)) 0))) (and (and (not (<= (+ (* x1 x5) (* x3 x7) (* x4 x8) (* x10 x14) (* x11 x15) (* x12 x16) (* (- 1) (* x1 x26)) (* (- 1) (* x3 x28)) (* (- 1) (* x4 x29)) (* (- 1) (* x9 x26)) (* (- 1) (* x10 x27)) (* (- 1) (* x11 x28)) (* (- 1) (* x12 x29)) (* x6 x2) (* x13 x9) (* (- 1) (* x27 x2))) 0)) (>= (+ (* x1 x5) (* x3 x7) (* x4 x8) (* x10 x14) (* x11 x15) (* x12 x16) (* (- 1) (* x1 x26)) (* (- 1) (* x3 x28)) (* (- 1) (* x4 x29)) (* (- 1) (* x9 x26)) (* (- 1) (* x10 x27)) (* (- 1) (* x11 x28)) (* (- 1) (* x12 x29)) (* x6 x2) (* x13 x9) (* (- 1) (* x27 x2))) 0)) (and (and (and (>= (+ (* (- 1) (* x3 x38)) (* (- 1) (* x4 x42)) (* (- 1) (* x10 x34)) (* (- 1) (* x30 x1)) (* (- 1) (* x34 x2)) (* (- 1) (* x30 x9)) (* (- 1) (* x38 x11)) (* (- 1) (* x42 x12))) 0) (>= (+ (* (- 1) (* x3 x39)) (* (- 1) (* x4 x43)) (* (- 1) (* x10 x35)) (* (- 1) (* x11 x39)) (* (- 1) (* x12 x43)) (* (- 1) (* x31 x1)) (* (- 1) (* x35 x2)) (* (- 1) (* x31 x9))) 0)) (>= (+ (* (- 1) (* x1 x32)) (* (- 1) (* x2 x36)) (* (- 1) (* x10 x36)) (* (- 1) (* x40 x3)) (* (- 1) (* x44 x4)) (* (- 1) (* x32 x9)) (* (- 1) (* x40 x11)) (* (- 1) (* x44 x12))) 0)) (>= (+ (* (- 1) (* x1 x33)) (* (- 1) (* x3 x41)) (* (- 1) (* x4 x45)) (* (- 1) (* x9 x33)) (* (- 1) (* x37 x2)) (* (- 1) (* x37 x10)) (* (- 1) (* x41 x11)) (* (- 1) (* x45 x12))) 0)))) (and (and (not (<= (+ (* (- 1) (* x66 x26)) (* (- 1) (* x68 x28)) (* (- 1) (* x69 x29)) (* x68 x15) (* x69 x16) (* x5 x50) (* x6 x51) (* x7 x52) (* x8 x53) (* x13 x66) (* x14 x67) (* (- 1) (* x26 x50)) (* (- 1) (* x27 x51)) (* (- 1) (* x28 x52)) (* (- 1) (* x29 x53)) (* (- 1) (* x27 x67))) 0)) (and (and (and (>= (+ (* (- 1) (* x66 x26)) (* (- 1) (* x68 x28)) (* (- 1) (* x69 x29)) (* x68 x15) (* x69 x16) (* x5 x50) (* x6 x51) (* x7 x52) (* x8 x53) (* x13 x66) (* x14 x67) (* (- 1) (* x26 x50)) (* (- 1) (* x27 x51)) (* (- 1) (* x28 x52)) (* (- 1) (* x29 x53)) (* (- 1) (* x27 x67))) 0) (>= (+ (* x54 x5) (* x57 x8) (* x71 x14) (* x72 x15) (* x73 x16) (* (- 1) (* x54 x26)) (* (- 1) (* x57 x29)) (* (- 1) (* x70 x26)) (* (- 1) (* x71 x27)) (* (- 1) (* x72 x28)) (* (- 1) (* x73 x29)) (* x6 x55) (* x7 x56) (* x13 x70) (* (- 1) (* x27 x55)) (* (- 1) (* x28 x56))) 0)) (>= (+ (* x58 x5) (* x61 x8) (* x74 x13) (* x75 x14) (* x76 x15) (* x77 x16) (* (- 1) (* x58 x26)) (* (- 1) (* x61 x29)) (* (- 1) (* x74 x26)) (* x6 x59) (* x7 x60) (* (- 1) (* x27 x59)) (* (- 1) (* x28 x60)) (* (- 1) (* x27 x75)) (* (- 1) (* x28 x76)) (* (- 1) (* x29 x77))) 0)) (>= (+ (* x62 x5) (* x64 x7) (* x65 x8) (* x81 x16) (* (- 1) (* x62 x26)) (* (- 1) (* x64 x28)) (* (- 1) (* x65 x29)) (* (- 1) (* x78 x26)) (* (- 1) (* x81 x29)) (* x6 x63) (* x13 x78) (* x14 x79) (* x15 x80) (* (- 1) (* x27 x63)) (* (- 1) (* x27 x79)) (* (- 1) (* x28 x80))) 0))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (>= (+ (* (- 1) (* x68 x38)) (* (- 1) (* x69 x42)) (* (- 1) (* x30 x50)) (* (- 1) (* x34 x51)) (* (- 1) (* x38 x52)) (* (- 1) (* x42 x53)) (* (- 1) (* x30 x66)) (* (- 1) (* x34 x67))) 0) (>= (+ (* (- 1) (* x51 x35)) (* (- 1) (* x52 x39)) (* (- 1) (* x53 x43)) (* (- 1) (* x68 x39)) (* (- 1) (* x69 x43)) (* (- 1) (* x31 x50)) (* (- 1) (* x31 x66)) (* (- 1) (* x35 x67))) 0)) (>= (+ (* (- 1) (* x51 x36)) (* (- 1) (* x32 x50)) (* (- 1) (* x40 x52)) (* (- 1) (* x44 x53)) (* (- 1) (* x32 x66)) (* (- 1) (* x36 x67)) (* (- 1) (* x40 x68)) (* (- 1) (* x44 x69))) 0)) (>= (+ (* (- 1) (* x66 x33)) (* (- 1) (* x68 x41)) (* (- 1) (* x33 x50)) (* (- 1) (* x37 x51)) (* (- 1) (* x41 x52)) (* (- 1) (* x45 x53)) (* (- 1) (* x37 x67)) (* (- 1) (* x45 x69))) 0)) (>= (+ (* (- 1) (* x57 x42)) (* (- 1) (* x71 x34)) (* (- 1) (* x30 x54)) (* (- 1) (* x34 x55)) (* (- 1) (* x38 x56)) (* (- 1) (* x30 x70)) (* (- 1) (* x38 x72)) (* (- 1) (* x42 x73))) 0)) (>= (+ (* (- 1) (* x54 x31)) (* (- 1) (* x55 x35)) (* (- 1) (* x57 x43)) (* (- 1) (* x71 x35)) (* (- 1) (* x72 x39)) (* (- 1) (* x73 x43)) (* (- 1) (* x39 x56)) (* (- 1) (* x31 x70))) 0)) (>= (+ (* (- 1) (* x54 x32)) (* (- 1) (* x55 x36)) (* (- 1) (* x57 x44)) (* (- 1) (* x71 x36)) (* (- 1) (* x40 x56)) (* (- 1) (* x32 x70)) (* (- 1) (* x40 x72)) (* (- 1) (* x44 x73))) 0)) (>= (+ (* (- 1) (* x54 x33)) (* (- 1) (* x57 x45)) (* (- 1) (* x70 x33)) (* (- 1) (* x37 x55)) (* (- 1) (* x41 x56)) (* (- 1) (* x37 x71)) (* (- 1) (* x41 x72)) (* (- 1) (* x45 x73))) 0)) (>= (+ (* (- 1) (* x61 x42)) (* (- 1) (* x74 x30)) (* (- 1) (* x30 x58)) (* (- 1) (* x34 x59)) (* (- 1) (* x38 x60)) (* (- 1) (* x34 x75)) (* (- 1) (* x38 x76)) (* (- 1) (* x42 x77))) 0)) (>= (+ (* (- 1) (* x58 x31)) (* (- 1) (* x61 x43)) (* (- 1) (* x74 x31)) (* (- 1) (* x75 x35)) (* (- 1) (* x76 x39)) (* (- 1) (* x35 x59)) (* (- 1) (* x39 x60)) (* (- 1) (* x43 x77))) 0)) (>= (+ (* (- 1) (* x58 x32)) (* (- 1) (* x59 x36)) (* (- 1) (* x74 x32)) (* (- 1) (* x75 x36)) (* (- 1) (* x40 x60)) (* (- 1) (* x44 x61)) (* (- 1) (* x40 x76)) (* (- 1) (* x44 x77))) 0)) (>= (+ (* (- 1) (* x58 x33)) (* (- 1) (* x61 x45)) (* (- 1) (* x74 x33)) (* (- 1) (* x37 x59)) (* (- 1) (* x41 x60)) (* (- 1) (* x37 x75)) (* (- 1) (* x41 x76)) (* (- 1) (* x45 x77))) 0)) (>= (+ (* (- 1) (* x64 x38)) (* (- 1) (* x65 x42)) (* (- 1) (* x81 x42)) (* (- 1) (* x30 x62)) (* (- 1) (* x34 x63)) (* (- 1) (* x30 x78)) (* (- 1) (* x34 x79)) (* (- 1) (* x38 x80))) 0)) (>= (+ (* (- 1) (* x64 x39)) (* (- 1) (* x65 x43)) (* (- 1) (* x78 x31)) (* (- 1) (* x79 x35)) (* (- 1) (* x81 x43)) (* (- 1) (* x31 x62)) (* (- 1) (* x35 x63)) (* (- 1) (* x39 x80))) 0)) (>= (+ (* (- 1) (* x62 x32)) (* (- 1) (* x63 x36)) (* (- 1) (* x78 x32)) (* (- 1) (* x79 x36)) (* (- 1) (* x81 x44)) (* (- 1) (* x40 x64)) (* (- 1) (* x44 x65)) (* (- 1) (* x40 x80))) 0)) (>= (+ (* (- 1) (* x62 x33)) (* (- 1) (* x64 x41)) (* (- 1) (* x65 x45)) (* (- 1) (* x78 x33)) (* (- 1) (* x81 x45)) (* (- 1) (* x37 x63)) (* (- 1) (* x37 x79)) (* (- 1) (* x41 x80))) 0)))) (and (not (<= (+ (* (- 1) x5) x26 (* x30 x5) (* x6 x31) (* x7 x32) (* x8 x33)) 0)) (and (and (and (>= (+ (* (- 1) x5) x26 (* x30 x5) (* x6 x31) (* x7 x32) (* x8 x33)) 0) (>= (+ (* (- 1) x6) x27 (* x34 x5) (* x37 x8) (* x6 x35) (* x7 x36)) 0)) (>= (+ (* (- 1) x7) x28 (* x38 x5) (* x40 x7) (* x41 x8) (* x6 x39)) 0)) (>= (+ (* (- 1) x8) x29 (* x42 x5) (* x44 x7) (* x45 x8) (* x6 x43)) 0)))) (and (and (not (<= (+ x26 (* x30 x98) (* x31 x99) (* x32 x100) (* x101 x33)) 0)) (and (and (and (>= (+ x26 (* x30 x98) (* x31 x99) (* x32 x100) (* x101 x33)) 0) (>= (+ x27 (* x98 x34) (* x99 x35) (* x100 x36) (* x101 x37)) 0)) (>= (+ x28 (* x40 x100) (* x98 x38) (* x99 x39) (* x101 x41)) 0)) (>= (+ x29 (* x44 x100) (* x98 x42) (* x99 x43) (* x101 x45)) 0))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (>= (+ (* x118 x30) (* x122 x31) (* x126 x32) (* x130 x33)) 1) (>= (+ (* x30 x119) (* x31 x123) (* x32 x127) (* x131 x33)) 0)) (>= (+ (* x30 x120) (* x31 x124) (* x32 x128) (* x132 x33)) 0)) (>= (+ (* x30 x121) (* x125 x31) (* x129 x32) (* x133 x33)) 0)) (>= (+ (* x37 x130) (* x118 x34) (* x122 x35) (* x126 x36)) 0)) (>= (+ (* x34 x119) (* x37 x131) (* x123 x35) (* x127 x36)) 1)) (>= (+ (* x34 x120) (* x35 x124) (* x36 x128) (* x37 x132)) 0)) (>= (+ (* x34 x121) (* x37 x133) (* x125 x35) (* x129 x36)) 0)) (>= (+ (* x40 x126) (* x41 x130) (* x118 x38) (* x122 x39)) 0)) (>= (+ (* x40 x127) (* x41 x131) (* x119 x38) (* x123 x39)) 0)) (>= (+ (* x38 x120) (* x39 x124) (* x40 x128) (* x132 x41)) 1)) (>= (+ (* x38 x121) (* x40 x129) (* x41 x133) (* x125 x39)) 0)) (>= (+ (* x44 x126) (* x45 x130) (* x118 x42) (* x122 x43)) 0)) (>= (+ (* x44 x127) (* x45 x131) (* x119 x42) (* x123 x43)) 0)) (>= (+ (* x42 x120) (* x44 x128) (* x124 x43) (* x132 x45)) 0)) (>= (+ (* x42 x121) (* x44 x129) (* x125 x43) (* x133 x45)) 1)))) (and (and (and (not (<= (+ x0 (* (- 1) x21) (* x1 x5) (* x3 x7) (* x4 x8) (* x10 x14) (* x11 x15) (* x12 x16) (* x6 x2) (* x13 x9)) 0)) (>= (+ x0 (* (- 1) x21) (* x1 x5) (* x3 x7) (* x4 x8) (* x10 x14) (* x11 x15) (* x12 x16) (* x6 x2) (* x13 x9)) 0)) (and (and (and (>= (+ x17 (* (- 1) x22)) 0) (>= (+ (* (- 1) x23) x18) 0)) (>= (+ (* (- 1) x24) x19) 0)) (>= (+ x20 (* (- 1) x25)) 0))) (and (and (not (<= (+ (* x1 x5) (* x3 x7) (* x4 x8) (* x10 x14) (* x11 x15) (* x12 x16) (* (- 1) (* x1 x26)) (* (- 1) (* x3 x28)) (* (- 1) (* x4 x29)) (* (- 1) (* x9 x26)) (* (- 1) (* x10 x27)) (* (- 1) (* x11 x28)) (* (- 1) (* x12 x29)) (* x6 x2) (* x13 x9) (* (- 1) (* x27 x2))) 0)) (>= (+ (* x1 x5) (* x3 x7) (* x4 x8) (* x10 x14) (* x11 x15) (* x12 x16) (* (- 1) (* x1 x26)) (* (- 1) (* x3 x28)) (* (- 1) (* x4 x29)) (* (- 1) (* x9 x26)) (* (- 1) (* x10 x27)) (* (- 1) (* x11 x28)) (* (- 1) (* x12 x29)) (* x6 x2) (* x13 x9) (* (- 1) (* x27 x2))) 0)) (and (and (and (>= (+ (* (- 1) (* x3 x38)) (* (- 1) (* x4 x42)) (* (- 1) (* x10 x34)) (* (- 1) (* x30 x1)) (* (- 1) (* x34 x2)) (* (- 1) (* x30 x9)) (* (- 1) (* x38 x11)) (* (- 1) (* x42 x12))) 0) (>= (+ (* (- 1) (* x3 x39)) (* (- 1) (* x4 x43)) (* (- 1) (* x10 x35)) (* (- 1) (* x11 x39)) (* (- 1) (* x12 x43)) (* (- 1) (* x31 x1)) (* (- 1) (* x35 x2)) (* (- 1) (* x31 x9))) 0)) (>= (+ (* (- 1) (* x1 x32)) (* (- 1) (* x2 x36)) (* (- 1) (* x10 x36)) (* (- 1) (* x40 x3)) (* (- 1) (* x44 x4)) (* (- 1) (* x32 x9)) (* (- 1) (* x40 x11)) (* (- 1) (* x44 x12))) 0)) (>= (+ (* (- 1) (* x1 x33)) (* (- 1) (* x3 x41)) (* (- 1) (* x4 x45)) (* (- 1) (* x9 x33)) (* (- 1) (* x37 x2)) (* (- 1) (* x37 x10)) (* (- 1) (* x41 x11)) (* (- 1) (* x45 x12))) 0))))))
(exit)
(check-sat)
