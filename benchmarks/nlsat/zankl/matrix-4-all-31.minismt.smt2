(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x6 () Real)
(declare-fun x23 () Real)
(declare-fun x40 () Real)
(declare-fun x57 () Real)
(declare-fun x13 () Real)
(declare-fun x30 () Real)
(declare-fun x47 () Real)
(declare-fun x64 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x37 () Real)
(declare-fun x54 () Real)
(declare-fun x71 () Real)
(declare-fun x10 () Real)
(declare-fun x27 () Real)
(declare-fun x44 () Real)
(declare-fun x61 () Real)
(declare-fun x0 () Real)
(declare-fun x17 () Real)
(declare-fun x34 () Real)
(declare-fun x51 () Real)
(declare-fun x68 () Real)
(declare-fun x7 () Real)
(declare-fun x24 () Real)
(declare-fun x41 () Real)
(declare-fun x58 () Real)
(declare-fun x14 () Real)
(declare-fun x31 () Real)
(declare-fun x48 () Real)
(declare-fun x65 () Real)
(declare-fun x4 () Real)
(declare-fun x21 () Real)
(declare-fun x38 () Real)
(declare-fun x55 () Real)
(declare-fun x72 () Real)
(declare-fun x11 () Real)
(declare-fun x28 () Real)
(declare-fun x45 () Real)
(declare-fun x62 () Real)
(declare-fun x1 () Real)
(declare-fun x18 () Real)
(declare-fun x35 () Real)
(declare-fun x52 () Real)
(declare-fun x69 () Real)
(declare-fun x8 () Real)
(declare-fun x25 () Real)
(declare-fun x42 () Real)
(declare-fun x59 () Real)
(declare-fun x15 () Real)
(declare-fun x32 () Real)
(declare-fun x49 () Real)
(declare-fun x66 () Real)
(declare-fun x5 () Real)
(declare-fun x22 () Real)
(declare-fun x39 () Real)
(declare-fun x56 () Real)
(declare-fun x73 () Real)
(declare-fun x12 () Real)
(declare-fun x29 () Real)
(declare-fun x46 () Real)
(declare-fun x63 () Real)
(declare-fun x2 () Real)
(declare-fun x19 () Real)
(declare-fun x36 () Real)
(declare-fun x53 () Real)
(declare-fun x70 () Real)
(declare-fun x9 () Real)
(declare-fun x26 () Real)
(declare-fun x43 () Real)
(declare-fun x60 () Real)
(declare-fun x16 () Real)
(declare-fun x33 () Real)
(declare-fun x50 () Real)
(declare-fun x67 () Real)
(assert (>= x6 0))
(assert (>= x23 0))
(assert (>= x40 0))
(assert (>= x57 0))
(assert (>= x13 0))
(assert (>= x30 0))
(assert (>= x47 0))
(assert (>= x64 0))
(assert (>= x3 0))
(assert (>= x20 0))
(assert (>= x37 0))
(assert (>= x54 0))
(assert (>= x71 0))
(assert (>= x10 0))
(assert (>= x27 0))
(assert (>= x44 0))
(assert (>= x61 0))
(assert (>= x0 0))
(assert (>= x17 0))
(assert (>= x34 0))
(assert (>= x51 0))
(assert (>= x68 0))
(assert (>= x7 0))
(assert (>= x24 0))
(assert (>= x41 0))
(assert (>= x58 0))
(assert (>= x14 0))
(assert (>= x31 0))
(assert (>= x48 0))
(assert (>= x65 0))
(assert (>= x4 0))
(assert (>= x21 0))
(assert (>= x38 0))
(assert (>= x55 0))
(assert (>= x72 0))
(assert (>= x11 0))
(assert (>= x28 0))
(assert (>= x45 0))
(assert (>= x62 0))
(assert (>= x1 0))
(assert (>= x18 0))
(assert (>= x35 0))
(assert (>= x52 0))
(assert (>= x69 0))
(assert (>= x8 0))
(assert (>= x25 0))
(assert (>= x42 0))
(assert (>= x59 0))
(assert (>= x15 0))
(assert (>= x32 0))
(assert (>= x49 0))
(assert (>= x66 0))
(assert (>= x5 0))
(assert (>= x22 0))
(assert (>= x39 0))
(assert (>= x56 0))
(assert (>= x73 0))
(assert (>= x12 0))
(assert (>= x29 0))
(assert (>= x46 0))
(assert (>= x63 0))
(assert (>= x2 0))
(assert (>= x19 0))
(assert (>= x36 0))
(assert (>= x53 0))
(assert (>= x70 0))
(assert (>= x9 0))
(assert (>= x26 0))
(assert (>= x43 0))
(assert (>= x60 0))
(assert (>= x16 0))
(assert (>= x33 0))
(assert (>= x50 0))
(assert (>= x67 0))
(assert (and (and (and (and (and (and (and (not (<= (+ x0 (* (- 1) x25) (* x1 x5) (* x3 x7) (* x4 x8) (* x6 x2)) 0)) (>= (+ x0 (* (- 1) x25) (* x1 x5) (* x3 x7) (* x4 x8) (* x6 x2)) 0)) (and (and (and (>= (+ (* (- 1) x26) (* x1 x9) (* x3 x17) (* x4 x21) (* x13 x2)) 0) (>= (+ (* (- 1) x27) (* x3 x18) (* x4 x22) (* x10 x1) (* x14 x2)) 0)) (>= (+ (* (- 1) x28) (* x3 x19) (* x11 x1) (* x15 x2) (* x23 x4)) 0)) (>= (+ (* (- 1) x29) (* x1 x12) (* x2 x16) (* x3 x20) (* x24 x4)) 0))) (and (and (not (<= (+ (* x1 x5) (* x3 x7) (* x4 x8) (* (- 1) (* x3 x32)) (* (- 1) (* x4 x33)) (* x6 x2) (* (- 1) (* x30 x1)) (* (- 1) (* x31 x2))) 0)) (>= (+ (* x1 x5) (* x3 x7) (* x4 x8) (* (- 1) (* x3 x32)) (* (- 1) (* x4 x33)) (* x6 x2) (* (- 1) (* x30 x1)) (* (- 1) (* x31 x2))) 0)) (and (and (and (>= (+ (* x1 x9) (* x3 x17) (* x4 x21) (* (- 1) (* x3 x42)) (* (- 1) (* x4 x46)) (* x13 x2) (* (- 1) (* x34 x1)) (* (- 1) (* x38 x2))) 0) (>= (+ (* x3 x18) (* x4 x22) (* (- 1) (* x1 x35)) (* (- 1) (* x3 x43)) (* x10 x1) (* x14 x2) (* (- 1) (* x39 x2)) (* (- 1) (* x47 x4))) 0)) (>= (+ (* x3 x19) (* (- 1) (* x1 x36)) (* (- 1) (* x3 x44)) (* x11 x1) (* x15 x2) (* x23 x4) (* (- 1) (* x40 x2)) (* (- 1) (* x48 x4))) 0)) (>= (+ (* x1 x12) (* x2 x16) (* x3 x20) (* (- 1) (* x3 x45)) (* (- 1) (* x4 x49)) (* x24 x4) (* (- 1) (* x37 x1)) (* (- 1) (* x41 x2))) 0)))) (and (and (not (<= (+ (* (- 1) (* x57 x33)) (* x54 x5) (* x57 x8) (* x6 x55) (* x7 x56) (* (- 1) (* x30 x54)) (* (- 1) (* x31 x55)) (* (- 1) (* x32 x56))) 0)) (and (and (and (>= (+ (* (- 1) (* x57 x33)) (* x54 x5) (* x57 x8) (* x6 x55) (* x7 x56) (* (- 1) (* x30 x54)) (* (- 1) (* x31 x55)) (* (- 1) (* x32 x56))) 0) (>= (+ (* (- 1) (* x61 x33)) (* x58 x5) (* x61 x8) (* x6 x59) (* x7 x60) (* (- 1) (* x30 x58)) (* (- 1) (* x31 x59)) (* (- 1) (* x32 x60))) 0)) (>= (+ (* (- 1) (* x64 x32)) (* (- 1) (* x65 x33)) (* x62 x5) (* x64 x7) (* x65 x8) (* x6 x63) (* (- 1) (* x30 x62)) (* (- 1) (* x31 x63))) 0)) (>= (+ (* (- 1) (* x68 x32)) (* (- 1) (* x69 x33)) (* x66 x5) (* x68 x7) (* x69 x8) (* x6 x67) (* (- 1) (* x30 x66)) (* (- 1) (* x31 x67))) 0))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (>= (+ (* x54 x9) (* x57 x21) (* (- 1) (* x54 x34)) (* (- 1) (* x57 x46)) (* x13 x55) (* x17 x56) (* (- 1) (* x38 x55)) (* (- 1) (* x42 x56))) 0) (>= (+ (* x54 x10) (* x57 x22) (* (- 1) (* x54 x35)) (* (- 1) (* x55 x39)) (* (- 1) (* x56 x43)) (* (- 1) (* x57 x47)) (* x14 x55) (* x18 x56)) 0)) (>= (+ (* x54 x11) (* x55 x15) (* x56 x19) (* (- 1) (* x54 x36)) (* (- 1) (* x57 x48)) (* x23 x57) (* (- 1) (* x40 x55)) (* (- 1) (* x44 x56))) 0)) (>= (+ (* x54 x12) (* x55 x16) (* x57 x24) (* (- 1) (* x57 x49)) (* x20 x56) (* (- 1) (* x37 x54)) (* (- 1) (* x41 x55)) (* (- 1) (* x45 x56))) 0)) (>= (+ (* x58 x9) (* x61 x21) (* (- 1) (* x61 x46)) (* x13 x59) (* x17 x60) (* (- 1) (* x34 x58)) (* (- 1) (* x38 x59)) (* (- 1) (* x42 x60))) 0)) (>= (+ (* x61 x22) (* (- 1) (* x58 x35)) (* (- 1) (* x59 x39)) (* x10 x58) (* x14 x59) (* x18 x60) (* (- 1) (* x43 x60)) (* (- 1) (* x47 x61))) 0)) (>= (+ (* x58 x11) (* x59 x15) (* (- 1) (* x58 x36)) (* (- 1) (* x61 x48)) (* x19 x60) (* x23 x61) (* (- 1) (* x40 x59)) (* (- 1) (* x44 x60))) 0)) (>= (+ (* x58 x12) (* x59 x16) (* x61 x24) (* (- 1) (* x61 x49)) (* x20 x60) (* (- 1) (* x37 x58)) (* (- 1) (* x41 x59)) (* (- 1) (* x45 x60))) 0)) (>= (+ (* x62 x9) (* x64 x17) (* x65 x21) (* (- 1) (* x64 x42)) (* (- 1) (* x65 x46)) (* x13 x63) (* (- 1) (* x34 x62)) (* (- 1) (* x38 x63))) 0)) (>= (+ (* x64 x18) (* x65 x22) (* (- 1) (* x62 x35)) (* (- 1) (* x64 x43)) (* x10 x62) (* x14 x63) (* (- 1) (* x39 x63)) (* (- 1) (* x47 x65))) 0)) (>= (+ (* x64 x19) (* (- 1) (* x62 x36)) (* (- 1) (* x64 x44)) (* x11 x62) (* x15 x63) (* x23 x65) (* (- 1) (* x40 x63)) (* (- 1) (* x48 x65))) 0)) (>= (+ (* x62 x12) (* x63 x16) (* x64 x20) (* (- 1) (* x64 x45)) (* (- 1) (* x65 x49)) (* x24 x65) (* (- 1) (* x37 x62)) (* (- 1) (* x41 x63))) 0)) (>= (+ (* x66 x9) (* (- 1) (* x68 x42)) (* (- 1) (* x69 x46)) (* x13 x67) (* x17 x68) (* x21 x69) (* (- 1) (* x34 x66)) (* (- 1) (* x38 x67))) 0)) (>= (+ (* x68 x18) (* x69 x22) (* (- 1) (* x68 x43)) (* x10 x66) (* x14 x67) (* (- 1) (* x35 x66)) (* (- 1) (* x39 x67)) (* (- 1) (* x47 x69))) 0)) (>= (+ (* x68 x19) (* (- 1) (* x66 x36)) (* x11 x66) (* x15 x67) (* x23 x69) (* (- 1) (* x40 x67)) (* (- 1) (* x44 x68)) (* (- 1) (* x48 x69))) 0)) (>= (+ (* x66 x12) (* (- 1) (* x68 x45)) (* (- 1) (* x69 x49)) (* x16 x67) (* x20 x68) (* x24 x69) (* (- 1) (* x37 x66)) (* (- 1) (* x41 x67))) 0)))) (and (not (<= (+ (* (- 1) x70) x50 (* x57 x33) (* x30 x54) (* x31 x55) (* x32 x56)) 0)) (and (and (and (>= (+ (* (- 1) x70) x50 (* x57 x33) (* x30 x54) (* x31 x55) (* x32 x56)) 0) (>= (+ (* (- 1) x71) x51 (* x61 x33) (* x30 x58) (* x31 x59) (* x32 x60)) 0)) (>= (+ (* (- 1) x72) x52 (* x64 x32) (* x65 x33) (* x30 x62) (* x31 x63)) 0)) (>= (+ (* (- 1) x73) x53 (* x68 x32) (* x69 x33) (* x30 x66) (* x31 x67)) 0)))) (and (and (not (<= (+ x30 (* (- 1) x5)) 0)) (and (and (and (>= (+ x30 (* (- 1) x5)) 0) (>= (+ (* (- 1) x6) x31) 0)) (>= (+ (* (- 1) x7) x32) 0)) (>= (+ (* (- 1) x8) x33) 0))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (>= (+ x34 (* (- 1) x9)) 0) (>= (+ (* (- 1) x10) x35) 0)) (>= (+ (* (- 1) x11) x36) 0)) (>= (+ x37 (* (- 1) x12)) 0)) (>= (+ (* (- 1) x13) x38) 0)) (>= (+ (* (- 1) x14) x39) 0)) (>= (+ x40 (* (- 1) x15)) 0)) (>= (+ x41 (* (- 1) x16)) 0)) (>= (+ (* (- 1) x17) x42) 0)) (>= (+ (* (- 1) x18) x43) 0)) (>= (+ x44 (* (- 1) x19)) 0)) (>= (+ (* (- 1) x20) x45) 0)) (>= (+ (* (- 1) x21) x46) 0)) (>= (+ x47 (* (- 1) x22)) 0)) (>= (+ (* (- 1) x23) x48) 0)) (>= (+ (* (- 1) x24) x49) 0)))) (and (and (and (not (<= (+ x0 (* (- 1) x25) (* x1 x5) (* x3 x7) (* x4 x8) (* x6 x2)) 0)) (>= (+ x0 (* (- 1) x25) (* x1 x5) (* x3 x7) (* x4 x8) (* x6 x2)) 0)) (and (and (and (>= (+ (* (- 1) x26) (* x1 x9) (* x3 x17) (* x4 x21) (* x13 x2)) 0) (>= (+ (* (- 1) x27) (* x3 x18) (* x4 x22) (* x10 x1) (* x14 x2)) 0)) (>= (+ (* (- 1) x28) (* x3 x19) (* x11 x1) (* x15 x2) (* x23 x4)) 0)) (>= (+ (* (- 1) x29) (* x1 x12) (* x2 x16) (* x3 x20) (* x24 x4)) 0))) (and (and (not (<= (+ (* x1 x5) (* x3 x7) (* x4 x8) (* (- 1) (* x3 x32)) (* (- 1) (* x4 x33)) (* x6 x2) (* (- 1) (* x30 x1)) (* (- 1) (* x31 x2))) 0)) (>= (+ (* x1 x5) (* x3 x7) (* x4 x8) (* (- 1) (* x3 x32)) (* (- 1) (* x4 x33)) (* x6 x2) (* (- 1) (* x30 x1)) (* (- 1) (* x31 x2))) 0)) (and (and (and (>= (+ (* x1 x9) (* x3 x17) (* x4 x21) (* (- 1) (* x3 x42)) (* (- 1) (* x4 x46)) (* x13 x2) (* (- 1) (* x34 x1)) (* (- 1) (* x38 x2))) 0) (>= (+ (* x3 x18) (* x4 x22) (* (- 1) (* x1 x35)) (* (- 1) (* x3 x43)) (* x10 x1) (* x14 x2) (* (- 1) (* x39 x2)) (* (- 1) (* x47 x4))) 0)) (>= (+ (* x3 x19) (* (- 1) (* x1 x36)) (* (- 1) (* x3 x44)) (* x11 x1) (* x15 x2) (* x23 x4) (* (- 1) (* x40 x2)) (* (- 1) (* x48 x4))) 0)) (>= (+ (* x1 x12) (* x2 x16) (* x3 x20) (* (- 1) (* x3 x45)) (* (- 1) (* x4 x49)) (* x24 x4) (* (- 1) (* x37 x1)) (* (- 1) (* x41 x2))) 0))))))
(exit)
(check-sat)
