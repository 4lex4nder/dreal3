(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x6 () Real)
(declare-fun x84 () Real)
(declare-fun x23 () Real)
(declare-fun x101 () Real)
(declare-fun x40 () Real)
(declare-fun x57 () Real)
(declare-fun x74 () Real)
(declare-fun x13 () Real)
(declare-fun x91 () Real)
(declare-fun x30 () Real)
(declare-fun x47 () Real)
(declare-fun x64 () Real)
(declare-fun x3 () Real)
(declare-fun x81 () Real)
(declare-fun x20 () Real)
(declare-fun x98 () Real)
(declare-fun x37 () Real)
(declare-fun x54 () Real)
(declare-fun x71 () Real)
(declare-fun x10 () Real)
(declare-fun x88 () Real)
(declare-fun x27 () Real)
(declare-fun x105 () Real)
(declare-fun x44 () Real)
(declare-fun x61 () Real)
(declare-fun x0 () Real)
(declare-fun x78 () Real)
(declare-fun x17 () Real)
(declare-fun x95 () Real)
(declare-fun x34 () Real)
(declare-fun x51 () Real)
(declare-fun x68 () Real)
(declare-fun x7 () Real)
(declare-fun x85 () Real)
(declare-fun x24 () Real)
(declare-fun x102 () Real)
(declare-fun x41 () Real)
(declare-fun x58 () Real)
(declare-fun x75 () Real)
(declare-fun x14 () Real)
(declare-fun x92 () Real)
(declare-fun x31 () Real)
(declare-fun x48 () Real)
(declare-fun x65 () Real)
(declare-fun x4 () Real)
(declare-fun x82 () Real)
(declare-fun x21 () Real)
(declare-fun x99 () Real)
(declare-fun x38 () Real)
(declare-fun x55 () Real)
(declare-fun x72 () Real)
(declare-fun x11 () Real)
(declare-fun x89 () Real)
(declare-fun x28 () Real)
(declare-fun x106 () Real)
(declare-fun x45 () Real)
(declare-fun x62 () Real)
(declare-fun x1 () Real)
(declare-fun x79 () Real)
(declare-fun x18 () Real)
(declare-fun x96 () Real)
(declare-fun x35 () Real)
(declare-fun x52 () Real)
(declare-fun x69 () Real)
(declare-fun x8 () Real)
(declare-fun x86 () Real)
(declare-fun x25 () Real)
(declare-fun x103 () Real)
(declare-fun x42 () Real)
(declare-fun x59 () Real)
(declare-fun x76 () Real)
(declare-fun x15 () Real)
(declare-fun x93 () Real)
(declare-fun x32 () Real)
(declare-fun x49 () Real)
(declare-fun x66 () Real)
(declare-fun x5 () Real)
(declare-fun x83 () Real)
(declare-fun x22 () Real)
(declare-fun x100 () Real)
(declare-fun x39 () Real)
(declare-fun x56 () Real)
(declare-fun x73 () Real)
(declare-fun x12 () Real)
(declare-fun x90 () Real)
(declare-fun x29 () Real)
(declare-fun x46 () Real)
(declare-fun x63 () Real)
(declare-fun x2 () Real)
(declare-fun x80 () Real)
(declare-fun x19 () Real)
(declare-fun x97 () Real)
(declare-fun x36 () Real)
(declare-fun x53 () Real)
(declare-fun x70 () Real)
(declare-fun x9 () Real)
(declare-fun x87 () Real)
(declare-fun x26 () Real)
(declare-fun x104 () Real)
(declare-fun x43 () Real)
(declare-fun x60 () Real)
(declare-fun x77 () Real)
(declare-fun x16 () Real)
(declare-fun x94 () Real)
(declare-fun x33 () Real)
(declare-fun x50 () Real)
(declare-fun x67 () Real)
(assert (>= x6 0))
(assert (>= x84 0))
(assert (>= x23 0))
(assert (>= x101 0))
(assert (>= x40 0))
(assert (>= x57 0))
(assert (>= x74 0))
(assert (>= x13 0))
(assert (>= x91 0))
(assert (>= x30 0))
(assert (>= x47 0))
(assert (>= x64 0))
(assert (>= x3 0))
(assert (>= x81 0))
(assert (>= x20 0))
(assert (>= x98 0))
(assert (>= x37 0))
(assert (>= x54 0))
(assert (>= x71 0))
(assert (>= x10 0))
(assert (>= x88 0))
(assert (>= x27 0))
(assert (>= x105 0))
(assert (>= x44 0))
(assert (>= x61 0))
(assert (>= x0 0))
(assert (>= x78 0))
(assert (>= x17 0))
(assert (>= x95 0))
(assert (>= x34 0))
(assert (>= x51 0))
(assert (>= x68 0))
(assert (>= x7 0))
(assert (>= x85 0))
(assert (>= x24 0))
(assert (>= x102 0))
(assert (>= x41 0))
(assert (>= x58 0))
(assert (>= x75 0))
(assert (>= x14 0))
(assert (>= x92 0))
(assert (>= x31 0))
(assert (>= x48 0))
(assert (>= x65 0))
(assert (>= x4 0))
(assert (>= x82 0))
(assert (>= x21 0))
(assert (>= x99 0))
(assert (>= x38 0))
(assert (>= x55 0))
(assert (>= x72 0))
(assert (>= x11 0))
(assert (>= x89 0))
(assert (>= x28 0))
(assert (>= x106 0))
(assert (>= x45 0))
(assert (>= x62 0))
(assert (>= x1 0))
(assert (>= x79 0))
(assert (>= x18 0))
(assert (>= x96 0))
(assert (>= x35 0))
(assert (>= x52 0))
(assert (>= x69 0))
(assert (>= x8 0))
(assert (>= x86 0))
(assert (>= x25 0))
(assert (>= x103 0))
(assert (>= x42 0))
(assert (>= x59 0))
(assert (>= x76 0))
(assert (>= x15 0))
(assert (>= x93 0))
(assert (>= x32 0))
(assert (>= x49 0))
(assert (>= x66 0))
(assert (>= x5 0))
(assert (>= x83 0))
(assert (>= x22 0))
(assert (>= x100 0))
(assert (>= x39 0))
(assert (>= x56 0))
(assert (>= x73 0))
(assert (>= x12 0))
(assert (>= x90 0))
(assert (>= x29 0))
(assert (>= x46 0))
(assert (>= x63 0))
(assert (>= x2 0))
(assert (>= x80 0))
(assert (>= x19 0))
(assert (>= x97 0))
(assert (>= x36 0))
(assert (>= x53 0))
(assert (>= x70 0))
(assert (>= x9 0))
(assert (>= x87 0))
(assert (>= x26 0))
(assert (>= x104 0))
(assert (>= x43 0))
(assert (>= x60 0))
(assert (>= x77 0))
(assert (>= x16 0))
(assert (>= x94 0))
(assert (>= x33 0))
(assert (>= x50 0))
(assert (>= x67 0))
(assert (and (and (and (and (and (and (and (not (<= (+ x0 (* (- 1) x36) (* x3 x8) (* x4 x9) (* x6 x1) (* x7 x2) (* x10 x5)) 0)) (>= (+ x0 (* (- 1) x36) (* x3 x8) (* x4 x9) (* x6 x1) (* x7 x2) (* x10 x5)) 0)) (and (and (and (and (>= (+ (* (- 1) x37) (* x2 x16) (* x3 x21) (* x4 x26) (* x11 x1) (* x31 x5)) 0) (>= (+ (* (- 1) x38) (* x1 x12) (* x3 x22) (* x17 x2) (* x27 x4) (* x32 x5)) 0)) (>= (+ (* (- 1) x39) (* x4 x28) (* x5 x33) (* x13 x1) (* x18 x2) (* x23 x3)) 0)) (>= (+ (* (- 1) x40) (* x2 x19) (* x3 x24) (* x4 x29) (* x14 x1) (* x34 x5)) 0)) (>= (+ (* (- 1) x41) (* x1 x15) (* x3 x25) (* x20 x2) (* x30 x4) (* x35 x5)) 0))) (and (and (not (<= (+ (* x3 x8) (* x4 x9) (* (- 1) (* x1 x42)) (* (- 1) (* x2 x43)) (* (- 1) (* x3 x44)) (* (- 1) (* x4 x45)) (* (- 1) (* x5 x46)) (* x6 x1) (* x7 x2) (* x10 x5)) 0)) (>= (+ (* x3 x8) (* x4 x9) (* (- 1) (* x1 x42)) (* (- 1) (* x2 x43)) (* (- 1) (* x3 x44)) (* (- 1) (* x4 x45)) (* (- 1) (* x5 x46)) (* x6 x1) (* x7 x2) (* x10 x5)) 0)) (and (and (and (and (>= (+ (* x2 x16) (* x3 x21) (* x4 x26) (* (- 1) (* x4 x62)) (* (- 1) (* x5 x67)) (* x11 x1) (* x31 x5) (* (- 1) (* x47 x1)) (* (- 1) (* x52 x2)) (* (- 1) (* x57 x3))) 0) (>= (+ (* x1 x12) (* x3 x22) (* (- 1) (* x2 x53)) (* (- 1) (* x3 x58)) (* (- 1) (* x4 x63)) (* x17 x2) (* x27 x4) (* x32 x5) (* (- 1) (* x48 x1)) (* (- 1) (* x68 x5))) 0)) (>= (+ (* x4 x28) (* x5 x33) (* (- 1) (* x1 x49)) (* (- 1) (* x3 x59)) (* x13 x1) (* x18 x2) (* x23 x3) (* (- 1) (* x54 x2)) (* (- 1) (* x64 x4)) (* (- 1) (* x69 x5))) 0)) (>= (+ (* x2 x19) (* x3 x24) (* x4 x29) (* (- 1) (* x1 x50)) (* (- 1) (* x3 x60)) (* (- 1) (* x5 x70)) (* x14 x1) (* x34 x5) (* (- 1) (* x55 x2)) (* (- 1) (* x65 x4))) 0)) (>= (+ (* x1 x15) (* x3 x25) (* (- 1) (* x3 x61)) (* (- 1) (* x4 x66)) (* x20 x2) (* x30 x4) (* x35 x5) (* (- 1) (* x51 x1)) (* (- 1) (* x56 x2)) (* (- 1) (* x71 x5))) 0)))) (and (and (not (<= (+ (* (- 1) (* x78 x43)) (* (- 1) (* x81 x46)) (* x78 x7) (* x79 x8) (* x80 x9) (* x81 x10) (* x6 x77) (* (- 1) (* x42 x77)) (* (- 1) (* x44 x79)) (* (- 1) (* x45 x80))) 0)) (and (and (and (and (>= (+ (* (- 1) (* x78 x43)) (* (- 1) (* x81 x46)) (* x78 x7) (* x79 x8) (* x80 x9) (* x81 x10) (* x6 x77) (* (- 1) (* x42 x77)) (* (- 1) (* x44 x79)) (* (- 1) (* x45 x80))) 0) (>= (+ (* (- 1) (* x82 x42)) (* (- 1) (* x83 x43)) (* (- 1) (* x84 x44)) (* (- 1) (* x85 x45)) (* (- 1) (* x86 x46)) (* x84 x8) (* x85 x9) (* x6 x82) (* x7 x83) (* x10 x86)) 0)) (>= (+ (* (- 1) (* x88 x43)) (* (- 1) (* x91 x46)) (* x88 x7) (* x89 x8) (* x90 x9) (* x91 x10) (* x6 x87) (* (- 1) (* x42 x87)) (* (- 1) (* x44 x89)) (* (- 1) (* x45 x90))) 0)) (>= (+ (* (- 1) (* x92 x42)) (* (- 1) (* x93 x43)) (* (- 1) (* x95 x45)) (* (- 1) (* x96 x46)) (* x95 x9) (* x6 x92) (* x7 x93) (* x8 x94) (* x10 x96) (* (- 1) (* x44 x94))) 0)) (>= (+ (* (- 1) (* x98 x43)) (* (- 1) (* x101 x46)) (* x98 x7) (* x99 x8) (* x100 x9) (* x101 x10) (* x6 x97) (* (- 1) (* x42 x97)) (* (- 1) (* x44 x99)) (* (- 1) (* x45 x100))) 0))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (>= (+ (* x78 x16) (* x80 x26) (* x81 x31) (* (- 1) (* x78 x52)) (* (- 1) (* x81 x67)) (* x11 x77) (* x21 x79) (* (- 1) (* x47 x77)) (* (- 1) (* x57 x79)) (* (- 1) (* x62 x80))) 0) (>= (+ (* x78 x17) (* x79 x22) (* x81 x32) (* (- 1) (* x78 x53)) (* (- 1) (* x81 x68)) (* x12 x77) (* x27 x80) (* (- 1) (* x48 x77)) (* (- 1) (* x58 x79)) (* (- 1) (* x63 x80))) 0)) (>= (+ (* x78 x18) (* x81 x33) (* (- 1) (* x79 x59)) (* (- 1) (* x81 x69)) (* x13 x77) (* x23 x79) (* x28 x80) (* (- 1) (* x49 x77)) (* (- 1) (* x54 x78)) (* (- 1) (* x64 x80))) 0)) (>= (+ (* x78 x19) (* x81 x34) (* (- 1) (* x77 x50)) (* (- 1) (* x78 x55)) (* (- 1) (* x79 x60)) (* (- 1) (* x81 x70)) (* x14 x77) (* x24 x79) (* x29 x80) (* (- 1) (* x65 x80))) 0)) (>= (+ (* x79 x25) (* x81 x35) (* (- 1) (* x78 x56)) (* (- 1) (* x81 x71)) (* x15 x77) (* x20 x78) (* x30 x80) (* (- 1) (* x51 x77)) (* (- 1) (* x61 x79)) (* (- 1) (* x66 x80))) 0)) (>= (+ (* x82 x11) (* x83 x16) (* x84 x21) (* x85 x26) (* (- 1) (* x84 x57)) (* (- 1) (* x85 x62)) (* (- 1) (* x86 x67)) (* x31 x86) (* (- 1) (* x47 x82)) (* (- 1) (* x52 x83))) 0)) (>= (+ (* x82 x12) (* x84 x22) (* x86 x32) (* (- 1) (* x83 x53)) (* (- 1) (* x84 x58)) (* (- 1) (* x85 x63)) (* x17 x83) (* x27 x85) (* (- 1) (* x48 x82)) (* (- 1) (* x68 x86))) 0)) (>= (+ (* x84 x23) (* x85 x28) (* x86 x33) (* (- 1) (* x82 x49)) (* (- 1) (* x84 x59)) (* x13 x82) (* x18 x83) (* (- 1) (* x54 x83)) (* (- 1) (* x64 x85)) (* (- 1) (* x69 x86))) 0)) (>= (+ (* x83 x19) (* x84 x24) (* x85 x29) (* (- 1) (* x82 x50)) (* (- 1) (* x84 x60)) (* (- 1) (* x85 x65)) (* (- 1) (* x86 x70)) (* x14 x82) (* x34 x86) (* (- 1) (* x55 x83))) 0)) (>= (+ (* x82 x15) (* x84 x25) (* (- 1) (* x83 x56)) (* (- 1) (* x84 x61)) (* (- 1) (* x85 x66)) (* x20 x83) (* x30 x85) (* x35 x86) (* (- 1) (* x51 x82)) (* (- 1) (* x71 x86))) 0)) (>= (+ (* x88 x16) (* x90 x26) (* x91 x31) (* (- 1) (* x88 x52)) (* (- 1) (* x91 x67)) (* x11 x87) (* x21 x89) (* (- 1) (* x47 x87)) (* (- 1) (* x57 x89)) (* (- 1) (* x62 x90))) 0)) (>= (+ (* x88 x17) (* x89 x22) (* x91 x32) (* (- 1) (* x88 x53)) (* (- 1) (* x90 x63)) (* (- 1) (* x91 x68)) (* x12 x87) (* x27 x90) (* (- 1) (* x48 x87)) (* (- 1) (* x58 x89))) 0)) (>= (+ (* x88 x18) (* x91 x33) (* (- 1) (* x89 x59)) (* (- 1) (* x91 x69)) (* x13 x87) (* x23 x89) (* x28 x90) (* (- 1) (* x49 x87)) (* (- 1) (* x54 x88)) (* (- 1) (* x64 x90))) 0)) (>= (+ (* x88 x19) (* x90 x29) (* x91 x34) (* (- 1) (* x87 x50)) (* (- 1) (* x88 x55)) (* (- 1) (* x89 x60)) (* (- 1) (* x91 x70)) (* x14 x87) (* x24 x89) (* (- 1) (* x65 x90))) 0)) (>= (+ (* x89 x25) (* x91 x35) (* (- 1) (* x88 x56)) (* (- 1) (* x91 x71)) (* x15 x87) (* x20 x88) (* x30 x90) (* (- 1) (* x51 x87)) (* (- 1) (* x61 x89)) (* (- 1) (* x66 x90))) 0)) (>= (+ (* x92 x11) (* x93 x16) (* x95 x26) (* (- 1) (* x95 x62)) (* (- 1) (* x96 x67)) (* x21 x94) (* x31 x96) (* (- 1) (* x47 x92)) (* (- 1) (* x52 x93)) (* (- 1) (* x57 x94))) 0)) (>= (+ (* x92 x12) (* x96 x32) (* (- 1) (* x92 x48)) (* (- 1) (* x93 x53)) (* (- 1) (* x95 x63)) (* x17 x93) (* x22 x94) (* x27 x95) (* (- 1) (* x58 x94)) (* (- 1) (* x68 x96))) 0)) (>= (+ (* x95 x28) (* x96 x33) (* (- 1) (* x92 x49)) (* (- 1) (* x96 x69)) (* x13 x92) (* x18 x93) (* x23 x94) (* (- 1) (* x54 x93)) (* (- 1) (* x59 x94)) (* (- 1) (* x64 x95))) 0)) (>= (+ (* x93 x19) (* x95 x29) (* (- 1) (* x92 x50)) (* (- 1) (* x95 x65)) (* (- 1) (* x96 x70)) (* x14 x92) (* x24 x94) (* x34 x96) (* (- 1) (* x55 x93)) (* (- 1) (* x60 x94))) 0)) (>= (+ (* x92 x15) (* x96 x35) (* (- 1) (* x93 x56)) (* (- 1) (* x95 x66)) (* x20 x93) (* x25 x94) (* x30 x95) (* (- 1) (* x51 x92)) (* (- 1) (* x61 x94)) (* (- 1) (* x71 x96))) 0)) (>= (+ (* x98 x16) (* x100 x26) (* x101 x31) (* (- 1) (* x98 x52)) (* (- 1) (* x101 x67)) (* x11 x97) (* x21 x99) (* (- 1) (* x47 x97)) (* (- 1) (* x57 x99)) (* (- 1) (* x62 x100))) 0)) (>= (+ (* x98 x17) (* x99 x22) (* x101 x32) (* (- 1) (* x98 x53)) (* (- 1) (* x100 x63)) (* (- 1) (* x101 x68)) (* x12 x97) (* x27 x100) (* (- 1) (* x48 x97)) (* (- 1) (* x58 x99))) 0)) (>= (+ (* x98 x18) (* x101 x33) (* (- 1) (* x98 x54)) (* (- 1) (* x99 x59)) (* (- 1) (* x101 x69)) (* x13 x97) (* x23 x99) (* x28 x100) (* (- 1) (* x49 x97)) (* (- 1) (* x64 x100))) 0)) (>= (+ (* x98 x19) (* x100 x29) (* x101 x34) (* (- 1) (* x97 x50)) (* (- 1) (* x98 x55)) (* (- 1) (* x99 x60)) (* (- 1) (* x101 x70)) (* x14 x97) (* x24 x99) (* (- 1) (* x65 x100))) 0)) (>= (+ (* x99 x25) (* x101 x35) (* (- 1) (* x98 x56)) (* (- 1) (* x101 x71)) (* x15 x97) (* x20 x98) (* x30 x100) (* (- 1) (* x51 x97)) (* (- 1) (* x61 x99)) (* (- 1) (* x66 x100))) 0)))) (and (not (<= (+ (* (- 1) x102) x72 (* x78 x43) (* x81 x46) (* x42 x77) (* x44 x79) (* x45 x80)) 0)) (and (and (and (and (>= (+ (* (- 1) x102) x72 (* x78 x43) (* x81 x46) (* x42 x77) (* x44 x79) (* x45 x80)) 0) (>= (+ (* (- 1) x103) x73 (* x82 x42) (* x83 x43) (* x84 x44) (* x85 x45) (* x86 x46)) 0)) (>= (+ x74 (* (- 1) x104) (* x88 x43) (* x91 x46) (* x42 x87) (* x44 x89) (* x45 x90)) 0)) (>= (+ (* (- 1) x105) x75 (* x92 x42) (* x93 x43) (* x95 x45) (* x96 x46) (* x44 x94)) 0)) (>= (+ (* (- 1) x106) x76 (* x98 x43) (* x101 x46) (* x42 x97) (* x44 x99) (* x45 x100)) 0)))) (and (and (not (<= (+ (* (- 1) x6) x42) 0)) (and (and (and (and (>= (+ (* (- 1) x6) x42) 0) (>= (+ (* (- 1) x7) x43) 0)) (>= (+ x44 (* (- 1) x8)) 0)) (>= (+ x45 (* (- 1) x9)) 0)) (>= (+ (* (- 1) x10) x46) 0))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (>= (+ x47 (* (- 1) x11)) 0) (>= (+ x48 (* (- 1) x12)) 0)) (>= (+ (* (- 1) x13) x49) 0)) (>= (+ (* (- 1) x14) x50) 0)) (>= (+ x51 (* (- 1) x15)) 0)) (>= (+ x52 (* (- 1) x16)) 0)) (>= (+ (* (- 1) x17) x53) 0)) (>= (+ x54 (* (- 1) x18)) 0)) (>= (+ x55 (* (- 1) x19)) 0)) (>= (+ (* (- 1) x20) x56) 0)) (>= (+ x57 (* (- 1) x21)) 0)) (>= (+ x58 (* (- 1) x22)) 0)) (>= (+ (* (- 1) x23) x59) 0)) (>= (+ (* (- 1) x24) x60) 0)) (>= (+ x61 (* (- 1) x25)) 0)) (>= (+ x62 (* (- 1) x26)) 0)) (>= (+ (* (- 1) x27) x63) 0)) (>= (+ x64 (* (- 1) x28)) 0)) (>= (+ x65 (* (- 1) x29)) 0)) (>= (+ (* (- 1) x30) x66) 0)) (>= (+ (* (- 1) x31) x67) 0)) (>= (+ x68 (* (- 1) x32)) 0)) (>= (+ x69 (* (- 1) x33)) 0)) (>= (+ (* (- 1) x34) x70) 0)) (>= (+ x71 (* (- 1) x35)) 0)))) (and (and (and (not (<= (+ x0 (* (- 1) x36) (* x3 x8) (* x4 x9) (* x6 x1) (* x7 x2) (* x10 x5)) 0)) (>= (+ x0 (* (- 1) x36) (* x3 x8) (* x4 x9) (* x6 x1) (* x7 x2) (* x10 x5)) 0)) (and (and (and (and (>= (+ (* (- 1) x37) (* x2 x16) (* x3 x21) (* x4 x26) (* x11 x1) (* x31 x5)) 0) (>= (+ (* (- 1) x38) (* x1 x12) (* x3 x22) (* x17 x2) (* x27 x4) (* x32 x5)) 0)) (>= (+ (* (- 1) x39) (* x4 x28) (* x5 x33) (* x13 x1) (* x18 x2) (* x23 x3)) 0)) (>= (+ (* (- 1) x40) (* x2 x19) (* x3 x24) (* x4 x29) (* x14 x1) (* x34 x5)) 0)) (>= (+ (* (- 1) x41) (* x1 x15) (* x3 x25) (* x20 x2) (* x30 x4) (* x35 x5)) 0))) (and (and (not (<= (+ (* x3 x8) (* x4 x9) (* (- 1) (* x1 x42)) (* (- 1) (* x2 x43)) (* (- 1) (* x3 x44)) (* (- 1) (* x4 x45)) (* (- 1) (* x5 x46)) (* x6 x1) (* x7 x2) (* x10 x5)) 0)) (>= (+ (* x3 x8) (* x4 x9) (* (- 1) (* x1 x42)) (* (- 1) (* x2 x43)) (* (- 1) (* x3 x44)) (* (- 1) (* x4 x45)) (* (- 1) (* x5 x46)) (* x6 x1) (* x7 x2) (* x10 x5)) 0)) (and (and (and (and (>= (+ (* x2 x16) (* x3 x21) (* x4 x26) (* (- 1) (* x4 x62)) (* (- 1) (* x5 x67)) (* x11 x1) (* x31 x5) (* (- 1) (* x47 x1)) (* (- 1) (* x52 x2)) (* (- 1) (* x57 x3))) 0) (>= (+ (* x1 x12) (* x3 x22) (* (- 1) (* x2 x53)) (* (- 1) (* x3 x58)) (* (- 1) (* x4 x63)) (* x17 x2) (* x27 x4) (* x32 x5) (* (- 1) (* x48 x1)) (* (- 1) (* x68 x5))) 0)) (>= (+ (* x4 x28) (* x5 x33) (* (- 1) (* x1 x49)) (* (- 1) (* x3 x59)) (* x13 x1) (* x18 x2) (* x23 x3) (* (- 1) (* x54 x2)) (* (- 1) (* x64 x4)) (* (- 1) (* x69 x5))) 0)) (>= (+ (* x2 x19) (* x3 x24) (* x4 x29) (* (- 1) (* x1 x50)) (* (- 1) (* x3 x60)) (* (- 1) (* x5 x70)) (* x14 x1) (* x34 x5) (* (- 1) (* x55 x2)) (* (- 1) (* x65 x4))) 0)) (>= (+ (* x1 x15) (* x3 x25) (* (- 1) (* x3 x61)) (* (- 1) (* x4 x66)) (* x20 x2) (* x30 x4) (* x35 x5) (* (- 1) (* x51 x1)) (* (- 1) (* x56 x2)) (* (- 1) (* x71 x5))) 0))))))
(exit)
(check-sat)
