if (CAPD_INCLUDE_DIR AND CAPD_LIBRARIES)
  # Already in cache, be silent
  set(CAPD_FIND_QUIETLY TRUE)
endif (CAPD_INCLUDE_DIR AND CAPD_LIBRARIES)

MESSAGE( "CMAKE_SYSTEM_INCLUDE_PATH=${CMAKE_SYSTEM_INCLUDE_PATH}" )
MESSAGE( "CMAKE_SYSTEM_LIBRARY_PATH=${CMAKE_SYSTEM_LIBRARY_PATH}" )

find_path(CAPD_INCLUDE_DIR NAMES capdlib.h REQUIRED)
find_path(CAPD_CONFIG_DIR NAMES capd-config REQUIRED)
find_library(CAPD_LIBRARIES NAMES capd capddynsys REQUIRED)

#find_library(CAPDXX_LIBRARIES NAMES gmpxx libgmpxx )
#MESSAGE(STATUS "CAPD: " ${CAPD_LIBRARIES}) # " " ${CAPDXX_LIBRARIES} )

include(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(CAPD DEFAULT_MSG CAPD_INCLUDE_DIR CAPD_LIBRARIES)
mark_as_advanced(CAPD_INCLUDE_DIR CAPD_LIBRARIES)

MESSAGE( "CAPD_LIB=${CAPD_LIBRARIES}" )
MESSAGE( "CAPD_CONFIG=${CAPD_CONFIG_DIR}" )
#MESSAGE( "CMAKE_SYSTEM_LIBRARY_PATH=${CMAKE_SYSTEM_LIBRARY_PATH}" )

execute_process(COMMAND ${CAPD_CONFIG_DIR}/capd-config "--libs"
    OUTPUT_VARIABLE CAPD_LD_FLAGS)
string(STRIP ${CAPD_LD_FLAGS} CAPD_LD_FLAGS)
MESSAGE( "CAPD_LIB_FLAGS=${CAPD_LD_FLAGS}")

execute_process(COMMAND ${CAPD_CONFIG_DIR}/capd-config "--cflags"
    OUTPUT_VARIABLE CAPD_CFLAGS)
string(STRIP ${CAPD_CFLAGS} CAPD_CFLAGS)
MESSAGE( "CAPD_LIB_FLAGS=${CAPD_CFLAGS}")
