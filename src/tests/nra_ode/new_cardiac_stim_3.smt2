(set-logic QF_NRA_ODE)
(declare-fun w_0_1_t () Real)
(declare-fun w_0_1_0 () Real)
(declare-fun w_1_2_t () Real)
(declare-fun w_1_2_0 () Real)
(declare-fun w_2_3_t () Real)
(declare-fun w_2_3_0 () Real)
(declare-fun w_3_4_t () Real)
(declare-fun w_3_4_0 () Real)
(declare-fun v_0_1_t () Real)
(declare-fun v_0_1_0 () Real)
(declare-fun v_1_2_t () Real)
(declare-fun v_1_2_0 () Real)
(declare-fun v_2_3_t () Real)
(declare-fun v_2_3_0 () Real)
(declare-fun v_3_4_t () Real)
(declare-fun v_3_4_0 () Real)
(declare-fun u_0_1_t () Real)
(declare-fun u_0_1_0 () Real)
(declare-fun u_1_2_t () Real)
(declare-fun u_1_2_0 () Real)
(declare-fun u_2_3_t () Real)
(declare-fun u_2_3_0 () Real)
(declare-fun u_3_4_t () Real)
(declare-fun u_3_4_0 () Real)
(declare-fun tau_0_1_t () Real)
(declare-fun tau_0_1_0 () Real)
(declare-fun tau_1_2_t () Real)
(declare-fun tau_1_2_0 () Real)
(declare-fun tau_2_3_t () Real)
(declare-fun tau_2_3_0 () Real)
(declare-fun tau_3_4_t () Real)
(declare-fun tau_3_4_0 () Real)
(declare-fun s_0_1_t () Real)
(declare-fun s_0_1_0 () Real)
(declare-fun s_1_2_t () Real)
(declare-fun s_1_2_0 () Real)
(declare-fun s_2_3_t () Real)
(declare-fun s_2_3_0 () Real)
(declare-fun s_3_4_t () Real)
(declare-fun s_3_4_0 () Real)
(declare-fun time_1 () Real)
(declare-fun time_4 () Real)
(declare-fun time_5 () Real)
(declare-fun time_6 () Real)
(declare-fun time_9 () Real)
(declare-fun time_10 () Real)
(declare-fun time_11 () Real)
(declare-fun time_14 () Real)
(declare-fun time_12 () Real)
(declare-fun time_16 () Real)
(declare-fun time_17 () Real)
(declare-fun mode_0 () Real)
(declare-fun mode_1 () Real)
(declare-fun mode_2 () Real)
(declare-fun mode_3 () Real)
(define-ode 1 1 (= d/dt[tau_0_1] 1.000000))
(define-ode 1 5 (= d/dt[u_0_1] ((1.000000 - 0.000000) - ((u_0_1 / 400.000000) + 0.000000))))
(define-ode 1 5 (= d/dt[w_0_1] (((1.000000 - (u_0_1 / 0.070000)) - w_0_1) / (60.000000 + ((15.000000 - 60.000000) * (1.000000 / (1.000000 + exp(((-2.000000 * 65.000000) * (u_0_1 - 0.030000))))))))))
(define-ode 1 4 (= d/dt[v_0_1] ((1.000000 - v_0_1) / 60.000000)))
(define-ode 1 5 (= d/dt[s_0_1] (((1.000000 / (1.000000 + exp(((-2.000000 * 2.099400) * (u_0_1 - 0.908700))))) - s_0_1) / 2.734200)))
(define-ode 6 6 (= d/dt[tau_1_2] 1.000000))
(define-ode 6 10 (= d/dt[u_1_2] ((1.000000 - 0.000000) - ((u_1_2 / 6.000000) + 0.000000))))
(define-ode 6 10 (= d/dt[w_1_2] ((0.940000 - w_1_2) / (60.000000 + ((15.000000 - 60.000000) * (1.000000 / (1.000000 + exp(((-2.000000 * 65.000000) * (u_1_2 - 0.030000))))))))))
(define-ode 6 9 (= d/dt[v_1_2] ((0.000000 - v_1_2) / 1150.000000)))
(define-ode 6 10 (= d/dt[s_1_2] (((1.000000 / (1.000000 + exp(((-2.000000 * 2.099400) * (u_1_2 - 0.908700))))) - s_1_2) / 2.734200)))
(define-ode 11 11 (= d/dt[tau_2_3] 1.000000))
(define-ode 11 12 (= d/dt[u_2_3] ((1.000000 - 0.000000) - ((1.000000 / (30.018100 + ((0.995700 - 30.018100) * (1.000000 / (1.000000 + exp(((-2.000000 * 2.045800) * (u_2_3 - 0.650000)))))))) + (0.000000 - ((w_2_3 * s_2_3) / 1.887500))))))
(define-ode 11 12 (= d/dt[w_2_3] ((0.000000 - w_2_3) / 200.000000)))
(define-ode 11 14 (= d/dt[v_2_3] ((0.000000 - v_2_3) / 1150.000000)))
(define-ode 11 12 (= d/dt[s_2_3] (((1.000000 / (1.000000 + exp(((-2.000000 * 2.099400) * (u_2_3 - 0.908700))))) - s_2_3) / 16.000000)))
(define-ode 16 16 (= d/dt[tau_3_4] 1.000000))
(define-ode 16 17 (= d/dt[u_3_4] ((1.000000 - (0.000000 - (((v_3_4 * (u_3_4 - 0.300000)) * (1.550000 - u_3_4)) / 0.110000))) - ((1.000000 / (30.018100 + ((0.995700 - 30.018100) * (1.000000 / (1.000000 + exp(((-2.000000 * 2.045800) * (u_3_4 - 0.650000)))))))) + (0.000000 - ((w_3_4 * s_3_4) / 1.887500))))))
(define-ode 16 17 (= d/dt[w_3_4] ((0.000000 - w_3_4) / 200.000000)))
(define-ode 16 17 (= d/dt[v_3_4] ((0.000000 - v_3_4) / 1.450600)))
(define-ode 16 17 (= d/dt[s_3_4] (((1.000000 / (1.000000 + exp(((-2.000000 * 2.099400) * (u_3_4 - 0.908700))))) - s_3_4) / 16.000000)))
(assert (<= 0.000000 w_0_1_t))
(assert (<= w_0_1_t 1.500000))
(assert (<= 0.000000 w_0_1_0))
(assert (<= w_0_1_0 1.500000))
(assert (<= 0.000000 w_1_2_t))
(assert (<= w_1_2_t 1.500000))
(assert (<= 0.000000 w_1_2_0))
(assert (<= w_1_2_0 1.500000))
(assert (<= 0.000000 w_2_3_t))
(assert (<= w_2_3_t 1.500000))
(assert (<= 0.000000 w_2_3_0))
(assert (<= w_2_3_0 1.500000))
(assert (<= 0.000000 w_3_4_t))
(assert (<= w_3_4_t 1.500000))
(assert (<= 0.000000 w_3_4_0))
(assert (<= w_3_4_0 1.500000))
(assert (<= 0.000000 v_0_1_t))
(assert (<= v_0_1_t 1.200000))
(assert (<= 0.000000 v_0_1_0))
(assert (<= v_0_1_0 1.200000))
(assert (<= 0.000000 v_1_2_t))
(assert (<= v_1_2_t 1.200000))
(assert (<= 0.000000 v_1_2_0))
(assert (<= v_1_2_0 1.200000))
(assert (<= 0.000000 v_2_3_t))
(assert (<= v_2_3_t 1.200000))
(assert (<= 0.000000 v_2_3_0))
(assert (<= v_2_3_0 1.200000))
(assert (<= 0.000000 v_3_4_t))
(assert (<= v_3_4_t 1.200000))
(assert (<= 0.000000 v_3_4_0))
(assert (<= v_3_4_0 1.200000))
(assert (<= 0.000000 u_0_1_t))
(assert (<= u_0_1_t 1.800000))
(assert (<= 0.000000 u_0_1_0))
(assert (<= u_0_1_0 1.800000))
(assert (<= 0.000000 u_1_2_t))
(assert (<= u_1_2_t 1.800000))
(assert (<= 0.000000 u_1_2_0))
(assert (<= u_1_2_0 1.800000))
(assert (<= 0.000000 u_2_3_t))
(assert (<= u_2_3_t 1.800000))
(assert (<= 0.000000 u_2_3_0))
(assert (<= u_2_3_0 1.800000))
(assert (<= 0.000000 u_3_4_t))
(assert (<= u_3_4_t 1.800000))
(assert (<= 0.000000 u_3_4_0))
(assert (<= u_3_4_0 1.800000))
(assert (<= 0.000000 tau_0_1_t))
(assert (<= tau_0_1_t 1.000000))
(assert (<= 0.000000 tau_0_1_0))
(assert (<= tau_0_1_0 1.000000))
(assert (<= 0.000000 tau_1_2_t))
(assert (<= tau_1_2_t 1.000000))
(assert (<= 0.000000 tau_1_2_0))
(assert (<= tau_1_2_0 1.000000))
(assert (<= 0.000000 tau_2_3_t))
(assert (<= tau_2_3_t 1.000000))
(assert (<= 0.000000 tau_2_3_0))
(assert (<= tau_2_3_0 1.000000))
(assert (<= 0.000000 tau_3_4_t))
(assert (<= tau_3_4_t 1.000000))
(assert (<= 0.000000 tau_3_4_0))
(assert (<= tau_3_4_0 1.000000))
(assert (<= 0.000000 s_0_1_t))
(assert (<= s_0_1_t 1.000000))
(assert (<= 0.000000 s_0_1_0))
(assert (<= s_0_1_0 1.000000))
(assert (<= 0.000000 s_1_2_t))
(assert (<= s_1_2_t 1.000000))
(assert (<= 0.000000 s_1_2_0))
(assert (<= s_1_2_0 1.000000))
(assert (<= 0.000000 s_2_3_t))
(assert (<= s_2_3_t 1.000000))
(assert (<= 0.000000 s_2_3_0))
(assert (<= s_2_3_0 1.000000))
(assert (<= 0.000000 s_3_4_t))
(assert (<= s_3_4_t 1.000000))
(assert (<= 0.000000 s_3_4_0))
(assert (<= s_3_4_0 1.000000))
(assert (<= 0.000000 time_1))
(assert (<= time_1 1.000000))
(assert (<= 0.000000 time_4))
(assert (<= time_4 1.000000))
(assert (<= 0.000000 time_5))
(assert (<= time_5 1.000000))
(assert (<= 0.000000 time_6))
(assert (<= time_6 1.000000))
(assert (<= 0.000000 time_9))
(assert (<= time_9 1.000000))
(assert (<= 0.000000 time_10))
(assert (<= time_10 1.000000))
(assert (<= 0.000000 time_11))
(assert (<= time_11 1.000000))
(assert (<= 0.000000 time_14))
(assert (<= time_14 1.000000))
(assert (<= 0.000000 time_12))
(assert (<= time_12 1.000000))
(assert (<= 0.000000 time_16))
(assert (<= time_16 1.000000))
(assert (<= 0.000000 time_17))
(assert (<= time_17 1.000000))
(assert (<= 1.000000 mode_0))
(assert (<= mode_0 4.000000))
(assert (<= 1.000000 mode_1))
(assert (<= mode_1 4.000000))
(assert (<= 1.000000 mode_2))
(assert (<= mode_2 4.000000))
(assert (<= 1.000000 mode_3))
(assert (<= mode_3 4.000000))
(assert (and (=> (= mode_2 3.000000) (and (= mode_3 4.000000) (>= u_2_3_t 0.300000) (= s_3_4_0 s_2_3_t) (= w_3_4_0 w_2_3_t) (= v_3_4_0 v_2_3_t) (= u_3_4_0 u_2_3_t) (= tau_3_4_0 tau_2_3_t) (forall_t (>= u_3_4_t 0.300000)) (>= u_3_4_t 0.300000) (>= u_3_4_0 0.300000) (forall_t (<= u_3_4_t 2.000000)) (<= u_3_4_t 2.000000) (<= u_3_4_0 2.000000) (forall_t (>= v_3_4_t 0.000000)) (>= v_3_4_t 0.000000) (>= v_3_4_0 0.000000) (forall_t (>= w_3_4_t 0.000000)) (>= w_3_4_t 0.000000) (>= w_3_4_0 0.000000) (forall_t (>= s_3_4_t 0.000000)) (>= s_3_4_t 0.000000) (>= s_3_4_0 0.000000) (forall_t (>= tau_3_4_t 0.000000)) (>= tau_3_4_t 0.000000) (>= tau_3_4_0 0.000000))) (=> (= mode_1 2.000000) (and (= mode_2 3.000000) (>= u_1_2_t 0.013000) (= s_2_3_0 s_1_2_t) (= w_2_3_0 w_1_2_t) (= v_2_3_0 v_1_2_t) (= u_2_3_0 u_1_2_t) (= tau_2_3_0 tau_1_2_t) (forall_t (>= u_2_3_t 0.013000)) (>= u_2_3_t 0.013000) (>= u_2_3_0 0.013000) (forall_t (<= u_2_3_t 0.300000)) (<= u_2_3_t 0.300000) (<= u_2_3_0 0.300000) (forall_t (>= v_2_3_t 0.000000)) (>= v_2_3_t 0.000000) (>= v_2_3_0 0.000000) (forall_t (>= w_2_3_t 0.000000)) (>= w_2_3_t 0.000000) (>= w_2_3_0 0.000000) (forall_t (>= s_2_3_t 0.000000)) (>= s_2_3_t 0.000000) (>= s_2_3_0 0.000000) (forall_t (>= tau_2_3_t 0.000000)) (>= tau_2_3_t 0.000000) (>= tau_2_3_0 0.000000))) (=> (= mode_0 1.000000) (and (= mode_1 2.000000) (>= u_0_1_t 0.006000) (= s_1_2_0 s_0_1_t) (= w_1_2_0 w_0_1_t) (= v_1_2_0 v_0_1_t) (= u_1_2_0 u_0_1_t) (= tau_1_2_0 tau_0_1_t) (forall_t (>= u_1_2_t 0.006000)) (>= u_1_2_t 0.006000) (>= u_1_2_0 0.006000) (forall_t (<= u_1_2_t 0.013000)) (<= u_1_2_t 0.013000) (<= u_1_2_0 0.013000) (forall_t (>= v_1_2_t 0.000000)) (>= v_1_2_t 0.000000) (>= v_1_2_0 0.000000) (forall_t (>= w_1_2_t 0.000000)) (>= w_1_2_t 0.000000) (>= w_1_2_0 0.000000) (forall_t (>= s_1_2_t 0.000000)) (>= s_1_2_t 0.000000) (>= s_1_2_0 0.000000) (forall_t (>= tau_1_2_t 0.000000)) (>= tau_1_2_t 0.000000) (>= tau_1_2_0 0.000000))) (= mode_0 1.000000) (= tau_0_1_0 0.000000) (<= u_0_1_0 0.100000) (>= u_0_1_0 0.000000) (<= v_0_1_0 1.000000) (>= v_0_1_0 0.900000) (<= w_0_1_0 1.000000) (>= w_0_1_0 0.900000) (<= s_0_1_0 0.100000) (>= s_0_1_0 0.000000) (forall_t (>= u_0_1_t 0.000000)) (>= u_0_1_t 0.000000) (>= u_0_1_0 0.000000) (forall_t (<= u_0_1_t 0.006000)) (<= u_0_1_t 0.006000) (<= u_0_1_0 0.006000) (forall_t (>= v_0_1_t 0.000000)) (>= v_0_1_t 0.000000) (>= v_0_1_0 0.000000) (forall_t (>= w_0_1_t 0.000000)) (>= w_0_1_t 0.000000) (>= w_0_1_0 0.000000) (forall_t (>= s_0_1_t 0.000000)) (>= s_0_1_t 0.000000) (>= s_0_1_0 0.000000) (forall_t (>= tau_0_1_t 0.000000)) (>= tau_0_1_t 0.000000) (>= tau_0_1_0 0.000000) (= mode_3 4.000000) (>= s_3_4_t 0.000000) (>= w_3_4_t 0.000000) (>= v_3_4_t 0.000000) (>= u_3_4_t 1.500000) (> tau_3_4_t 0.000000)))
(check-sat)
(exit)
