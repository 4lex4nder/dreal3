(set-logic QF_NRA)
(declare-fun winfstar () Real)
(declare-fun w () Real)
(declare-fun v () Real)
(declare-fun uu () Real)
(declare-fun us () Real)
(declare-fun u () Real)
(declare-fun thetaw () Real)
(declare-fun thetav () Real)
(declare-fun thetao () Real)
(declare-fun s () Real)
(declare-fun ks () Real)
(declare-fun gwp () Real)
(declare-fun gwn () Real)
(declare-fun gwinf () Real)
(declare-fun gw2n () Real)
(declare-fun gw1n () Real)
(declare-fun gvp () Real)
(declare-fun gv2n () Real)
(declare-fun gv1n () Real)
(declare-fun gso2 () Real)
(declare-fun gso1 () Real)
(declare-fun gso () Real)
(declare-fun gsi () Real)
(declare-fun gs2 () Real)
(declare-fun gs1 () Real)
(declare-fun go2 () Real)
(declare-fun go1 () Real)
(declare-fun gfi () Real)
(declare-fun e () Real)

(define-ode (= d/dt[u_1_1_0] (- (+ (+ e_1_1_0 (* (* (- u_1_1_0
thetav_1_1_0) (- uu_1_1_0 u_1_1_0)) (* v_1_1_0 gfi_1_1_0))) (* w_1_1_0
(* s_1_1_0 gsi_1_1_0))) (* gso_1_1_0 u_1_1_0))

))

(define-ode (= d/dt[v_1_1_0] (* (- 0 v_1_1_0) gvp_1_1_0)))
(define-ode (= d/dt[w_1_1_0] (* (- 0 w_1_1_0) gwp_1_1_0)))
(define-ode (= d/dt[s_1_1_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_1_1_0 (- u_1_1_0 us_1_1_0)))))) gs2_1_1_0) (* s_1_1_0 gs2_1_1_0))))
(define-ode (= d/dt[u_0_1_0] (- (+ (+ e_0_1_0 (* (* (- u_0_1_0 thetav_0_1_0) (- uu_0_1_0 u_0_1_0)) (* v_0_1_0 gfi_0_1_0))) (* w_0_1_0 (* s_0_1_0 gsi_0_1_0))) (* gso_0_1_0 u_0_1_0))))
(define-ode (= d/dt[v_0_1_0] (* (- 0 v_0_1_0) gvp_0_1_0)))
(define-ode (= d/dt[w_0_1_0] (* (- 0 w_0_1_0) gwp_0_1_0)))
(define-ode (= d/dt[s_0_1_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_0_1_0 (- u_0_1_0 us_0_1_0)))))) gs2_0_1_0) (* s_0_1_0 gs2_0_1_0))))
(define-ode (= d/dt[u_1_2_0] (- (+ e_1_2_0 (* w_1_2_0 (* s_1_2_0 gsi_1_2_0))) (* gso_1_2_0 u_1_2_0))))
(define-ode (= d/dt[v_1_2_0] (* (- 0 v_1_2_0) gv2n_1_2_0)))
(define-ode (= d/dt[w_1_2_0] (* (- 0 w_1_2_0) gwp_1_2_0)))
(define-ode (= d/dt[s_1_2_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_1_2_0 (- u_1_2_0 us_1_2_0)))))) gs2_1_2_0) (* s_1_2_0 gs2_1_2_0))))
(define-ode (= d/dt[u_1_3_0] (- e_1_3_0 (* u_1_3_0 go2_1_3_0))))
(define-ode (= d/dt[v_1_3_0] (* (- 0 v_1_3_0) gv2n_1_3_0)))
(define-ode (= d/dt[w_1_3_0] (* (- winfstar_1_3_0 w_1_3_0) (* gwn_1_3_0 u_1_3_0))))
(define-ode (= d/dt[s_1_3_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_1_3_0 (- u_1_3_0 us_1_3_0)))))) gs1_1_3_0) (* s_1_3_0 gs1_1_3_0))))
(define-ode (= d/dt[u_1_4_0] (- e_1_4_0 (* u_1_4_0 go1_1_4_0))))
(define-ode (= d/dt[v_1_4_0] (* (- 1 v_1_4_0) gv1n_1_4_0)))
(define-ode (= d/dt[w_1_4_0] (* (- (- 1 (* u_1_4_0 gwinf_1_4_0)) w_1_4_0) (* gwn_1_4_0 u_1_4_0))))
(define-ode (= d/dt[s_1_4_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_1_4_0 (- u_1_4_0 us_1_4_0)))))) gs1_1_4_0) (* s_1_4_0 gs1_1_4_0))))
(define-ode (= d/dt[u_0_1_0] (- (+ (+ e_0_1_0 (* (* (- u_0_1_0 thetav_0_1_0) (- uu_0_1_0 u_0_1_0)) (* v_0_1_0 gfi_0_1_0))) (* w_0_1_0 (* s_0_1_0 gsi_0_1_0))) (* gso_0_1_0 u_0_1_0))))
(define-ode (= d/dt[v_0_1_0] (* (- 0 v_0_1_0) gvp_0_1_0)))
(define-ode (= d/dt[w_0_1_0] (* (- 0 w_0_1_0) gwp_0_1_0)))
(define-ode (= d/dt[s_0_1_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_0_1_0 (- u_0_1_0 us_0_1_0)))))) gs2_0_1_0) (* s_0_1_0 gs2_0_1_0))))
(define-ode (= d/dt[u_1_2_0] (- (+ e_1_2_0 (* w_1_2_0 (* s_1_2_0 gsi_1_2_0))) (* gso_1_2_0 u_1_2_0))))
(define-ode (= d/dt[v_1_2_0] (* (- 0 v_1_2_0) gv2n_1_2_0)))
(define-ode (= d/dt[w_1_2_0] (* (- 0 w_1_2_0) gwp_1_2_0)))
(define-ode (= d/dt[s_1_2_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_1_2_0 (- u_1_2_0 us_1_2_0)))))) gs2_1_2_0) (* s_1_2_0 gs2_1_2_0))))
(define-ode (= d/dt[u_2_1_0] (- (+ (+ e_2_1_0 (* (* (- u_2_1_0 thetav_2_1_0) (- uu_2_1_0 u_2_1_0)) (* v_2_1_0 gfi_2_1_0))) (* w_2_1_0 (* s_2_1_0 gsi_2_1_0))) (* gso_2_1_0 u_2_1_0))))
(define-ode (= d/dt[v_2_1_0] (* (- 0 v_2_1_0) gvp_2_1_0)))
(define-ode (= d/dt[w_2_1_0] (* (- 0 w_2_1_0) gwp_2_1_0)))
(define-ode (= d/dt[s_2_1_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_2_1_0 (- u_2_1_0 us_2_1_0)))))) gs2_2_1_0) (* s_2_1_0 gs2_2_1_0))))
(define-ode (= d/dt[u_1_3_0] (- e_1_3_0 (* u_1_3_0 go2_1_3_0))))
(define-ode (= d/dt[v_1_3_0] (* (- 0 v_1_3_0) gv2n_1_3_0)))
(define-ode (= d/dt[w_1_3_0] (* (- winfstar_1_3_0 w_1_3_0) (* gwn_1_3_0 u_1_3_0))))
(define-ode (= d/dt[s_1_3_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_1_3_0 (- u_1_3_0 us_1_3_0)))))) gs1_1_3_0) (* s_1_3_0 gs1_1_3_0))))
(define-ode (= d/dt[u_1_1_0] (- (+ (+ e_1_1_0 (* (* (- u_1_1_0 thetav_1_1_0) (- uu_1_1_0 u_1_1_0)) (* v_1_1_0 gfi_1_1_0))) (* w_1_1_0 (* s_1_1_0 gsi_1_1_0))) (* gso_1_1_0 u_1_1_0))))
(define-ode (= d/dt[v_1_1_0] (* (- 0 v_1_1_0) gvp_1_1_0)))
(define-ode (= d/dt[w_1_1_0] (* (- 0 w_1_1_0) gwp_1_1_0)))
(define-ode (= d/dt[s_1_1_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_1_1_0 (- u_1_1_0 us_1_1_0)))))) gs2_1_1_0) (* s_1_1_0 gs2_1_1_0))))
(define-ode (= d/dt[u_2_2_0] (- (+ e_2_2_0 (* w_2_2_0 (* s_2_2_0 gsi_2_2_0))) (* gso_2_2_0 u_2_2_0))))
(define-ode (= d/dt[v_2_2_0] (* (- 0 v_2_2_0) gv2n_2_2_0)))
(define-ode (= d/dt[w_2_2_0] (* (- 0 w_2_2_0) gwp_2_2_0)))
(define-ode (= d/dt[s_2_2_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_2_2_0 (- u_2_2_0 us_2_2_0)))))) gs2_2_2_0) (* s_2_2_0 gs2_2_2_0))))
(define-ode (= d/dt[u_1_4_0] (- e_1_4_0 (* u_1_4_0 go1_1_4_0))))
(define-ode (= d/dt[v_1_4_0] (* (- 1 v_1_4_0) gv1n_1_4_0)))
(define-ode (= d/dt[w_1_4_0] (* (- (- 1 (* u_1_4_0 gwinf_1_4_0)) w_1_4_0) (* gwn_1_4_0 u_1_4_0))))
(define-ode (= d/dt[s_1_4_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_1_4_0 (- u_1_4_0 us_1_4_0)))))) gs1_1_4_0) (* s_1_4_0 gs1_1_4_0))))
(define-ode (= d/dt[u_0_1_0] (- (+ (+ e_0_1_0 (* (* (- u_0_1_0 thetav_0_1_0) (- uu_0_1_0 u_0_1_0)) (* v_0_1_0 gfi_0_1_0))) (* w_0_1_0 (* s_0_1_0 gsi_0_1_0))) (* gso_0_1_0 u_0_1_0))))
(define-ode (= d/dt[v_0_1_0] (* (- 0 v_0_1_0) gvp_0_1_0)))
(define-ode (= d/dt[w_0_1_0] (* (- 0 w_0_1_0) gwp_0_1_0)))
(define-ode (= d/dt[s_0_1_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_0_1_0 (- u_0_1_0 us_0_1_0)))))) gs2_0_1_0) (* s_0_1_0 gs2_0_1_0))))
(define-ode (= d/dt[u_1_2_0] (- (+ e_1_2_0 (* w_1_2_0 (* s_1_2_0 gsi_1_2_0))) (* gso_1_2_0 u_1_2_0))))
(define-ode (= d/dt[v_1_2_0] (* (- 0 v_1_2_0) gv2n_1_2_0)))
(define-ode (= d/dt[w_1_2_0] (* (- 0 w_1_2_0) gwp_1_2_0)))
(define-ode (= d/dt[s_1_2_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_1_2_0 (- u_1_2_0 us_1_2_0)))))) gs2_1_2_0) (* s_1_2_0 gs2_1_2_0))))
(define-ode (= d/dt[u_2_3_0] (- e_2_3_0 (* u_2_3_0 go2_2_3_0))))
(define-ode (= d/dt[v_2_3_0] (* (- 0 v_2_3_0) gv2n_2_3_0)))
(define-ode (= d/dt[w_2_3_0] (* (- winfstar_2_3_0 w_2_3_0) (* gwn_2_3_0 u_2_3_0))))
(define-ode (= d/dt[s_2_3_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_2_3_0 (- u_2_3_0 us_2_3_0)))))) gs1_2_3_0) (* s_2_3_0 gs1_2_3_0))))
(define-ode (= d/dt[u_1_3_0] (- e_1_3_0 (* u_1_3_0 go2_1_3_0))))
(define-ode (= d/dt[v_1_3_0] (* (- 0 v_1_3_0) gv2n_1_3_0)))
(define-ode (= d/dt[w_1_3_0] (* (- winfstar_1_3_0 w_1_3_0) (* gwn_1_3_0 u_1_3_0))))
(define-ode (= d/dt[s_1_3_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_1_3_0 (- u_1_3_0 us_1_3_0)))))) gs1_1_3_0) (* s_1_3_0 gs1_1_3_0))))
(define-ode (= d/dt[u_2_4_0] (- e_2_4_0 (* u_2_4_0 go1_2_4_0))))
(define-ode (= d/dt[v_2_4_0] (* (- 1 v_2_4_0) gv1n_2_4_0)))
(define-ode (= d/dt[w_2_4_0] (* (- (- 1 (* u_2_4_0 gwinf_2_4_0)) w_2_4_0) (* gwn_2_4_0 u_2_4_0))))
(define-ode (= d/dt[s_2_4_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_2_4_0 (- u_2_4_0 us_2_4_0)))))) gs1_2_4_0) (* s_2_4_0 gs1_2_4_0))))
(define-ode (= d/dt[u_1_3_0] (- e_1_3_0 (* u_1_3_0 go2_1_3_0))))
(define-ode (= d/dt[v_1_3_0] (* (- 0 v_1_3_0) gv2n_1_3_0)))
(define-ode (= d/dt[w_1_3_0] (* (- winfstar_1_3_0 w_1_3_0) (* gwn_1_3_0 u_1_3_0))))
(define-ode (= d/dt[s_1_3_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_1_3_0 (- u_1_3_0 us_1_3_0)))))) gs1_1_3_0) (* s_1_3_0 gs1_1_3_0))))
(define-ode (= d/dt[u_1_1_0] (- (+ (+ e_1_1_0 (* (* (- u_1_1_0 thetav_1_1_0) (- uu_1_1_0 u_1_1_0)) (* v_1_1_0 gfi_1_1_0))) (* w_1_1_0 (* s_1_1_0 gsi_1_1_0))) (* gso_1_1_0 u_1_1_0))))
(define-ode (= d/dt[v_1_1_0] (* (- 0 v_1_1_0) gvp_1_1_0)))
(define-ode (= d/dt[w_1_1_0] (* (- 0 w_1_1_0) gwp_1_1_0)))
(define-ode (= d/dt[s_1_1_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_1_1_0 (- u_1_1_0 us_1_1_0)))))) gs2_1_1_0) (* s_1_1_0 gs2_1_1_0))))
(define-ode (= d/dt[u_2_2_0] (- (+ e_2_2_0 (* w_2_2_0 (* s_2_2_0 gsi_2_2_0))) (* gso_2_2_0 u_2_2_0))))
(define-ode (= d/dt[v_2_2_0] (* (- 0 v_2_2_0) gv2n_2_2_0)))
(define-ode (= d/dt[w_2_2_0] (* (- 0 w_2_2_0) gwp_2_2_0)))
(define-ode (= d/dt[s_2_2_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_2_2_0 (- u_2_2_0 us_2_2_0)))))) gs2_2_2_0) (* s_2_2_0 gs2_2_2_0))))
(define-ode (= d/dt[u_3_1_0] (- (+ (+ e_3_1_0 (* (* (- u_3_1_0 thetav_3_1_0) (- uu_3_1_0 u_3_1_0)) (* v_3_1_0 gfi_3_1_0))) (* w_3_1_0 (* s_3_1_0 gsi_3_1_0))) (* gso_3_1_0 u_3_1_0))))
(define-ode (= d/dt[v_3_1_0] (* (- 0 v_3_1_0) gvp_3_1_0)))
(define-ode (= d/dt[w_3_1_0] (* (- 0 w_3_1_0) gwp_3_1_0)))
(define-ode (= d/dt[s_3_1_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_3_1_0 (- u_3_1_0 us_3_1_0)))))) gs2_3_1_0) (* s_3_1_0 gs2_3_1_0))))
(define-ode (= d/dt[u_1_4_0] (- e_1_4_0 (* u_1_4_0 go1_1_4_0))))
(define-ode (= d/dt[v_1_4_0] (* (- 1 v_1_4_0) gv1n_1_4_0)))
(define-ode (= d/dt[w_1_4_0] (* (- (- 1 (* u_1_4_0 gwinf_1_4_0)) w_1_4_0) (* gwn_1_4_0 u_1_4_0))))
(define-ode (= d/dt[s_1_4_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_1_4_0 (- u_1_4_0 us_1_4_0)))))) gs1_1_4_0) (* s_1_4_0 gs1_1_4_0))))
(define-ode (= d/dt[u_0_1_0] (- (+ (+ e_0_1_0 (* (* (- u_0_1_0 thetav_0_1_0) (- uu_0_1_0 u_0_1_0)) (* v_0_1_0 gfi_0_1_0))) (* w_0_1_0 (* s_0_1_0 gsi_0_1_0))) (* gso_0_1_0 u_0_1_0))))
(define-ode (= d/dt[v_0_1_0] (* (- 0 v_0_1_0) gvp_0_1_0)))
(define-ode (= d/dt[w_0_1_0] (* (- 0 w_0_1_0) gwp_0_1_0)))
(define-ode (= d/dt[s_0_1_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_0_1_0 (- u_0_1_0 us_0_1_0)))))) gs2_0_1_0) (* s_0_1_0 gs2_0_1_0))))
(define-ode (= d/dt[u_1_2_0] (- (+ e_1_2_0 (* w_1_2_0 (* s_1_2_0 gsi_1_2_0))) (* gso_1_2_0 u_1_2_0))))
(define-ode (= d/dt[v_1_2_0] (* (- 0 v_1_2_0) gv2n_1_2_0)))
(define-ode (= d/dt[w_1_2_0] (* (- 0 w_1_2_0) gwp_1_2_0)))
(define-ode (= d/dt[s_1_2_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_1_2_0 (- u_1_2_0 us_1_2_0)))))) gs2_1_2_0) (* s_1_2_0 gs2_1_2_0))))
(define-ode (= d/dt[u_2_3_0] (- e_2_3_0 (* u_2_3_0 go2_2_3_0))))
(define-ode (= d/dt[v_2_3_0] (* (- 0 v_2_3_0) gv2n_2_3_0)))
(define-ode (= d/dt[w_2_3_0] (* (- winfstar_2_3_0 w_2_3_0) (* gwn_2_3_0 u_2_3_0))))
(define-ode (= d/dt[s_2_3_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_2_3_0 (- u_2_3_0 us_2_3_0)))))) gs1_2_3_0) (* s_2_3_0 gs1_2_3_0))))
(define-ode (= d/dt[u_0_1_0] (- (+ (+ e_0_1_0 (* (* (- u_0_1_0 thetav_0_1_0) (- uu_0_1_0 u_0_1_0)) (* v_0_1_0 gfi_0_1_0))) (* w_0_1_0 (* s_0_1_0 gsi_0_1_0))) (* gso_0_1_0 u_0_1_0))))
(define-ode (= d/dt[v_0_1_0] (* (- 0 v_0_1_0) gvp_0_1_0)))
(define-ode (= d/dt[w_0_1_0] (* (- 0 w_0_1_0) gwp_0_1_0)))
(define-ode (= d/dt[s_0_1_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_0_1_0 (- u_0_1_0 us_0_1_0)))))) gs2_0_1_0) (* s_0_1_0 gs2_0_1_0))))
(define-ode (= d/dt[u_1_2_0] (- (+ e_1_2_0 (* w_1_2_0 (* s_1_2_0 gsi_1_2_0))) (* gso_1_2_0 u_1_2_0))))
(define-ode (= d/dt[v_1_2_0] (* (- 0 v_1_2_0) gv2n_1_2_0)))
(define-ode (= d/dt[w_1_2_0] (* (- 0 w_1_2_0) gwp_1_2_0)))
(define-ode (= d/dt[s_1_2_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_1_2_0 (- u_1_2_0 us_1_2_0)))))) gs2_1_2_0) (* s_1_2_0 gs2_1_2_0))))
(define-ode (= d/dt[u_2_1_0] (- (+ (+ e_2_1_0 (* (* (- u_2_1_0 thetav_2_1_0) (- uu_2_1_0 u_2_1_0)) (* v_2_1_0 gfi_2_1_0))) (* w_2_1_0 (* s_2_1_0 gsi_2_1_0))) (* gso_2_1_0 u_2_1_0))))
(define-ode (= d/dt[v_2_1_0] (* (- 0 v_2_1_0) gvp_2_1_0)))
(define-ode (= d/dt[w_2_1_0] (* (- 0 w_2_1_0) gwp_2_1_0)))
(define-ode (= d/dt[s_2_1_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_2_1_0 (- u_2_1_0 us_2_1_0)))))) gs2_2_1_0) (* s_2_1_0 gs2_2_1_0))))
(define-ode (= d/dt[u_3_2_0] (- (+ e_3_2_0 (* w_3_2_0 (* s_3_2_0 gsi_3_2_0))) (* gso_3_2_0 u_3_2_0))))
(define-ode (= d/dt[v_3_2_0] (* (- 0 v_3_2_0) gv2n_3_2_0)))
(define-ode (= d/dt[w_3_2_0] (* (- 0 w_3_2_0) gwp_3_2_0)))
(define-ode (= d/dt[s_3_2_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_3_2_0 (- u_3_2_0 us_3_2_0)))))) gs2_3_2_0) (* s_3_2_0 gs2_3_2_0))))
(define-ode (= d/dt[u_1_3_0] (- e_1_3_0 (* u_1_3_0 go2_1_3_0))))
(define-ode (= d/dt[v_1_3_0] (* (- 0 v_1_3_0) gv2n_1_3_0)))
(define-ode (= d/dt[w_1_3_0] (* (- winfstar_1_3_0 w_1_3_0) (* gwn_1_3_0 u_1_3_0))))
(define-ode (= d/dt[s_1_3_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_1_3_0 (- u_1_3_0 us_1_3_0)))))) gs1_1_3_0) (* s_1_3_0 gs1_1_3_0))))
(define-ode (= d/dt[u_2_4_0] (- e_2_4_0 (* u_2_4_0 go1_2_4_0))))
(define-ode (= d/dt[v_2_4_0] (* (- 1 v_2_4_0) gv1n_2_4_0)))
(define-ode (= d/dt[w_2_4_0] (* (- (- 1 (* u_2_4_0 gwinf_2_4_0)) w_2_4_0) (* gwn_2_4_0 u_2_4_0))))
(define-ode (= d/dt[s_2_4_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_2_4_0 (- u_2_4_0 us_2_4_0)))))) gs1_2_4_0) (* s_2_4_0 gs1_2_4_0))))
(define-ode (= d/dt[u_1_3_0] (- e_1_3_0 (* u_1_3_0 go2_1_3_0))))
(define-ode (= d/dt[v_1_3_0] (* (- 0 v_1_3_0) gv2n_1_3_0)))
(define-ode (= d/dt[w_1_3_0] (* (- winfstar_1_3_0 w_1_3_0) (* gwn_1_3_0 u_1_3_0))))
(define-ode (= d/dt[s_1_3_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_1_3_0 (- u_1_3_0 us_1_3_0)))))) gs1_1_3_0) (* s_1_3_0 gs1_1_3_0))))
(define-ode (= d/dt[u_1_1_0] (- (+ (+ e_1_1_0 (* (* (- u_1_1_0 thetav_1_1_0) (- uu_1_1_0 u_1_1_0)) (* v_1_1_0 gfi_1_1_0))) (* w_1_1_0 (* s_1_1_0 gsi_1_1_0))) (* gso_1_1_0 u_1_1_0))))
(define-ode (= d/dt[v_1_1_0] (* (- 0 v_1_1_0) gvp_1_1_0)))
(define-ode (= d/dt[w_1_1_0] (* (- 0 w_1_1_0) gwp_1_1_0)))
(define-ode (= d/dt[s_1_1_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_1_1_0 (- u_1_1_0 us_1_1_0)))))) gs2_1_1_0) (* s_1_1_0 gs2_1_1_0))))
(define-ode (= d/dt[u_2_2_0] (- (+ e_2_2_0 (* w_2_2_0 (* s_2_2_0 gsi_2_2_0))) (* gso_2_2_0 u_2_2_0))))
(define-ode (= d/dt[v_2_2_0] (* (- 0 v_2_2_0) gv2n_2_2_0)))
(define-ode (= d/dt[w_2_2_0] (* (- 0 w_2_2_0) gwp_2_2_0)))
(define-ode (= d/dt[s_2_2_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_2_2_0 (- u_2_2_0 us_2_2_0)))))) gs2_2_2_0) (* s_2_2_0 gs2_2_2_0))))
(define-ode (= d/dt[u_3_3_0] (- e_3_3_0 (* u_3_3_0 go2_3_3_0))))
(define-ode (= d/dt[v_3_3_0] (* (- 0 v_3_3_0) gv2n_3_3_0)))
(define-ode (= d/dt[w_3_3_0] (* (- winfstar_3_3_0 w_3_3_0) (* gwn_3_3_0 u_3_3_0))))
(define-ode (= d/dt[s_3_3_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_3_3_0 (- u_3_3_0 us_3_3_0)))))) gs1_3_3_0) (* s_3_3_0 gs1_3_3_0))))
(define-ode (= d/dt[u_1_4_0] (- e_1_4_0 (* u_1_4_0 go1_1_4_0))))
(define-ode (= d/dt[v_1_4_0] (* (- 1 v_1_4_0) gv1n_1_4_0)))
(define-ode (= d/dt[w_1_4_0] (* (- (- 1 (* u_1_4_0 gwinf_1_4_0)) w_1_4_0) (* gwn_1_4_0 u_1_4_0))))
(define-ode (= d/dt[s_1_4_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_1_4_0 (- u_1_4_0 us_1_4_0)))))) gs1_1_4_0) (* s_1_4_0 gs1_1_4_0))))
(define-ode (= d/dt[u_0_1_0] (- (+ (+ e_0_1_0 (* (* (- u_0_1_0 thetav_0_1_0) (- uu_0_1_0 u_0_1_0)) (* v_0_1_0 gfi_0_1_0))) (* w_0_1_0 (* s_0_1_0 gsi_0_1_0))) (* gso_0_1_0 u_0_1_0))))
(define-ode (= d/dt[v_0_1_0] (* (- 0 v_0_1_0) gvp_0_1_0)))
(define-ode (= d/dt[w_0_1_0] (* (- 0 w_0_1_0) gwp_0_1_0)))
(define-ode (= d/dt[s_0_1_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_0_1_0 (- u_0_1_0 us_0_1_0)))))) gs2_0_1_0) (* s_0_1_0 gs2_0_1_0))))
(define-ode (= d/dt[u_1_2_0] (- (+ e_1_2_0 (* w_1_2_0 (* s_1_2_0 gsi_1_2_0))) (* gso_1_2_0 u_1_2_0))))
(define-ode (= d/dt[v_1_2_0] (* (- 0 v_1_2_0) gv2n_1_2_0)))
(define-ode (= d/dt[w_1_2_0] (* (- 0 w_1_2_0) gwp_1_2_0)))
(define-ode (= d/dt[s_1_2_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_1_2_0 (- u_1_2_0 us_1_2_0)))))) gs2_1_2_0) (* s_1_2_0 gs2_1_2_0))))
(define-ode (= d/dt[u_2_3_0] (- e_2_3_0 (* u_2_3_0 go2_2_3_0))))
(define-ode (= d/dt[v_2_3_0] (* (- 0 v_2_3_0) gv2n_2_3_0)))
(define-ode (= d/dt[w_2_3_0] (* (- winfstar_2_3_0 w_2_3_0) (* gwn_2_3_0 u_2_3_0))))
(define-ode (= d/dt[s_2_3_0] (- (* (/ 1 (+ 1 (exp (* -2 (* ks_2_3_0 (- u_2_3_0 us_2_3_0)))))) gs1_2_3_0) (* s_2_3_0 gs1_2_3_0))))
(define-ode (= d/dt[u_3_4_0] (- e_3_4_0 (* u_3_4_0 go1_3_4_0))))
(define-ode (= d/dt[v_3_4_0] (* (- 1 v_3_4_0) gv1n_3_4_0)))
(define-ode (= d/dt[w_3_4_0] (* (- (- 1 (* u_3_4_0 gwinf_3_4_0)) w_3_4_0) (* gwn_3_4_0 u_3_4_0))))(assert
(and
(and (<= (/ 94 100) winfstar) (<= winfstar (/ 94 100)))(and (<= (/ 95 100) w) (<= w 1))(and (<= (/ 95 100) v) (<= v 1))(and (<= (/ 155 100) uu) (<= uu (/ 155 100)))(and (<= (/ 9087 10000) us) (<= us (/ 9087 10000)))(and (<= 0 u) (<= u 2))(and (<= (/ 13 100) thetaw) (<= thetaw (/ 13 100)))(and (<= (/ 3 10) thetav) (<= thetav (/ 3 10)))(and (<= (/ 006 1000) thetao) (<= thetao (/ 006 1000)))(and (<= 0 s) (<= s (/ 01 100)))(and (<= (/ 20994 10000) ks) (<= ks (/ 20994 10000)))(and (<= (/ 005 1000) gwp) (<= gwp (/ 005 1000)))(and (<= (/ 01666 100000) gwn) (<= gwn (/ 01666 100000)))(and (<= (/ 1428571 10000) gwinf) (<= gwinf (/ 1428571 10000)))(and (<= (/ 06666 100000) gw2n) (<= gw2n (/ 06666 100000)))(and (<= (/ 01666 100000) gw1n) (<= gw1n (/ 01666 100000)))(and (<= (/ 68936 100000) gvp) (<= gvp (/ 68936 100000)))(and (<= (/ 00086 100000) gv2n) (<= gv2n (/ 00086 100000)))(and (<= (/ 01666 100000) gv1n) (<= gv1n (/ 01666 100000)))(and (<= (/ 100431 100000) gso2) (<= gso2 (/ 100431 100000)))(and (<= (/ 03331 100000) gso1) (<= gso1 (/ 03331 100000)))(and (<= (/ 33331 100000) gso) (<= gso (/ 33331 100000)))(and (<= (/ 5298 10000) gsi) (<= gsi (/ 5298 10000)))(and (<= (/ 0625 10000) gs2) (<= gs2 (/ 0625 10000)))(and (<= (/ 36453 100000) gs1) (<= gs1 (/ 36453 100000)))(and (<= (/ 16666 100000) go2) (<= go2 (/ 16666 100000)))(and (<= (/ 0025 10000) go1) (<= go1 (/ 0025 10000)))(and (<= (/ 90909 10000) gfi) (<= gfi (/ 90909 10000)))(and (<= (/ 27182 10000) e) (<= e (/ 27182 10000)))(and (not (and (< u_3_1_t thetav_3_1_t) (< u_2_1_t thetav_2_1_t)))))
)
(check-sat)
(exit)
